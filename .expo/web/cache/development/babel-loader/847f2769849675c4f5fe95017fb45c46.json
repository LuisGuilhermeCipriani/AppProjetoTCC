{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\GIT\\\\AppProjetoTCC\\\\src\\\\Index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { AppColors } from \"./colors/AppColors\";\nimport Header from \"./components/header/Header\";\n\nvar Index = function (_Component) {\n  _inherits(Index, _Component);\n\n  var _super = _createSuper(Index);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      user: {}\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var user;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = JSON;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@APP:user'));\n\n            case 3:\n              _context.t1 = _context.sent;\n              user = _context.t0.parse.call(_context.t0, _context.t1);\n              this.setState({\n                user: user\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var navigation = this.props.navigation;\n      var type = this.state.user.type;\n      return React.createElement(View, {\n        style: styles.viewRender1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      }, React.createElement(Header, {\n        title: \"In\\xEDcio\",\n        menuIcon: \"menu\",\n        navigation: navigation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.viewRender2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.viewRender3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }, type == 'S' && React.createElement(TouchableOpacity, {\n        style: styles.field1,\n        onPress: function onPress() {\n          navigation.navigate('ScreenSelectionDisciplines');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }\n      }, React.createElement(Icon, {\n        name: \"square-o\",\n        color: AppColors.iconColor1,\n        size: 40,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 33\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 33\n        }\n      }, \"Responder \", \"\\n\", \"Question\\xE1rio\")), type == 'P' && React.createElement(TouchableOpacity, {\n        style: styles.field1,\n        onPress: function onPress() {\n          navigation.navigate('ScreenSelectionDisciplineReport');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }\n      }, React.createElement(Icon, {\n        name: \"list-alt\",\n        color: AppColors.iconColor1,\n        size: 40,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 33\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 33\n        }\n      }, \"Gerar Relat\\xF3rio\")), (type == 'S' || type == 'P') && React.createElement(TouchableOpacity, {\n        style: styles.field2,\n        onPress: function onPress() {\n          navigation.navigate('ScreenSearchDisciplines');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }\n      }, React.createElement(Icon, {\n        name: \"search\",\n        color: AppColors.iconColor1,\n        size: 40,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 33\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 33\n        }\n      }, \"Consultar \", \"\\n\", \"Disciplinas\"))), React.createElement(View, {\n        style: styles.viewRender4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }, (type == 'S' || type == 'P') && React.createElement(TouchableOpacity, {\n        style: styles.field3,\n        onPress: function onPress() {\n          navigation.navigate('ScreenSearchDisciplines');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }\n      }, React.createElement(Icon, {\n        name: \"file\",\n        color: AppColors.iconColor1,\n        size: 40,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 33\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 33\n        }\n      }, \"Sobre o \", \"\\n\", \"Aplicativo\")), type == 'P' && React.createElement(TouchableOpacity, {\n        style: styles.field4,\n        onPress: function onPress() {\n          navigation.navigate('ScreenSelectionDisciplineQuestionnaire');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }\n      }, React.createElement(Icon, {\n        name: \"line-chart\",\n        color: AppColors.iconColor1,\n        size: 40,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 33\n        }\n      }, \"Consultar \", \"\\n\", \"Desempenho\")), type == 'S' && React.createElement(TouchableOpacity, {\n        style: styles.field4,\n        onPress: function onPress() {\n          navigation.navigate('ScreenAnsweredQuestionnaires');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }\n      }, React.createElement(Icon, {\n        name: \"check-square-o\",\n        color: AppColors.iconColor1,\n        size: 40,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 33\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 33\n        }\n      }, \"Question\\xE1rios \", \"\\n\", \"Respondidos\")))));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nexport { Index as default };\nvar styles = StyleSheet.create({\n  field1: {\n    backgroundColor: AppColors.backgroundColor7,\n    width: '55%',\n    height: 150,\n    borderRadius: 10,\n    marginRight: 5,\n    marginBottom: 5,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  field2: {\n    backgroundColor: AppColors.backgroundColor8,\n    width: '35%',\n    height: 150,\n    borderRadius: 10,\n    marginLeft: 5,\n    marginBottom: 5,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  field3: {\n    backgroundColor: AppColors.backgroundColor8,\n    width: '35%',\n    height: 150,\n    borderRadius: 10,\n    marginRight: 5,\n    marginTop: 5,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  field4: {\n    backgroundColor: AppColors.backgroundColor7,\n    width: '55%',\n    height: 150,\n    borderRadius: 10,\n    marginLeft: 5,\n    marginTop: 5,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    color: 'white',\n    fontSize: 18,\n    marginLeft: 10,\n    marginTop: 10,\n    textShadowColor: AppColors.textShadowColor2,\n    textShadowOffset: {\n      width: -1,\n      height: 1\n    },\n    textShadowRadius: 10\n  },\n  viewRender1: {\n    width: '100%',\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  viewRender2: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  viewRender3: {\n    flexDirection: 'row'\n  },\n  viewRender4: {\n    alignItems: 'flex-end',\n    justifyContent: 'center',\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"sources":["C:/GIT/AppProjetoTCC/src/Index.js"],"names":["React","Component","AsyncStorage","Icon","AppColors","Header","Index","props","state","user","JSON","getItem","parse","setState","navigation","type","styles","viewRender1","viewRender2","viewRender3","field1","navigate","iconColor1","text","field2","viewRender4","field3","field4","StyleSheet","create","backgroundColor","backgroundColor7","width","height","borderRadius","marginRight","marginBottom","alignItems","justifyContent","backgroundColor8","marginLeft","marginTop","color","fontSize","textShadowColor","textShadowColor2","textShadowOffset","textShadowRadius","flex","flexDirection"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View, TouchableOpacity, StyleSheet, AsyncStorage } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { AppColors } from './colors/AppColors';\r\n\r\nimport Header from './components/header/Header';\r\n\r\nexport default class Index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {}\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        const user = JSON.parse(await AsyncStorage.getItem('@APP:user'));\r\n        this.setState({ user })\r\n    }\r\n\r\n    render() {\r\n        const { navigation } = this.props;\r\n        const { type } = this.state.user;\r\n\r\n        return (\r\n            <View style={styles.viewRender1}>\r\n                <Header\r\n                    title='Início'\r\n                    menuIcon='menu'\r\n                    navigation={navigation}\r\n                />\r\n                <View style={styles.viewRender2}>\r\n                    <View style={styles.viewRender3}>\r\n                        {type == 'S' &&\r\n                            <TouchableOpacity style={styles.field1} onPress={() => {\r\n                                navigation.navigate('ScreenSelectionDisciplines')\r\n                            }}>\r\n                                <Icon name='square-o' color={AppColors.iconColor1} size={40} />\r\n                                <Text style={styles.text}>Responder {\"\\n\"}Questionário</Text>\r\n                            </TouchableOpacity>\r\n                        }\r\n                        {type == 'P' &&\r\n                            <TouchableOpacity style={styles.field1} onPress={() => {\r\n                                navigation.navigate('ScreenSelectionDisciplineReport')\r\n                            }}>\r\n                                <Icon name='list-alt' color={AppColors.iconColor1} size={40} />\r\n                                <Text style={styles.text}>Gerar Relatório</Text>\r\n                            </TouchableOpacity>\r\n                        }\r\n                        {(type == 'S' || type == 'P') &&\r\n                            <TouchableOpacity style={styles.field2} onPress={() => {\r\n                                navigation.navigate('ScreenSearchDisciplines')\r\n                            }}>\r\n                                <Icon name='search' color={AppColors.iconColor1} size={40} />\r\n                                <Text style={styles.text}>Consultar {\"\\n\"}Disciplinas</Text>\r\n                            </TouchableOpacity>\r\n                        }\r\n                    </View>\r\n                    <View style={styles.viewRender4}>\r\n                        {(type == 'S' || type == 'P') &&\r\n                            <TouchableOpacity style={styles.field3} onPress={() => {\r\n                                navigation.navigate('ScreenSearchDisciplines')\r\n                            }}>\r\n                                <Icon name='file' color={AppColors.iconColor1} size={40} />\r\n                                <Text style={styles.text}>Sobre o {\"\\n\"}Aplicativo</Text>\r\n                            </TouchableOpacity>\r\n                        }\r\n                        {type == 'P' &&\r\n                            <TouchableOpacity style={styles.field4} onPress={() => {\r\n                                navigation.navigate('ScreenSelectionDisciplineQuestionnaire')\r\n                            }}>\r\n                                <Icon name='line-chart' color={AppColors.iconColor1} size={40} />\r\n                                <Text style={styles.text}>Consultar {\"\\n\"}Desempenho</Text>\r\n                            </TouchableOpacity>\r\n                        }\r\n                        {type == 'S' &&\r\n                            <TouchableOpacity style={styles.field4} onPress={() => {\r\n                                navigation.navigate('ScreenAnsweredQuestionnaires')\r\n                            }}>\r\n                                <Icon name='check-square-o' color={AppColors.iconColor1} size={40} />\r\n                                <Text style={styles.text}>Questionários {\"\\n\"}Respondidos</Text>\r\n                            </TouchableOpacity>\r\n                        }\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    field1: {\r\n        backgroundColor: AppColors.backgroundColor7,\r\n        width: '55%',\r\n        height: 150,\r\n        borderRadius: 10,\r\n        marginRight: 5,\r\n        marginBottom: 5,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    field2: {\r\n        backgroundColor: AppColors.backgroundColor8,\r\n        width: '35%',\r\n        height: 150,\r\n        borderRadius: 10,\r\n        marginLeft: 5,\r\n        marginBottom: 5,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    field3: {\r\n        backgroundColor: AppColors.backgroundColor8,\r\n        width: '35%',\r\n        height: 150,\r\n        borderRadius: 10,\r\n        marginRight: 5,\r\n        marginTop: 5,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    field4: {\r\n        backgroundColor: AppColors.backgroundColor7,\r\n        width: '55%',\r\n        height: 150,\r\n        borderRadius: 10,\r\n        marginLeft: 5,\r\n        marginTop: 5,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    text: {\r\n        color: 'white',\r\n        fontSize: 18,\r\n        marginLeft: 10,\r\n        marginTop: 10,\r\n        textShadowColor: AppColors.textShadowColor2,\r\n        textShadowOffset: { width: -1, height: 1 },\r\n        textShadowRadius: 10,\r\n    },\r\n    viewRender1: {\r\n        width: '100%', \r\n        flex: 1, \r\n        alignItems: 'center', \r\n        justifyContent: 'flex-start',\r\n    }, \r\n    viewRender2: {\r\n        flex: 1, \r\n        alignItems: 'center', \r\n        justifyContent: 'center',\r\n    },\r\n    viewRender3: {\r\n        flexDirection: 'row',\r\n    }, \r\n    viewRender4: {\r\n        alignItems: 'flex-end', \r\n        justifyContent: 'center', \r\n        flexDirection: 'row',\r\n    }\r\n})\r\n\r\n"]},"metadata":{},"sourceType":"module"}