{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\GIT\\\\AppProjetoTCC\\\\src\\\\screens\\\\authentication\\\\Login.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport Api from \"../../services/Api\";\n\nvar Login = function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n\n    _this.signIn = function _callee() {\n      var _this$state, cpf, password, response, user;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _this$state = _this.state, cpf = _this$state.cpf, password = _this$state.password;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(Api.post('/auth/authenticate', {\n                cpf: cpf,\n                password: password\n              }));\n\n            case 4:\n              response = _context.sent;\n              user = response.data.user;\n\n              if (!(user !== null)) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(AsyncStorage.multiSet([['@APP:user', JSON.stringify(user)]]));\n\n            case 9:\n              _this.props.navigation.navigate('Main');\n\n            case 10:\n              _context.next = 16;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              Alert.alert('Atenção! ', 'Dados incorretos');\n              console.log(_context.t0);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 12]], Promise);\n    };\n\n    state = {\n      cpf: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.header,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.textHeader,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }, \"UFJF\"), React.createElement(Text, {\n        style: styles.textHeader2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }, \"Sistema de apoio \\xE0 an\\xE1lise das avalia\\xE7\\xF5es discentes dos cursos de gradua\\xE7\\xE3o da UFJF\")), React.createElement(View, {\n        style: styles.containerInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputText,\n        onChangeText: function onChangeText(cpf) {\n          return _this2.setState({\n            cpf: cpf\n          });\n        },\n        placeholder: \"CPF\",\n        underlineColorAndroid: \"#c3c3c3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }), React.createElement(TextInput, {\n        style: styles.inputText,\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        placeholder: \"Senha\",\n        underlineColorAndroid: \"#c3c3c3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.styleButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          _this2.signIn();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.textButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }\n      }, \"Entrar\")), React.createElement(View, {\n        style: styles.fieldButton2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.button2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }, React.createElement(Icon, {\n        name: \"help-circle\",\n        size: 30,\n        color: \"#ffffff\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }\n      })))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport { Login as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    width: '100%'\n  },\n  header: {\n    flex: 1,\n    width: '90%',\n    height: 100,\n    marginTop: 50,\n    backgroundColor: '#d3302f',\n    borderRadius: 10\n  },\n  textHeader: {\n    color: 'white',\n    textAlign: 'center',\n    fontSize: 40,\n    marginTop: 20,\n    marginBottom: 20\n  },\n  textHeader2: {\n    color: 'white',\n    textAlign: 'center',\n    fontSize: 20,\n    textShadowColor: 'black',\n    textShadowOffset: {\n      width: -1,\n      height: 1\n    },\n    textShadowRadius: 20\n  },\n  inputText: {\n    padding: 10,\n    fontSize: 20\n  },\n  containerInput: {\n    flex: 1,\n    justifyContent: 'center',\n    width: '90%',\n    maxHeight: '20%',\n    marginTop: 10\n  },\n  button: {\n    padding: 10,\n    backgroundColor: '#d3302f',\n    marginTop: 15\n  },\n  button2: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: 50,\n    height: 50,\n    borderRadius: 50,\n    backgroundColor: '#345555'\n  },\n  styleButton: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: '90%'\n  },\n  textButton: {\n    color: '#ffffff',\n    fontSize: 18\n  },\n  fieldButton2: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    width: '100%',\n    marginBottom: 30\n  }\n});","map":{"version":3,"sources":["C:/GIT/AppProjetoTCC/src/screens/authentication/Login.js"],"names":["React","Component","AsyncStorage","Icon","Api","Login","props","signIn","state","cpf","password","post","response","user","data","multiSet","JSON","stringify","navigation","navigate","Alert","alert","console","log","styles","container","header","textHeader","textHeader2","containerInput","inputText","setState","styleButton","button","textButton","fieldButton2","button2","StyleSheet","create","flex","alignItems","width","height","marginTop","backgroundColor","borderRadius","color","textAlign","fontSize","marginBottom","textShadowColor","textShadowOffset","textShadowRadius","padding","justifyContent","maxHeight","flexDirection"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, Text, StyleSheet, TextInput, TouchableOpacity, Alert, AsyncStorage } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\n\r\nimport Api from '../../services/Api';\r\n\r\nexport default class Login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        state = {\r\n            cpf: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    signIn = async () => {\r\n        try{\r\n            const { cpf, password } = this.state;\r\n            const response = await Api.post('/auth/authenticate', {\r\n                cpf,\r\n                password\r\n            });\r\n\r\n            const { user } = response.data;\r\n\r\n            if(user !== null){\r\n                await AsyncStorage.multiSet([\r\n                    ['@APP:user', JSON.stringify(user)]\r\n                ]);\r\n\r\n                this.props.navigation.navigate('Main');\r\n            }\r\n            \r\n        }catch(res){\r\n            Alert.alert('Atenção! ', 'Dados incorretos');\r\n            console.log(res)\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n                <View style={styles.header}>\r\n                    <Text style={styles.textHeader}>UFJF</Text>\r\n                    <Text style={styles.textHeader2}>Sistema de apoio à análise das avaliações discentes dos cursos de graduação da UFJF</Text>\r\n                </View>\r\n                <View style={styles.containerInput}>\r\n                    <TextInput style={styles.inputText} onChangeText={ cpf => this.setState({cpf}) } placeholder='CPF' \r\n                        underlineColorAndroid='#c3c3c3'/>\r\n                    <TextInput style={styles.inputText} onChangeText={ password => this.setState({password}) } placeholder='Senha' \r\n                        underlineColorAndroid='#c3c3c3'/>\r\n                </View>\r\n                <View style={styles.styleButton}>\r\n                    <TouchableOpacity style={styles.button} onPress = {()=>{this.signIn()}}>\r\n                        <Text style={styles.textButton}>Entrar</Text>\r\n                    </TouchableOpacity>\r\n                    <View style={styles.fieldButton2}>\r\n                        <TouchableOpacity style={styles.button2}>\r\n                            <Icon name='help-circle' size={30} color='#ffffff'/>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        width: '100%'\r\n    },\r\n    header: {\r\n        flex: 1,\r\n        width: '90%',\r\n        height: 100,\r\n        marginTop: 50,\r\n        backgroundColor: '#d3302f',\r\n        borderRadius: 10\r\n\r\n    },\r\n    textHeader: {\r\n        color: 'white',\r\n        textAlign: 'center',\r\n        fontSize: 40,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    textHeader2: {\r\n        color: 'white',\r\n        textAlign: 'center',\r\n        fontSize: 20,\r\n        textShadowColor: 'black',\r\n        textShadowOffset: {width:-1,height:1},\r\n        textShadowRadius: 20,\r\n    },\r\n    inputText: {\r\n        padding: 10,\r\n        fontSize: 20\r\n    },\r\n    containerInput: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        width: '90%',\r\n        maxHeight: '20%',\r\n        marginTop: 10\r\n    },\r\n    button: {\r\n        padding: 10,\r\n        backgroundColor: '#d3302f',\r\n        marginTop: 15\r\n    },\r\n    button2: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: 50,\r\n        height: 50,\r\n        borderRadius: 50,\r\n        backgroundColor: '#345555'\r\n    },\r\n    styleButton: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        width: '90%'\r\n    },\r\n    textButton: {\r\n        color: '#ffffff',\r\n        fontSize: 18\r\n    },\r\n    fieldButton2: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-end',\r\n        width: '100%',\r\n        marginBottom: 30\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}