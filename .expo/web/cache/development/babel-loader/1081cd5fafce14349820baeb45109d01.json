{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\GIT\\\\AppProjetoTCC\\\\src\\\\screens\\\\select\\\\DisciplineSelection.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { Card } from 'react-native-elements';\nimport RadioForm from 'react-native-simple-radio-button';\nimport { AppColors } from \"../../colors/AppColors\";\nimport Header from \"../../components/header/Header\";\nimport Api from \"../../services/Api\";\n\nvar DisciplineSelection = function (_Component) {\n  _inherits(DisciplineSelection, _Component);\n\n  var _super = _createSuper(DisciplineSelection);\n\n  function DisciplineSelection(props) {\n    var _this;\n\n    _classCallCheck(this, DisciplineSelection);\n\n    _this = _super.call(this, props);\n\n    _this.getDisciplines = function _callee() {\n      var _JSON$parse, _id, _await$Api$post, data, questionnairesByPeriod;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n\n              _this.setState({\n                isLoading: true\n              });\n\n              _context.t0 = JSON;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@APP:user'));\n\n            case 5:\n              _context.t1 = _context.sent;\n              _JSON$parse = _context.t0.parse.call(_context.t0, _context.t1);\n              _id = _JSON$parse._id;\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(Api.post('/questionnaire/findAllByPeriod', {\n                idStudent: _id\n              }));\n\n            case 10:\n              _await$Api$post = _context.sent;\n              data = _await$Api$post.data;\n              questionnairesByPeriod = data.questionnairesByPeriod;\n\n              if (questionnairesByPeriod !== null) {\n                _this.setState({\n                  questionnairesByPeriod: questionnairesByPeriod\n                });\n              }\n\n              _this.props.navigation.setParams({\n                load: false\n              });\n\n              _this.setState({\n                isLoading: false\n              });\n\n              _context.next = 21;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t2 = _context[\"catch\"](0);\n              console.log(_context.t2);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 18]], Promise);\n    };\n\n    _this.renderRadio = function () {\n      return React.createElement(RadioForm, {\n        radio_props: _this.radioValues,\n        initial: 1,\n        buttonColor: AppColors.radioColor1,\n        buttonSize: 12,\n        buttonOuterColor: AppColors.radioColor1,\n        selectedButtonColor: AppColors.radioColor1,\n        labelStyle: {\n          fontSize: 12,\n          color: AppColors.radioColor1\n        },\n        formHorizontal: true,\n        labelHorizontal: false,\n        onPress: function onPress(valueRadio) {\n          _this.setState({\n            valueRadio: valueRadio\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      });\n    };\n\n    _this.filterQuestionnaires = function () {\n      var _this$state = _this.state,\n          valueRadio = _this$state.valueRadio,\n          questionnairesByPeriod = _this$state.questionnairesByPeriod;\n      var questionnaires = questionnairesByPeriod;\n\n      if (valueRadio == 0) {\n        questionnaires = _this.filterByOption(questionnairesByPeriod, 'N');\n      }\n\n      if (valueRadio == 2) {\n        questionnaires = _this.filterByOption(questionnairesByPeriod, 'I');\n      }\n\n      return questionnaires;\n    };\n\n    _this.filterByOption = function (questionnaires, option) {\n      var pendings = questionnaires.filter(function (object) {\n        return object.status == option;\n      });\n      return pendings;\n    };\n\n    _this.state = {\n      questionnairesByPeriod: [],\n      valueRadio: 1,\n      isLoading: false,\n      mounted: false\n    };\n    _this.radioValues = [{\n      label: 'Pendentes',\n      value: 0\n    }, {\n      label: 'Todos',\n      value: 1\n    }, {\n      label: 'Incompletos',\n      value: 2\n    }];\n    return _this;\n  }\n\n  _createClass(DisciplineSelection, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.getDisciplines();\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var questionnaires = this.filterQuestionnaires();\n\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.Indicator,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: AppColors.backgroundColor1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }\n        }));\n      }\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }, React.createElement(Header, {\n        title: \"Responder Question\\xE1rio\",\n        menuIcon: \"menu\",\n        navigation: this.props.navigation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.viewRender1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }\n      }, this.renderRadio()), React.createElement(ScrollView, {\n        style: styles.scroll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      }, questionnaires.length > 0 ? questionnaires.map(function (questionnaire) {\n        var title = questionnaire.idDiscipline.title;\n        var codeDiscipline = questionnaire.idDiscipline.code;\n        var name = questionnaire.idProfessor.name;\n        var _questionnaire$idClas = questionnaire.idClass,\n            code = _questionnaire$idClas.code,\n            period = _questionnaire$idClas.period;\n        var background = questionnaire.status == 'I' ? AppColors.statusQuestionnaireColor1 : AppColors.statusQuestionnaireColor2;\n        var border = questionnaire.status == 'I' ? AppColors.statusQuestionnaireColor3 : AppColors.statusQuestionnaireColor4;\n        var status = questionnaire.status == 'I' ? 'Incompleto' : 'Pendente';\n        var textColor = questionnaire.status == 'I' ? AppColors.statusQuestionnaireColor5 : AppColors.statusQuestionnaireColor5;\n        return React.createElement(TouchableOpacity, {\n          key: questionnaire._id,\n          onPress: function onPress() {\n            _this2.props.navigation.navigate('QuizDiscipline', {\n              questionnaire: questionnaire\n            });\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 33\n          }\n        }, React.createElement(Card, {\n          containerStyle: styles.cardStyle,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 37\n          }\n        }, React.createElement(View, {\n          style: styles.viewRender2,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 41\n          }\n        }, React.createElement(Text, {\n          style: styles.nameDiscipline,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 45\n          }\n        }, title), React.createElement(Text, {\n          style: styles.nameDiscipline,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 45\n          }\n        }, codeDiscipline), React.createElement(Text, {\n          style: styles.nameDiscipline,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 45\n          }\n        }, 'Professor(a): ' + name), React.createElement(Text, {\n          style: styles.nameDiscipline,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 45\n          }\n        }, 'Turma: ' + code), React.createElement(Text, {\n          style: styles.nameDiscipline,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 45\n          }\n        }, 'Período: ' + period)), React.createElement(View, {\n          style: {\n            backgroundColor: background,\n            width: '100%',\n            borderBottomColor: border,\n            justifyContent: 'center',\n            borderRightColor: border,\n            borderBottomWidth: 3,\n            borderRightWidth: 3,\n            paddingLeft: 10,\n            paddingRight: 10,\n            paddingTop: 10\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 41\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 16,\n            fontWeight: \"bold\",\n            marginBottom: 10,\n            color: textColor\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 45\n          }\n        }, 'Status: ' + status))));\n      }) : React.createElement(View, {\n        style: styles.viewNullText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.nullText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 29\n        }\n      }, \"N\\xE3o h\\xE1 question\\xE1rios encontrados!\"))));\n    }\n  }]);\n\n  return DisciplineSelection;\n}(Component);\n\nexport { DisciplineSelection as default };\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: AppColors.backgroundColor10,\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    flex: 1\n  },\n  scroll: {\n    width: '100%',\n    maxHeight: '80%'\n  },\n  nameDiscipline: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    marginBottom: 10\n  },\n  Indicator: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: AppColors.backgroundColor4\n  },\n  viewNullText: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 20\n  },\n  nullText: {\n    fontSize: 18\n  },\n  viewRender1: {\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    paddingTop: 10\n  },\n  cardStyle: {\n    borderBottomWidth: 1,\n    borderBottomColor: AppColors.cardColor1,\n    padding: 0,\n    borderRadius: 10\n  },\n  viewRender2: {\n    padding: 10\n  }\n});","map":{"version":3,"sources":["C:/GIT/AppProjetoTCC/src/screens/select/DisciplineSelection.js"],"names":["React","Component","AsyncStorage","Card","RadioForm","AppColors","Header","Api","DisciplineSelection","props","getDisciplines","setState","isLoading","JSON","getItem","parse","_id","post","idStudent","data","questionnairesByPeriod","navigation","setParams","load","console","log","renderRadio","radioValues","radioColor1","fontSize","color","valueRadio","filterQuestionnaires","state","questionnaires","filterByOption","option","pendings","filter","object","status","mounted","label","value","styles","Indicator","backgroundColor1","container","viewRender1","scroll","length","map","questionnaire","title","idDiscipline","codeDiscipline","code","name","idProfessor","idClass","period","background","statusQuestionnaireColor1","statusQuestionnaireColor2","border","statusQuestionnaireColor3","statusQuestionnaireColor4","textColor","statusQuestionnaireColor5","navigate","cardStyle","viewRender2","nameDiscipline","backgroundColor","width","borderBottomColor","justifyContent","borderRightColor","borderBottomWidth","borderRightWidth","paddingLeft","paddingRight","paddingTop","fontWeight","marginBottom","viewNullText","nullText","StyleSheet","create","backgroundColor10","alignItems","flex","maxHeight","backgroundColor4","marginTop","flexDirection","cardColor1","padding","borderRadius"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View, StyleSheet, TouchableOpacity, ScrollView, ActivityIndicator, AsyncStorage } from 'react-native';\r\nimport { Card } from 'react-native-elements';\r\nimport RadioForm from 'react-native-simple-radio-button';\r\nimport { AppColors } from '../../colors/AppColors';\r\n\r\nimport Header from '../../components/header/Header';\r\nimport Api from '../../services/Api';\r\n\r\nexport default class DisciplineSelection extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            questionnairesByPeriod: [],\r\n            valueRadio: 1,\r\n            isLoading: false,\r\n            mounted: false\r\n        };\r\n        this.radioValues = [\r\n            { label: 'Pendentes', value: 0 },\r\n            { label: 'Todos', value: 1 },\r\n            { label: 'Incompletos', value: 2 }\r\n        ]\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.getDisciplines();\r\n    }\r\n\r\n    /*async componentDidUpdate(prevProps) {\r\n        const {mounted} = this.state\r\n        if (mounted == prevProps.mounted) {\r\n            this.getDisciplines();\r\n            this.setState({mounted: false})\r\n        }\r\n    }*/\r\n\r\n    getDisciplines = async () => {\r\n        try {\r\n            this.setState({ isLoading: true });\r\n            const { _id } = JSON.parse(await AsyncStorage.getItem('@APP:user'));\r\n            const { data } = (await Api.post('/questionnaire/findAllByPeriod',\r\n                { idStudent: _id }));\r\n            const { questionnairesByPeriod } = data\r\n            if (questionnairesByPeriod !== null) {\r\n                this.setState({ questionnairesByPeriod });\r\n            }\r\n            this.props.navigation.setParams({ load: false });\r\n            this.setState({ isLoading: false });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    renderRadio = () => {\r\n        return (\r\n            <RadioForm\r\n                radio_props={this.radioValues}\r\n                initial={1}\r\n                buttonColor={AppColors.radioColor1}\r\n                buttonSize={12}\r\n                buttonOuterColor={AppColors.radioColor1}\r\n                selectedButtonColor={AppColors.radioColor1}\r\n                labelStyle={{ fontSize: 12, color: AppColors.radioColor1 }}\r\n                formHorizontal={true}\r\n                labelHorizontal={false}\r\n                onPress={(valueRadio) => { this.setState({ valueRadio }) }}\r\n            />\r\n        )\r\n    }\r\n\r\n    filterQuestionnaires = () => {\r\n        const { valueRadio, questionnairesByPeriod } = this.state;\r\n        let questionnaires = questionnairesByPeriod;\r\n        if (valueRadio == 0) {\r\n            questionnaires = this.filterByOption(questionnairesByPeriod, 'N');\r\n        }\r\n        if (valueRadio == 2) {\r\n            questionnaires = this.filterByOption(questionnairesByPeriod, 'I');\r\n        }\r\n        return questionnaires;\r\n    }\r\n\r\n    filterByOption = (questionnaires, option) => {\r\n        const pendings = questionnaires.filter(object => object.status == option);\r\n        return pendings;\r\n    }\r\n\r\n    render() {\r\n        const questionnaires = this.filterQuestionnaires();\r\n\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <View style={styles.Indicator}>\r\n                    <ActivityIndicator size=\"large\" color={AppColors.backgroundColor1} />\r\n                </View>\r\n            )\r\n        }\r\n        return (\r\n            <View style={styles.container}>\r\n                <Header\r\n                    title='Responder Questionário'\r\n                    menuIcon='menu'\r\n                    navigation={this.props.navigation}\r\n                />\r\n                <View style={styles.viewRender1}>\r\n                    {this.renderRadio()}\r\n                </View>\r\n                <ScrollView style={styles.scroll} >\r\n                    {questionnaires.length > 0\r\n                        ?\r\n                        questionnaires.map(questionnaire => {\r\n                            const { title } = questionnaire.idDiscipline;\r\n                            const codeDiscipline = questionnaire.idDiscipline.code;\r\n                            const { name } = questionnaire.idProfessor;\r\n                            const { code, period } = questionnaire.idClass;\r\n                            const background = questionnaire.status == 'I' ? AppColors.statusQuestionnaireColor1 : AppColors.statusQuestionnaireColor2;\r\n                            const border = questionnaire.status == 'I' ? AppColors.statusQuestionnaireColor3 : AppColors.statusQuestionnaireColor4;\r\n                            const status = questionnaire.status == 'I' ? 'Incompleto' : 'Pendente';\r\n                            const textColor = questionnaire.status == 'I' ? AppColors.statusQuestionnaireColor5 : AppColors.statusQuestionnaireColor5;\r\n\r\n                            return (\r\n                                <TouchableOpacity key={questionnaire._id} onPress={() => { this.props.navigation.navigate('QuizDiscipline', { questionnaire }) }}>\r\n                                    <Card containerStyle={styles.cardStyle}>\r\n                                        <View style={styles.viewRender2}>\r\n                                            <Text style={styles.nameDiscipline}>{title}</Text>\r\n                                            <Text style={styles.nameDiscipline}>{codeDiscipline}</Text>\r\n                                            <Text style={styles.nameDiscipline}>{'Professor(a): ' + name}</Text>\r\n                                            <Text style={styles.nameDiscipline}>{'Turma: ' + code}</Text>\r\n                                            <Text style={styles.nameDiscipline}>{'Período: ' + period}</Text>\r\n                                        </View>\r\n                                        <View style={{\r\n                                            backgroundColor: background, width: '100%', borderBottomColor: border,\r\n                                            justifyContent: 'center', borderRightColor: border, borderBottomWidth: 3,\r\n                                            borderRightWidth: 3, paddingLeft: 10, paddingRight: 10, paddingTop: 10,\r\n                                        }}>\r\n                                            <Text style={{ fontSize: 16, fontWeight: \"bold\", marginBottom: 10, color: textColor }}>{'Status: ' + status}</Text>\r\n                                        </View>\r\n                                    </Card>\r\n                                </TouchableOpacity>\r\n                            );\r\n                        })\r\n                        :\r\n                        <View style={styles.viewNullText}>\r\n                            <Text style={styles.nullText}>Não há questionários encontrados!</Text>\r\n                        </View>\r\n                    }\r\n                </ScrollView>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: AppColors.backgroundColor10,\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        flex: 1,\r\n    },\r\n    scroll: {\r\n        width: '100%',\r\n        maxHeight: '80%',\r\n    },\r\n    nameDiscipline: {\r\n        fontSize: 16,\r\n        fontWeight: \"bold\",\r\n        marginBottom: 10,\r\n    },\r\n    Indicator: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: AppColors.backgroundColor4,\r\n    },\r\n    viewNullText: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginTop: 20,\r\n    },\r\n    nullText: {\r\n        fontSize: 18,\r\n    },\r\n    viewRender1: {\r\n        width: '100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-around',\r\n        paddingTop: 10,\r\n    },\r\n    cardStyle: {\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: AppColors.cardColor1,\r\n        padding: 0,\r\n        borderRadius: 10,\r\n    },\r\n    viewRender2: {\r\n        padding: 10,\r\n    },\r\n    /*viewRender3: {\r\n        backgroundColor: background, \r\n        width: '100%', \r\n        borderBottomColor: border, \r\n        justifyContent: 'center',\r\n        borderRightColor: border, \r\n        borderBottomWidth: 3, \r\n        borderRightWidth: 3, \r\n        paddingLeft: 10, \r\n        paddingRight: 10, \r\n        paddingTop: 10,\r\n    },*/\r\n    /*textRender: {\r\n        fontSize: 16, \r\n        fontWeight: \"bold\", \r\n        marginBottom: 10, \r\n        color: textColor,\r\n    }*/\r\n})"]},"metadata":{},"sourceType":"module"}