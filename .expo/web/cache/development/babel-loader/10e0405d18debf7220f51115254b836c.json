{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\GIT\\\\AppProjetoTCC\\\\src\\\\screens\\\\menu\\\\Menu.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport MenuButton from \"../../components/menuButton/MenuButton\";\n\nvar Menu = function (_Component) {\n  _inherits(Menu, _Component);\n\n  var _super = _createSuper(Menu);\n\n  function Menu(props) {\n    var _this;\n\n    _classCallCheck(this, Menu);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      user: {}\n    };\n    return _this;\n  }\n\n  _createClass(Menu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var user;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = JSON;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@APP:user'));\n\n            case 3:\n              _context.t1 = _context.sent;\n              user = _context.t0.parse.call(_context.t0, _context.t1);\n              this.setState({\n                user: user\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var navigation = this.props.navigation;\n      var type = this.state.user.type;\n      return React.createElement(View, {\n        style: {\n          marginLeft: 20,\n          marginTop: 40\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, React.createElement(MenuButton, {\n        nameIcon: \"home\",\n        nameButton: \"In\\xEDcio\",\n        onPress: function onPress() {\n          navigation.navigate('Home');\n          navigation.closeDrawer();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }), type == 'S' && React.createElement(MenuButton, {\n        nameIcon: \"square-o\",\n        nameButton: \"Responder Question\\xE1rios\",\n        onPress: function onPress() {\n          navigation.navigate('SelectionScreen');\n          navigation.closeDrawer();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }\n      }), type == 'S' && React.createElement(MenuButton, {\n        nameIcon: \"check-square-o\",\n        nameButton: \"Question\\xE1rios Respondidos\",\n        onPress: function onPress() {\n          navigation.navigate('AnsweredScreen');\n          navigation.closeDrawer();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }), (type == 'S' || type == 'P') && React.createElement(MenuButton, {\n        nameIcon: \"search\",\n        nameButton: \"Consultar Disciplinas\",\n        onPress: function onPress() {\n          navigation.navigate('DisciplineScreen');\n          navigation.closeDrawer();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      }), type == 'P' && React.createElement(MenuButton, {\n        nameIcon: \"line-chart\",\n        nameButton: \"Consultar Desempenho\",\n        onPress: function onPress() {\n          navigation.navigate('chartScreen');\n          navigation.closeDrawer();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }), React.createElement(MenuButton, {\n        nameIcon: \"circle-o-notch\",\n        nameButton: \"Sair\",\n        onPress: function onPress() {\n          navigation.navigate('Auth');\n          navigation.closeDrawer();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Menu;\n}(Component);\n\nexport { Menu as default };","map":{"version":3,"sources":["C:/GIT/AppProjetoTCC/src/screens/menu/Menu.js"],"names":["React","Component","AsyncStorage","MenuButton","Menu","props","state","user","JSON","getItem","parse","setState","navigation","type","marginLeft","marginTop","navigate","closeDrawer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, AsyncStorage } from 'react-native';\r\n\r\nimport MenuButton from '../../components/menuButton/MenuButton';\r\n\r\nexport default class Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {}\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        const user = JSON.parse(await AsyncStorage.getItem('@APP:user'));\r\n        this.setState({ user })\r\n    }\r\n\r\n    render() {\r\n        const { navigation } = this.props\r\n        const { type } = this.state.user\r\n        return (\r\n            <View style={{ marginLeft: 20, marginTop: 40 }}>\r\n                <MenuButton nameIcon='home' nameButton='Início' onPress={() => {\r\n                    navigation.navigate('Home'); navigation.closeDrawer()\r\n                }} />\r\n                {type == 'S' &&\r\n                    <MenuButton nameIcon='square-o' nameButton='Responder Questionários' onPress={() => {\r\n                        navigation.navigate('SelectionScreen'); navigation.closeDrawer()\r\n                    }} />\r\n                }\r\n                {type == 'S' &&\r\n                    <MenuButton nameIcon='check-square-o' nameButton='Questionários Respondidos' onPress={() => {\r\n                        navigation.navigate('AnsweredScreen'); navigation.closeDrawer()\r\n                    }} />\r\n                }\r\n                {(type == 'S' || type == 'P') &&\r\n                    <MenuButton nameIcon='search' nameButton='Consultar Disciplinas' onPress={() => {\r\n                        navigation.navigate('DisciplineScreen'); navigation.closeDrawer()\r\n                    }} />\r\n                }\r\n                {type == 'P' &&\r\n                    <MenuButton nameIcon='line-chart' nameButton='Consultar Desempenho' onPress={() => {\r\n                        navigation.navigate('chartScreen'); navigation.closeDrawer()\r\n                    }} />\r\n                }\r\n                <MenuButton nameIcon='circle-o-notch' nameButton='Sair' onPress={() => {\r\n                    navigation.navigate('Auth'); navigation.closeDrawer()\r\n                }} />\r\n            </View>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}