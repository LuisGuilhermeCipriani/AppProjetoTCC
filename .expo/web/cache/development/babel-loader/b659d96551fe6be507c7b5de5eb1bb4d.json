{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\GIT\\\\AppProjetoTCC\\\\src\\\\routes\\\\BarChart.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { StackedBarChart } from 'react-native-svg-charts';\n\nvar StackedBarChartExample = function (_React$PureComponent) {\n  _inherits(StackedBarChartExample, _React$PureComponent);\n\n  var _super = _createSuper(StackedBarChartExample);\n\n  function StackedBarChartExample() {\n    _classCallCheck(this, StackedBarChartExample);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(StackedBarChartExample, [{\n    key: \"render\",\n    value: function render() {\n      var data = [{\n        month: new Date(2015, 0, 1),\n        apples: 3840,\n        bananas: 1920,\n        cherries: 960,\n        dates: 400,\n        oranges: 400\n      }, {\n        month: new Date(2015, 1, 1),\n        apples: 1600,\n        bananas: 1440,\n        cherries: 960,\n        dates: 400\n      }, {\n        month: new Date(2015, 2, 1),\n        apples: 640,\n        bananas: 960,\n        cherries: 3640,\n        dates: 400\n      }, {\n        month: new Date(2015, 3, 1),\n        apples: 3320,\n        bananas: 480,\n        cherries: 640,\n        dates: 400\n      }];\n      var colors = ['#db0000', '#ff6666', '#ff9999', '#ffcccc'];\n      var keys = ['apples', 'bananas', 'cherries', 'dates'];\n      return React.createElement(StackedBarChart, {\n        style: {\n          height: 200\n        },\n        keys: keys,\n        colors: colors,\n        data: data,\n        showGrid: false,\n        contentInset: {\n          top: 30,\n          bottom: 30\n        },\n        horizontal: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return StackedBarChartExample;\n}(React.PureComponent);\n\nexport default StackedBarChartExample;","map":{"version":3,"sources":["C:/GIT/AppProjetoTCC/src/routes/BarChart.js"],"names":["React","StackedBarChart","StackedBarChartExample","data","month","Date","apples","bananas","cherries","dates","oranges","colors","keys","height","top","bottom","PureComponent"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,yBAAhC;;IAEMC,sB;;;;;;;;;;;;;WACF,kBAAS;AACL,UAAMC,IAAI,GAAG,CACT;AACIC,QAAAA,KAAK,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CADX;AAEIC,QAAAA,MAAM,EAAE,IAFZ;AAGIC,QAAAA,OAAO,EAAE,IAHb;AAIIC,QAAAA,QAAQ,EAAE,GAJd;AAKIC,QAAAA,KAAK,EAAE,GALX;AAMIC,QAAAA,OAAO,EAAE;AANb,OADS,EAST;AACIN,QAAAA,KAAK,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CADX;AAEIC,QAAAA,MAAM,EAAE,IAFZ;AAGIC,QAAAA,OAAO,EAAE,IAHb;AAIIC,QAAAA,QAAQ,EAAE,GAJd;AAKIC,QAAAA,KAAK,EAAE;AALX,OATS,EAgBT;AACIL,QAAAA,KAAK,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CADX;AAEIC,QAAAA,MAAM,EAAE,GAFZ;AAGIC,QAAAA,OAAO,EAAE,GAHb;AAIIC,QAAAA,QAAQ,EAAE,IAJd;AAKIC,QAAAA,KAAK,EAAE;AALX,OAhBS,EAuBT;AACIL,QAAAA,KAAK,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CADX;AAEIC,QAAAA,MAAM,EAAE,IAFZ;AAGIC,QAAAA,OAAO,EAAE,GAHb;AAIIC,QAAAA,QAAQ,EAAE,GAJd;AAKIC,QAAAA,KAAK,EAAE;AALX,OAvBS,CAAb;AAgCA,UAAME,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAf;AACA,UAAMC,IAAI,GAAG,CAAC,QAAD,EAAW,SAAX,EAAsB,UAAtB,EAAkC,OAAlC,CAAb;AAEA,aACI,oBAAC,eAAD;AACI,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SADX;AAEI,QAAA,IAAI,EAAED,IAFV;AAGI,QAAA,MAAM,EAAED,MAHZ;AAII,QAAA,IAAI,EAAER,IAJV;AAKI,QAAA,QAAQ,EAAE,KALd;AAMI,QAAA,YAAY,EAAE;AAAEW,UAAAA,GAAG,EAAE,EAAP;AAAWC,UAAAA,MAAM,EAAE;AAAnB,SANlB;AAOI,QAAA,UAAU,EAAE,IAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAWH;;;;EAhDgCf,KAAK,CAACgB,a;;AAmD3C,eAAed,sBAAf","sourcesContent":["import React from 'react'\r\nimport { StackedBarChart } from 'react-native-svg-charts'\r\n \r\nclass StackedBarChartExample extends React.PureComponent {\r\n    render() {\r\n        const data = [\r\n            {\r\n                month: new Date(2015, 0, 1),\r\n                apples: 3840,\r\n                bananas: 1920,\r\n                cherries: 960,\r\n                dates: 400,\r\n                oranges: 400,\r\n            },\r\n            {\r\n                month: new Date(2015, 1, 1),\r\n                apples: 1600,\r\n                bananas: 1440,\r\n                cherries: 960,\r\n                dates: 400,\r\n            },\r\n            {\r\n                month: new Date(2015, 2, 1),\r\n                apples: 640,\r\n                bananas: 960,\r\n                cherries: 3640,\r\n                dates: 400,\r\n            },\r\n            {\r\n                month: new Date(2015, 3, 1),\r\n                apples: 3320,\r\n                bananas: 480,\r\n                cherries: 640,\r\n                dates: 400,\r\n            },\r\n        ]\r\n \r\n        const colors = ['#db0000', '#ff6666', '#ff9999', '#ffcccc']\r\n        const keys = ['apples', 'bananas', 'cherries', 'dates']\r\n \r\n        return (\r\n            <StackedBarChart\r\n                style={{ height: 200 }}\r\n                keys={keys}\r\n                colors={colors}\r\n                data={data}\r\n                showGrid={false}\r\n                contentInset={{ top: 30, bottom: 30 }}\r\n                horizontal={true}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default StackedBarChartExample;"]},"metadata":{},"sourceType":"module"}