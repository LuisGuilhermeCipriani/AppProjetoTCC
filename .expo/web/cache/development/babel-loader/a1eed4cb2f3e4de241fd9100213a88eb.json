{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\GIT\\\\AppProjetoTCC\\\\src\\\\screens\\\\answeredQuestionnaires\\\\AnsweredQuestionnaires.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Card } from 'react-native-elements';\nimport CalendarPicker from 'react-native-calendar-picker';\nimport RadioForm from 'react-native-simple-radio-button';\nimport Header from \"../../components/header/Header\";\nimport Api from \"../../services/Api\";\nimport { AppColors } from \"../../colors/AppColors\";\nmoment = require('moment');\nmoment.locale('pt-BR');\n\nvar AnsweredQuestionnaires = function (_Component) {\n  _inherits(AnsweredQuestionnaires, _Component);\n\n  var _super = _createSuper(AnsweredQuestionnaires);\n\n  function AnsweredQuestionnaires(props) {\n    var _this;\n\n    _classCallCheck(this, AnsweredQuestionnaires);\n\n    _this = _super.call(this, props);\n\n    _this.getDisciplines = function _callee() {\n      var _JSON$parse, _id, questionnairesByPeriod;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n\n              _this.setState({\n                isLoading: true\n              });\n\n              _context.t0 = JSON;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@APP:user'));\n\n            case 5:\n              _context.t1 = _context.sent;\n              _JSON$parse = _context.t0.parse.call(_context.t0, _context.t1);\n              _id = _JSON$parse._id;\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(Api.post('/questionnaire/findAllByPeriodFinished', {\n                idStudent: _id\n              }));\n\n            case 10:\n              questionnairesByPeriod = _context.sent.data.questionnairesByPeriod;\n\n              if (questionnairesByPeriod !== null) {\n                _this.setState({\n                  questionnairesByPeriod: questionnairesByPeriod\n                });\n              }\n\n              _this.setState({\n                isLoading: false\n              });\n\n              _context.next = 18;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t2 = _context[\"catch\"](0);\n              console.log(_context.t2);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 15]], Promise);\n    };\n\n    _this.renderRadio = function () {\n      return React.createElement(RadioForm, {\n        radio_props: _this.radioValues,\n        initial: 0,\n        buttonColor: AppColors.radioColor1,\n        buttonSize: 12,\n        buttonOuterColor: AppColors.radioColor1,\n        selectedButtonColor: AppColors.radioColor1,\n        labelStyle: {\n          fontSize: 12,\n          color: AppColors.radioColor1\n        },\n        formHorizontal: true,\n        labelHorizontal: false,\n        onPress: function onPress(allSelected) {\n          _this.setState({\n            allSelected: allSelected\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      });\n    };\n\n    _this.findByDate = function () {\n      var _this$state = _this.state,\n          questionnairesByPeriod = _this$state.questionnairesByPeriod,\n          allSelected = _this$state.allSelected;\n      var questionnairesByDate = questionnairesByPeriod.filter(function (value) {\n        return moment(_this.state.startDate).format('DD/MM/YYYY') <= moment(value.finalDate).format('DD/MM/YYYY') && moment(_this.state.finalDate).format('DD/MM/YYYY') >= moment(value.finalDate).format('DD/MM/YYYY');\n      });\n      return allSelected == 0 ? questionnairesByPeriod : questionnairesByDate;\n    };\n\n    _this.findByPeriod = function () {\n      var _this$state2 = _this.state,\n          questionnairesByPeriod = _this$state2.questionnairesByPeriod,\n          allSelected = _this$state2.allSelected,\n          period = _this$state2.period;\n      var filteredQuestionnaire = questionnairesByPeriod.filter(function (value) {\n        return value.idClass.period == period;\n      });\n      return allSelected == 0 ? questionnairesByPeriod : filteredQuestionnaire;\n    };\n\n    _this.state = {\n      questionnairesByPeriod: [],\n      selectedStartDate: null,\n      modalVisible: false,\n      startDate: new Date(),\n      finalDate: new Date(),\n      option: 0,\n      allSelected: 0,\n      isLoading: false,\n      period: ''\n    };\n    _this.onDateChange = _this.onDateChange.bind(_assertThisInitialized(_this));\n    _this.radioValues = [{\n      label: 'Todos',\n      value: 0\n    }, {\n      label: 'Per√≠odo',\n      value: 1\n    }];\n    return _this;\n  }\n\n  _createClass(AnsweredQuestionnaires, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.getDisciplines();\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"onDateChange\",\n    value: function onDateChange(date) {\n      var option = this.state.option;\n\n      if (option == 1) {\n        this.setState({\n          startDate: date\n        });\n      }\n\n      if (option == 2) {\n        this.setState({\n          finalDate: date\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          selectedStartDate = _this$state3.selectedStartDate,\n          allSelected = _this$state3.allSelected,\n          option = _this$state3.option,\n          startDate = _this$state3.startDate,\n          finalDate = _this$state3.finalDate;\n      var initialDate = selectedStartDate ? selectedStartDate.toString() : '';\n      var questionnairesByPeriod = this.findByPeriod();\n\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.Indicator,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: AppColors.backgroundColor1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }\n        }));\n      }\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }\n      }, React.createElement(Header, {\n        title: \"Question\\xE1rios Respondidos\",\n        menuIcon: \"menu\",\n        navigation: this.props.navigation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: {\n          marginTop: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }\n      }, this.renderRadio()), React.createElement(Modal, {\n        animationType: \"slide\",\n        transparent: true,\n        visible: this.state.modalVisible,\n        flex: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.containerCalendar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: styles.calendar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }\n      }, React.createElement(CalendarPicker, {\n        onDateChange: this.onDateChange,\n        weekdays: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sab'],\n        months: ['Janeiro', 'Fevereiro', 'Mar√ßo', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],\n        previousTitle: \"Anterior\",\n        nextTitle: \"Pr\\xF3ximo\",\n        selectedDayColor: AppColors.calendarColor1,\n        selectedDayTextColor: AppColors.calendarColor2,\n        todayBackgroundColor: AppColors.calendarColor3,\n        selectedStartDate: option == 1 ? startDate : finalDate,\n        initialDate: option == 1 ? startDate : finalDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 29\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: styles.calendarTouchableOpacity,\n        onPress: function onPress() {\n          _this2.setState({\n            modalVisible: false\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.textCalendarTouchableOpacity,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 29\n        }\n      }, \"Fechar\")))), allSelected == 1 && React.createElement(View, {\n        style: styles.containerViewPeriod,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.textPeriod,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }\n      }, \"Informe abaixo o per\\xEDodo\"), React.createElement(TextInput, {\n        style: styles.periodTextInput,\n        borderRadius: 5,\n        padding: 5,\n        width: \"80%\",\n        backgroundColor: \"#ffffff\",\n        onChangeText: function onChangeText(period) {\n          _this2.setState({\n            period: period\n          });\n        },\n        placeholder: \"Ex: 2021/3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }\n      })), React.createElement(ScrollView, {\n        style: styles.scroll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }\n      }, questionnairesByPeriod.length > 0 ? questionnairesByPeriod.map(function (questionnaire) {\n        var title = questionnaire.idDiscipline.title;\n        var codeDiscipline = questionnaire.idDiscipline.code;\n        var name = questionnaire.idProfessor.name;\n        var _questionnaire$idClas = questionnaire.idClass,\n            code = _questionnaire$idClas.code,\n            period = _questionnaire$idClas.period;\n        var background = questionnaire.status == 'S' && AppColors.statusQuestionnaireColor7;\n        var border = questionnaire.status == 'S' && AppColors.statusQuestionnaireColor8;\n        var status = questionnaire.status == 'S' && 'Finalizado';\n        var textColor = questionnaire.status == 'S' && AppColors.statusQuestionnaireColor5;\n        return React.createElement(View, {\n          key: questionnaire._id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 33\n          }\n        }, React.createElement(Card, {\n          containerStyle: styles.cardContainerStyle,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 37\n          }\n        }, React.createElement(View, {\n          style: styles.viewRender2,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 41\n          }\n        }, React.createElement(Text, {\n          style: styles.nameDiscipline,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 45\n          }\n        }, title), React.createElement(Text, {\n          style: styles.nameDiscipline,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 45\n          }\n        }, codeDiscipline), React.createElement(Text, {\n          style: styles.nameDiscipline,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 45\n          }\n        }, 'Docente: ' + name), React.createElement(Text, {\n          style: styles.nameDiscipline,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 45\n          }\n        }, 'Turma: ' + code), React.createElement(Text, {\n          style: styles.nameDiscipline,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 45\n          }\n        }, 'Per√≠odo: ' + period)), React.createElement(View, {\n          style: {\n            backgroundColor: background,\n            width: '100%',\n            borderBottomColor: border,\n            justifyContent: 'center',\n            borderRightColor: border,\n            borderBottomWidth: 3,\n            borderRightWidth: 3,\n            paddingLeft: 10,\n            paddingRight: 10,\n            paddingTop: 10\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 41\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 16,\n            fontWeight: \"bold\",\n            marginBottom: 10,\n            color: textColor\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 45\n          }\n        }, 'Status: ' + status))));\n      }) : React.createElement(View, {\n        style: styles.viewNullText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.nullText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 29\n        }\n      }, \"N\\xE3o h\\xE1 question\\xE1rios encontrados!\"))));\n    }\n  }]);\n\n  return AnsweredQuestionnaires;\n}(Component);\n\nexport { AnsweredQuestionnaires as default };\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: AppColors.backgroundColor10,\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    flex: 1\n  },\n  scroll: {\n    width: '100%',\n    maxHeight: '80%'\n  },\n  nameDiscipline: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    marginBottom: 10\n  },\n  viewNullText: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 20\n  },\n  nullText: {\n    fontSize: 15\n  },\n  Indicator: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: AppColors.backgroundColor4\n  },\n  containerCalendar: {\n    backgroundColor: AppColors.backgroundColor4,\n    flex: 1,\n    justifyContent: 'center'\n  },\n  calendar: {\n    height: '90%',\n    justifyContent: 'center'\n  },\n  calendarTouchableOpacity: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: AppColors.calendarColor3,\n    padding: 15,\n    marginTop: 10\n  },\n  textCalendarTouchableOpacity: {\n    color: AppColors.calendarColor2,\n    fontSize: 15\n  },\n  containerViewDate: {\n    marginBottom: 15\n  },\n  textDate: {\n    marginBottom: 10,\n    marginTop: 20,\n    fontSize: 15,\n    fontWeight: 'bold'\n  },\n  viewDate: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  textDate: {\n    fontSize: 15\n  },\n  cardContainerStyle: {\n    borderBottomWidth: 1,\n    borderBottomColor: AppColors.cardColor1,\n    padding: 0,\n    borderRadius: 10\n  },\n  cardView: {\n    backgroundColor: AppColors.cardColor2,\n    width: '100%',\n    borderBottomColor: AppColors.cardColor3,\n    justifyContent: 'center',\n    borderRightColor: AppColors.cardColor3,\n    borderBottomWidth: 3,\n    borderRightWidth: 3,\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingTop: 10\n  },\n  startDateTouchableOpacity: {\n    backgroundColor: AppColors.buttomColor2,\n    width: 100,\n    alignItems: 'center',\n    padding: 10,\n    marginRight: 5,\n    borderRadius: 10\n  },\n  finalDateTouchableOpacity: {\n    backgroundColor: AppColors.buttomColor2,\n    width: 100,\n    alignItems: 'center',\n    padding: 10,\n    marginLeft: 5,\n    borderRadius: 10\n  },\n  periodTextInput: {\n    backgroundColor: AppColors.inputColor\n  },\n  containerViewPeriod: {\n    backgroundColor: AppColors.backgroundColor5,\n    width: '100%',\n    height: 90,\n    marginTop: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10\n  },\n  textPeriod: {\n    color: AppColors.textColor2,\n    marginBottom: 10\n  },\n  viewRender2: {\n    padding: 10\n  }\n});","map":{"version":3,"sources":["C:/GIT/AppProjetoTCC/src/screens/answeredQuestionnaires/AnsweredQuestionnaires.js"],"names":["React","Component","AsyncStorage","Card","CalendarPicker","RadioForm","Header","Api","AppColors","moment","require","locale","AnsweredQuestionnaires","props","getDisciplines","setState","isLoading","JSON","getItem","parse","_id","post","idStudent","questionnairesByPeriod","data","console","log","renderRadio","radioValues","radioColor1","fontSize","color","allSelected","findByDate","state","questionnairesByDate","filter","value","startDate","format","finalDate","findByPeriod","period","filteredQuestionnaire","idClass","selectedStartDate","modalVisible","Date","option","onDateChange","bind","label","date","initialDate","toString","styles","Indicator","backgroundColor1","container","navigation","marginTop","containerCalendar","calendar","calendarColor1","calendarColor2","calendarColor3","calendarTouchableOpacity","textCalendarTouchableOpacity","containerViewPeriod","textPeriod","periodTextInput","scroll","length","map","questionnaire","title","idDiscipline","codeDiscipline","code","name","idProfessor","background","status","statusQuestionnaireColor7","border","statusQuestionnaireColor8","textColor","statusQuestionnaireColor5","cardContainerStyle","viewRender2","nameDiscipline","backgroundColor","width","borderBottomColor","justifyContent","borderRightColor","borderBottomWidth","borderRightWidth","paddingLeft","paddingRight","paddingTop","fontWeight","marginBottom","viewNullText","nullText","StyleSheet","create","backgroundColor10","alignItems","flex","maxHeight","backgroundColor4","height","padding","containerViewDate","textDate","viewDate","flexDirection","cardColor1","borderRadius","cardView","cardColor2","cardColor3","startDateTouchableOpacity","buttomColor2","marginRight","finalDateTouchableOpacity","marginLeft","inputColor","backgroundColor5","textColor2"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View, StyleSheet, ScrollView, AsyncStorage, Modal, TouchableOpacity, ActivityIndicator, TextInput } from 'react-native';\r\nimport { Card } from 'react-native-elements';\r\nimport CalendarPicker from 'react-native-calendar-picker';\r\nimport RadioForm from 'react-native-simple-radio-button';\r\n\r\nimport Header from '../../components/header/Header';\r\nimport Api from '../../services/Api';\r\nimport { AppColors } from '../../colors/AppColors';\r\n\r\nmoment = require('moment');\r\nmoment.locale('pt-BR');\r\n\r\nexport default class AnsweredQuestionnaires extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            questionnairesByPeriod: [],\r\n            selectedStartDate: null,\r\n            modalVisible: false,\r\n            startDate: new Date(),\r\n            finalDate: new Date(),\r\n            option: 0,\r\n            allSelected: 0,\r\n            isLoading: false,\r\n            period: '',\r\n        };\r\n        this.onDateChange = this.onDateChange.bind(this);\r\n        this.radioValues = [\r\n            { label: 'Todos', value: 0 },\r\n            { label: 'Per√≠odo', value: 1 },\r\n        ]\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.getDisciplines();\r\n    }\r\n\r\n    getDisciplines = async () => {\r\n        try {\r\n            this.setState({ isLoading: true })\r\n            const { _id } = JSON.parse(await AsyncStorage.getItem('@APP:user'));\r\n            const { questionnairesByPeriod } = (await Api.post('/questionnaire/findAllByPeriodFinished',\r\n                { idStudent: _id })).data;\r\n\r\n            if (questionnairesByPeriod !== null) {\r\n                this.setState({ questionnairesByPeriod });\r\n            }\r\n            this.setState({ isLoading: false })\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    onDateChange(date) {\r\n        const { option } = this.state;\r\n        if (option == 1) {\r\n            this.setState({\r\n                startDate: date,\r\n            });\r\n        }\r\n        if (option == 2) {\r\n            this.setState({\r\n                finalDate: date,\r\n            });\r\n        }\r\n    }\r\n\r\n    renderRadio = () => {\r\n        return (\r\n            <RadioForm\r\n                radio_props={this.radioValues}\r\n                initial={0}\r\n                buttonColor={AppColors.radioColor1}\r\n                buttonSize={12}\r\n                buttonOuterColor={AppColors.radioColor1}\r\n                selectedButtonColor={AppColors.radioColor1}\r\n                labelStyle={{ fontSize: 12, color: AppColors.radioColor1 }}\r\n                formHorizontal={true}\r\n                labelHorizontal={false}\r\n                onPress={(allSelected) => { this.setState({ allSelected }) }}\r\n            />\r\n        )\r\n    }\r\n\r\n    findByDate = () => {\r\n        const { questionnairesByPeriod, allSelected } = this.state;\r\n        const questionnairesByDate = questionnairesByPeriod.filter(value => (\r\n            moment(this.state.startDate).format('DD/MM/YYYY') <= moment(value.finalDate).format('DD/MM/YYYY') &&\r\n            moment(this.state.finalDate).format('DD/MM/YYYY') >= moment(value.finalDate).format('DD/MM/YYYY')\r\n        ))\r\n        return allSelected == 0 ? questionnairesByPeriod : questionnairesByDate\r\n    }\r\n\r\n    findByPeriod = () => {\r\n        const { questionnairesByPeriod, allSelected, period } = this.state;\r\n        const filteredQuestionnaire = questionnairesByPeriod.filter(value => (\r\n            value.idClass.period == period\r\n        ))\r\n        return allSelected == 0 ? questionnairesByPeriod : filteredQuestionnaire\r\n    }\r\n\r\n    render() {\r\n        const { selectedStartDate, allSelected, option, startDate, finalDate } = this.state;\r\n        const initialDate = selectedStartDate ? selectedStartDate.toString() : '';\r\n        //const questionnairesByPeriod = this.findByDate();\r\n        const questionnairesByPeriod = this.findByPeriod();\r\n\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <View style={styles.Indicator}>\r\n                    <ActivityIndicator size=\"large\" color={AppColors.backgroundColor1} />\r\n                </View>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <Header\r\n                    title='Question√°rios Respondidos'\r\n                    menuIcon='menu'\r\n                    navigation={this.props.navigation}\r\n                />\r\n                <View style={{ marginTop: 10 }}>\r\n                    {this.renderRadio()}\r\n                </View>\r\n\r\n                <Modal\r\n                    animationType=\"slide\"\r\n                    transparent={true}\r\n                    visible={this.state.modalVisible}\r\n                    flex={1}\r\n                >\r\n                    <View style={styles.containerCalendar}>\r\n                        <View style={styles.calendar}>\r\n                            <CalendarPicker\r\n                                onDateChange={this.onDateChange}\r\n                                weekdays={['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sab']}\r\n                                months={['Janeiro', 'Fevereiro', 'Mar√ßo', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro',\r\n                                    'Outubro', 'Novembro', 'Dezembro']}\r\n                                previousTitle='Anterior'\r\n                                nextTitle='Pr√≥ximo'\r\n                                selectedDayColor={AppColors.calendarColor1}\r\n                                selectedDayTextColor={AppColors.calendarColor2}\r\n                                todayBackgroundColor={AppColors.calendarColor3}\r\n                                selectedStartDate={option == 1 ? startDate : finalDate}\r\n                                initialDate={option == 1 ? startDate : finalDate}\r\n                            />\r\n                        </View>\r\n                        <TouchableOpacity style={styles.calendarTouchableOpacity} onPress={() => {\r\n                            this.setState({ modalVisible: false })\r\n                        }}>\r\n                            <Text style={styles.textCalendarTouchableOpacity}>Fechar</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </Modal>\r\n\r\n                {/*allSelected == 1 &&\r\n                    <View style={styles.containerViewDate}>\r\n                        <Text style={styles.textDate}>Selecione abaixo o intervalo de tempo</Text>\r\n                        <View style={styles.viewDate}>\r\n                            <Text style={styles.textDate}>De: </Text>\r\n                            <TouchableOpacity onPress={() => this.setState({ modalVisible: true, option: 1 })} style={styles.startDateTouchableOpacity} >\r\n                                <Text>\r\n                                    {String(moment(this.state.startDate).format('DD/MM/YYYY'))}\r\n                                </Text>\r\n                            </TouchableOpacity>\r\n                            <Text style={styles.textDate}>√† </Text>\r\n                            <TouchableOpacity onPress={() => this.setState({ modalVisible: true, option: 2 })} style={styles.finalDateTouchableOpacity} >\r\n                                <Text>\r\n                                    {String(moment(this.state.finalDate).format('DD/MM/YYYY'))}\r\n                                </Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                */}\r\n\r\n                {allSelected == 1 &&\r\n                    <View style={styles.containerViewPeriod}>\r\n                        <Text style={styles.textPeriod}>Informe abaixo o per√≠odo</Text>\r\n                        <TextInput style={styles.periodTextInput} borderRadius={5} padding={5} width='80%' backgroundColor=\"#ffffff\" onChangeText={(period) => { this.setState({ period }) }} placeholder='Ex: 2021/3' />\r\n                    </View>\r\n                }\r\n\r\n                <ScrollView style={styles.scroll} >\r\n\r\n                    {questionnairesByPeriod.length > 0\r\n                        ?\r\n                        questionnairesByPeriod.map(questionnaire => {\r\n                            const { title } = questionnaire.idDiscipline;\r\n                            const codeDiscipline = questionnaire.idDiscipline.code;\r\n                            const { name } = questionnaire.idProfessor;\r\n                            const { code, period } = questionnaire.idClass;\r\n                            const background = questionnaire.status == 'S' && AppColors.statusQuestionnaireColor7;\r\n                            const border = questionnaire.status == 'S' && AppColors.statusQuestionnaireColor8;\r\n                            const status = questionnaire.status == 'S' && 'Finalizado';\r\n                            const textColor = questionnaire.status == 'S' && AppColors.statusQuestionnaireColor5;\r\n\r\n                            return (\r\n                                <View key={questionnaire._id}>\r\n                                    <Card containerStyle={styles.cardContainerStyle}>\r\n                                        <View style={styles.viewRender2}>\r\n                                            <Text style={styles.nameDiscipline}>{title}</Text>\r\n                                            <Text style={styles.nameDiscipline}>{codeDiscipline}</Text>\r\n                                            <Text style={styles.nameDiscipline}>{'Docente: ' + name}</Text>\r\n                                            <Text style={styles.nameDiscipline}>{'Turma: ' + code}</Text>\r\n                                            <Text style={styles.nameDiscipline}>{'Per√≠odo: ' + period}</Text>\r\n                                        </View>\r\n                                        <View style={{\r\n                                            backgroundColor: background, width: '100%', borderBottomColor: border,\r\n                                            justifyContent: 'center', borderRightColor: border, borderBottomWidth: 3,\r\n                                            borderRightWidth: 3, paddingLeft: 10, paddingRight: 10, paddingTop: 10,\r\n                                        }}>\r\n                                            <Text style={{ fontSize: 16, fontWeight: \"bold\", marginBottom: 10, color: textColor }}>{'Status: ' + status}</Text>\r\n                                        </View>\r\n                                    </Card>\r\n                                </View>\r\n                            );\r\n                        })\r\n                        :\r\n                        <View style={styles.viewNullText}>\r\n                            <Text style={styles.nullText}>N√£o h√° question√°rios encontrados!</Text>\r\n                        </View>\r\n                    }\r\n                </ScrollView>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: AppColors.backgroundColor10,\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        flex: 1,\r\n    },\r\n    scroll: {\r\n        width: '100%',\r\n        maxHeight: '80%',\r\n    },\r\n    nameDiscipline: {\r\n        fontSize: 16,\r\n        fontWeight: \"bold\",\r\n        marginBottom: 10\r\n    },\r\n    viewNullText: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginTop: 20\r\n    },\r\n    nullText: {\r\n        fontSize: 15\r\n    },\r\n    Indicator: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: AppColors.backgroundColor4,\r\n    },\r\n    containerCalendar: {\r\n        backgroundColor: AppColors.backgroundColor4,\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n    },\r\n    calendar: {\r\n        height: '90%',\r\n        justifyContent: 'center',\r\n    },\r\n    calendarTouchableOpacity: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: AppColors.calendarColor3,\r\n        padding: 15,\r\n        marginTop: 10,\r\n    },\r\n    textCalendarTouchableOpacity: {\r\n        color: AppColors.calendarColor2,\r\n        fontSize: 15,\r\n    },\r\n    containerViewDate: {\r\n        marginBottom: 15,\r\n    },\r\n    textDate: {\r\n        marginBottom: 10,\r\n        marginTop: 20,\r\n        fontSize: 15,\r\n        fontWeight: 'bold',\r\n    },\r\n    viewDate: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n    },\r\n    textDate: {\r\n        fontSize: 15,\r\n    },\r\n    cardContainerStyle: {\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: AppColors.cardColor1,\r\n        padding: 0,\r\n        borderRadius: 10,\r\n    },\r\n    cardView: {\r\n        backgroundColor: AppColors.cardColor2,\r\n        width: '100%',\r\n        borderBottomColor: AppColors.cardColor3,\r\n        justifyContent: 'center',\r\n        borderRightColor: AppColors.cardColor3,\r\n        borderBottomWidth: 3,\r\n        borderRightWidth: 3,\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        paddingTop: 10,\r\n    },\r\n    startDateTouchableOpacity: {\r\n        backgroundColor: AppColors.buttomColor2,\r\n        width: 100,\r\n        alignItems: 'center',\r\n        padding: 10,\r\n        marginRight: 5,\r\n        borderRadius: 10,\r\n    },\r\n    finalDateTouchableOpacity: {\r\n        backgroundColor: AppColors.buttomColor2,\r\n        width: 100,\r\n        alignItems: 'center',\r\n        padding: 10,\r\n        marginLeft: 5,\r\n        borderRadius: 10,\r\n    },\r\n    periodTextInput: {\r\n        backgroundColor: AppColors.inputColor,\r\n    },\r\n    containerViewPeriod: {\r\n        backgroundColor: AppColors.backgroundColor5,\r\n        width: '100%',\r\n        height: 90,\r\n        marginTop: 10,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: 10,\r\n    },\r\n    textPeriod: {\r\n        color: AppColors.textColor2,\r\n        marginBottom: 10,\r\n    },\r\n    viewRender2: {\r\n        padding: 10,\r\n    },\r\n})"]},"metadata":{},"sourceType":"module"}