{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\GIT\\\\AppProjetoTCC\\\\src\\\\screens\\\\searchDisciplines\\\\SearchDisciplines.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Card } from 'react-native-elements';\nimport Header from \"../../components/header/Header\";\nimport { AppColors } from \"../../colors/AppColors\";\nimport Api from \"../../services/Api\";\n\nvar SearchDisciplines = function (_Component) {\n  _inherits(SearchDisciplines, _Component);\n\n  var _super = _createSuper(SearchDisciplines);\n\n  function SearchDisciplines(props) {\n    var _this;\n\n    _classCallCheck(this, SearchDisciplines);\n\n    _this = _super.call(this, props);\n\n    _this.SearchDisciplines = function _callee() {\n      var idUser, response, classes;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n\n              _this.setState({\n                isLoading: true\n              });\n\n              _context.t0 = JSON;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@APP:user'));\n\n            case 5:\n              _context.t1 = _context.sent;\n              idUser = _context.t0.parse.call(_context.t0, _context.t1)._id;\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(Api.post('class/findByIdUser', {\n                idUser: idUser,\n                active: true\n              }));\n\n            case 9:\n              response = _context.sent;\n              classes = response.data.classes;\n\n              _this.setState({\n                classes: classes,\n                isLoading: false\n              });\n\n              _context.next = 17;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t2 = _context[\"catch\"](0);\n              console.log(_context.t2);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 14]], Promise);\n    };\n\n    _this.state = {\n      classes: [],\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(SearchDisciplines, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.SearchDisciplines();\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.state.classes;\n\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.Indicator,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: AppColors.backgroundColor1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }\n        }));\n      }\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, React.createElement(Header, {\n        title: \"Disciplinas Matriculadas\",\n        menuIcon: \"menu\",\n        navigation: this.props.navigation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }), React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, classes.length > 0 ? classes.map(function (classObject) {\n        var idDiscipline = classObject.idDiscipline,\n            _id = classObject._id,\n            code = classObject.code;\n        return React.createElement(Card, {\n          key: _id,\n          containerStyle: styles.cardStyle,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }\n        }, React.createElement(Text, {\n          style: styles.nameDiscipline,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 37\n          }\n        }, idDiscipline.title), React.createElement(Text, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 37\n          }\n        }, idDiscipline.code), React.createElement(Text, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 37\n          }\n        }, 'Turma: ' + code));\n      }) : React.createElement(View, {\n        style: styles.viewNullText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.nullText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }\n      }, \"N\\xE3o h\\xE1 disciplinas encontradas!\"))));\n    }\n  }]);\n\n  return SearchDisciplines;\n}(Component);\n\nexport { SearchDisciplines as default };\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: AppColors.backgroundColor10,\n    flex: 1\n  },\n  nameDiscipline: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    marginBottom: 10\n  },\n  viewNullText: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 20\n  },\n  nullText: {\n    fontSize: 15\n  },\n  Indicator: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: AppColors.backgroundColor4\n  },\n  cardStyle: {\n    borderBottomWidth: 2,\n    borderBottomColor: AppColors.cardColor4,\n    borderRadius: 10\n  }\n});","map":{"version":3,"sources":["C:/GIT/AppProjetoTCC/src/screens/searchDisciplines/SearchDisciplines.js"],"names":["React","Component","AsyncStorage","Card","Header","AppColors","Api","SearchDisciplines","props","setState","isLoading","JSON","getItem","idUser","parse","_id","post","active","response","classes","data","console","log","state","styles","Indicator","backgroundColor1","container","navigation","length","map","classObject","idDiscipline","code","cardStyle","nameDiscipline","title","viewNullText","nullText","StyleSheet","create","backgroundColor","backgroundColor10","flex","fontSize","fontWeight","marginBottom","alignItems","justifyContent","marginTop","backgroundColor4","borderBottomWidth","borderBottomColor","cardColor4","borderRadius"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View, Text, StyleSheet, AsyncStorage, ScrollView, ActivityIndicator } from 'react-native';\r\nimport { Card } from 'react-native-elements';\r\nimport Header from '../../components/header/Header';\r\nimport { AppColors } from \"../../colors/AppColors\";\r\n\r\nimport Api from '../../services/Api';\r\n\r\nexport default class SearchDisciplines extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            classes: [],\r\n            isLoading: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.SearchDisciplines();\r\n    }\r\n\r\n    SearchDisciplines = async () => {\r\n        try {\r\n            this.setState({isLoading: true})\r\n            const idUser = JSON.parse(await AsyncStorage.getItem('@APP:user'))._id;\r\n            const response = await Api.post('class/findByIdUser', { idUser, active: true });\r\n            const { classes } = response.data;\r\n            this.setState({ classes, isLoading: false });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { classes } = this.state;\r\n\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <View style={styles.Indicator}>\r\n                    <ActivityIndicator size=\"large\" color={AppColors.backgroundColor1} />\r\n                </View>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <Header\r\n                    title='Disciplinas Matriculadas'\r\n                    menuIcon='menu'\r\n                    navigation={this.props.navigation}\r\n                />\r\n                <ScrollView>\r\n                    {classes.length > 0\r\n                        ?\r\n                        classes.map(classObject => {\r\n                            const { idDiscipline, _id, code } = classObject;\r\n                            return (\r\n                                <Card key={_id} containerStyle={styles.cardStyle}>\r\n                                    <Text style={styles.nameDiscipline}>{idDiscipline.title}</Text>\r\n                                    <Text>{idDiscipline.code}</Text>\r\n                                    <Text>{'Turma: ' + code}</Text>\r\n                                </Card>\r\n                            );\r\n                        })\r\n                        :\r\n                        <View style={styles.viewNullText}>\r\n                            <Text style={styles.nullText}>Não há disciplinas encontradas!</Text>\r\n                        </View>\r\n                    }\r\n                </ScrollView>\r\n            </View>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: AppColors.backgroundColor10,\r\n        flex: 1,\r\n    },\r\n    nameDiscipline: {\r\n        fontSize: 16,\r\n        fontWeight: \"bold\",\r\n        marginBottom: 10,\r\n    },\r\n    viewNullText: {\r\n        flex:1, \r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        marginTop: 20,\r\n    },\r\n    nullText: {\r\n        fontSize: 15,\r\n    },\r\n    Indicator: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: AppColors.backgroundColor4,\r\n    },\r\n    cardStyle: {\r\n        borderBottomWidth: 2, \r\n        borderBottomColor: AppColors.cardColor4,\r\n        borderRadius: 10,\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}