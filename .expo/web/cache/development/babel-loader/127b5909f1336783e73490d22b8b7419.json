{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\GIT\\\\AppProjetoTCC\\\\src\\\\screens\\\\quiz\\\\Quiz.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport Icon2 from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { RadioButton } from 'react-native-paper';\nimport { AppColors } from \"../../colors/AppColors\";\nimport Header from \"../../components/header/Header\";\nimport Api from \"../../services/Api\";\n\nvar Quiz = function (_Component) {\n  _inherits(Quiz, _Component);\n\n  var _super = _createSuper(Quiz);\n\n  function Quiz(props) {\n    var _this;\n\n    _classCallCheck(this, Quiz);\n\n    _this = _super.call(this, props);\n\n    _this.initial = function _callee() {\n      var _this$state, question_answer, questions, answers, list, listQuestionAnswer;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state = _this.state, question_answer = _this$state.question_answer, questions = _this$state.questions, answers = _this$state.answers;\n              list = question_answer.map(function (object) {\n                var question = questions.filter(function (obj) {\n                  return obj._id == object.idQuestion;\n                })[0];\n                var answer = answers.filter(function (obj) {\n                  return obj._id == object.idAnswer;\n                })[0];\n                return _objectSpread(_objectSpread({}, object), {}, {\n                  idAnswer: answer,\n                  idQuestion: question\n                });\n              });\n              listQuestionAnswer = list.map(function (object, index) {\n                return list.filter(function (obj) {\n                  return obj.idQuestion.option == index + 1;\n                })[0];\n              });\n\n              _this.setState({\n                question_answer: listQuestionAnswer,\n                commentary: _this.questionnaire.commentary\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getQuestions = function _callee2() {\n      var response, questions;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(Api.get('/question/findAll'));\n\n            case 3:\n              response = _context2.sent;\n              questions = response.data.questions;\n\n              _this.setState({\n                questions: questions\n              });\n\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    _this.getAnswers = function _callee3() {\n      var response, answers;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(Api.get('/answer/findAll'));\n\n            case 3:\n              response = _context3.sent;\n              answers = response.data.answers;\n\n              _this.setState({\n                answers: answers\n              });\n\n              _context3.next = 11;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    _this.updateState = function (value) {\n      var _this$state2 = _this.state,\n          answers = _this$state2.answers,\n          index = _this$state2.index;\n      var question_answer = _this.state.question_answer;\n      var answer = answers.filter(function (object) {\n        return object.option == value;\n      })[0];\n      question_answer[index] = _objectSpread(_objectSpread({}, question_answer[index]), {}, {\n        idAnswer: answer\n      });\n\n      _this.setState({\n        question_answer: question_answer,\n        radioColor: AppColors.radioColor1\n      });\n    };\n\n    _this.saveState = function _callee4() {\n      var _this$state3, question_answer, commentary, idQuestionnaire, list, response;\n\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _this$state3 = _this.state, question_answer = _this$state3.question_answer, commentary = _this$state3.commentary;\n              idQuestionnaire = question_answer[0].idQuestionnaire;\n              list = {\n                idQuestionnaire: idQuestionnaire,\n                commentary: commentary,\n                status: 'I',\n                questionAnswer: question_answer\n              };\n              _context4.next = 6;\n              return _regeneratorRuntime.awrap(Api.put('/questionnaire/update', list));\n\n            case 6:\n              response = _context4.sent;\n\n              _this.props.navigation.navigate('ScreenSelectionDisciplines');\n\n              _context4.next = 13;\n              break;\n\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log(_context4.t0);\n\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 10]], Promise);\n    };\n\n    _this.updateQuestionnaire = function _callee5() {\n      var _this$state4, question_answer, commentary, idQuestionnaire, allchecked, list, response;\n\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _this$state4 = _this.state, question_answer = _this$state4.question_answer, commentary = _this$state4.commentary;\n              idQuestionnaire = question_answer[0].idQuestionnaire;\n              allchecked = question_answer.filter(function (object) {\n                return object.idAnswer == undefined;\n              });\n\n              if (!(allchecked.length > 0)) {\n                _context5.next = 9;\n                break;\n              }\n\n              Alert.alert('Preencha todas as respostas!');\n\n              _this.setState({\n                index: allchecked[0].idQuestion.option - 1,\n                radioColor: AppColors.radioColor2\n              });\n\n              _context5.next = 15;\n              break;\n\n            case 9:\n              list = {\n                idQuestionnaire: idQuestionnaire,\n                commentary: commentary,\n                status: 'S',\n                questionAnswer: question_answer\n              };\n              _context5.next = 12;\n              return _regeneratorRuntime.awrap(Api.put('/questionnaire/update', list));\n\n            case 12:\n              response = _context5.sent;\n              Alert.alert('Questionário enviado com sucesso!');\n\n              _this.props.navigation.navigate('ScreenSelectionDisciplines', {\n                load: true\n              });\n\n            case 15:\n              _context5.next = 20;\n              break;\n\n            case 17:\n              _context5.prev = 17;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.log(_context5.t0);\n\n            case 20:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 17]], Promise);\n    };\n\n    _this.renderScreen1 = function () {\n      var _this$state5 = _this.state,\n          index = _this$state5.index,\n          question_answer = _this$state5.question_answer;\n      var idQuestion = question_answer[index].idQuestion;\n      return React.createElement(View, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 16\n        }\n      }, React.createElement(View, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.countQuestion,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }, \"Quest\\xE3o \", idQuestion.option, \" de \", question_answer.length)));\n    };\n\n    _this.renderScreen2 = function () {\n      var _this$state6 = _this.state,\n          index = _this$state6.index,\n          questions = _this$state6.questions;\n      return React.createElement(View, {\n        style: styles.viewRenderScreen2,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 16\n        }\n      }, React.createElement(View, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.question,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }\n      }, questions[index].title)));\n    };\n\n    _this.boundMinimumLimit = function () {\n      var index = _this.state.index;\n\n      if (index > 0) {\n        index = index - 1;\n\n        _this.setState({\n          index: index,\n          radioColor: AppColors.radioColor1\n        });\n      }\n    };\n\n    _this.boundMaximumLimit = function () {\n      var _this$state7 = _this.state,\n          questions = _this$state7.questions,\n          index = _this$state7.index;\n\n      if (index <= questions.length - 1) {\n        index = index + 1;\n\n        _this.setState({\n          index: index,\n          radioColor: AppColors.radioColor1\n        });\n      }\n    };\n\n    _this.renderQuestions = function () {\n      var _this$state8 = _this.state,\n          index = _this$state8.index,\n          question_answer = _this$state8.question_answer;\n\n      if (question_answer.length > 0) {\n        var question = question_answer[index].idQuestion.title;\n        return question;\n      }\n    };\n\n    _this.renderRadio = function () {\n      var _this$state9 = _this.state,\n          index = _this$state9.index,\n          question_answer = _this$state9.question_answer,\n          answers = _this$state9.answers,\n          radioColor = _this$state9.radioColor;\n      var option = question_answer[index].idAnswer != undefined ? question_answer[index].idAnswer.option : 0;\n      return answers.map(function (object) {\n        return React.createElement(View, {\n          key: object._id,\n          style: styles.viewRenderRadio,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 24\n          }\n        }, React.createElement(RadioButton, {\n          value: object.option,\n          status: option === object.option ? 'checked' : 'unchecked',\n          onPress: function onPress() {\n            _this.updateState(object.option);\n          },\n          uncheckedColor: radioColor,\n          color: AppColors.radioColor3,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 21\n          }\n        }), React.createElement(Text, {\n          style: styles.textRenderRadio,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 21\n          }\n        }, object.option, \" - \", object.title));\n      });\n    };\n\n    _this.renderBody = function () {\n      var _this$state10 = _this.state,\n          index = _this$state10.index,\n          question_answer = _this$state10.question_answer;\n      return question_answer.length > 0 ? index < question_answer.length ? React.createElement(View, {\n        style: styles.viewRenderBody1,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }\n      }, _this.renderScreen1(), React.createElement(View, {\n        style: styles.viewRenderBody2,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.question,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }\n      }, _this.renderQuestions()), React.createElement(View, {\n        style: styles.viewRenderBody3,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }\n      }, _this.renderRadio()))) : React.createElement(View, {\n        style: styles.viewRenderBody4,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.viewRenderBody5,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.textRenderBody1,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }\n      }, \"Coment\\xE1rios, sugest\\xF5es ou cr\\xEDticas?\"), React.createElement(Text, {\n        style: styles.textRenderBody2,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }\n      }, \"Escreva abaixo:\")), React.createElement(View, {\n        style: styles.viewRenderBody6,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }\n      }, React.createElement(TextInput, {\n        width: \"90%\",\n        height: \"95%\",\n        borderRadius: 10,\n        fontSize: 20,\n        maxLength: 500,\n        multiline: true,\n        textAlignVertical: \"top\",\n        padding: 10,\n        value: _this.state.commentary,\n        placeholder: \"Digite aqui...\",\n        backgroundColor: AppColors.textColor1,\n        onChangeText: function onChangeText(commentary) {\n          _this.setState({\n            commentary: commentary\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: styles.viewRenderBody7,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.cleanButton,\n        onPress: function onPress() {\n          _this.setState({\n            commentary: ''\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 25\n        }\n      }, React.createElement(Icon2, {\n        name: \"broom\",\n        style: styles.leftIcon,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 29\n        }\n      }), React.createElement(Text, {\n        style: styles.textButton2,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 29\n        }\n      }, \"Limpar\")), React.createElement(View, {\n        style: styles.backButton,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 25\n        }\n      }), React.createElement(View, {\n        style: styles.viewRenderBody8,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 62\n        }\n      }, 500 - _this.state.commentary.length, \" caracteres restantes\")))) : React.createElement(View, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }\n      });\n    };\n\n    _this.renderFooter = function () {\n      var _this$state11 = _this.state,\n          index = _this$state11.index,\n          question_answer = _this$state11.question_answer;\n      return question_answer.length > 0 ? React.createElement(View, {\n        style: styles.viewRenderFooter,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }\n      }, index !== 0 && React.createElement(TouchableOpacity, {\n        style: styles.backButton,\n        onPress: function onPress() {\n          _this.boundMinimumLimit();\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }\n      }, React.createElement(Icon, {\n        name: \"chevron-left\",\n        style: styles.leftIcon,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }\n      }), React.createElement(Text, {\n        style: styles.textButton,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 25\n        }\n      }, \"Anterior\")), React.createElement(TouchableOpacity, {\n        style: styles.saveButton,\n        onPress: function onPress() {\n          Alert.alert('Atenção', 'Deseja salvar progresso atual?', [{\n            text: 'Sim',\n            onPress: function onPress() {\n              return _this.saveState();\n            }\n          }, {\n            text: 'Não'\n          }]);\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 17\n        }\n      }, React.createElement(Icon, {\n        name: \"save\",\n        style: styles.leftIcon,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: styles.textButton,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }\n      }, \"Salvar\")), question_answer.length + 1 !== index + 1 ? React.createElement(TouchableOpacity, {\n        style: styles.forwardButton,\n        onPress: function onPress() {\n          _this.boundMaximumLimit();\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.textButton,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 29\n        }\n      }, \"Pr\\xF3ximo\"), React.createElement(Icon, {\n        name: \"chevron-right\",\n        style: styles.rightIcon,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 29\n        }\n      })) : React.createElement(TouchableOpacity, {\n        style: styles.sendButton,\n        onPress: function onPress() {\n          Alert.alert('Atenção', 'Deseja mesmo enviar o Questionário? Uma vez finalizado não será mais possível altera-lo', [{\n            text: 'Sim',\n            onPress: function onPress() {\n              return _this.updateQuestionnaire();\n            }\n          }, {\n            text: 'Não'\n          }]);\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 25\n        }\n      }, React.createElement(Icon, {\n        name: \"send\",\n        style: styles.leftIcon,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 29\n        }\n      }), React.createElement(Text, {\n        style: styles.textButton,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 29\n        }\n      }, \"Enviar\"))) : React.createElement(View, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }\n      });\n    };\n\n    _this.state = {\n      questions: [],\n      answers: [],\n      question_answer: [],\n      index: 0,\n      commentary: '',\n      radioColor: AppColors.radioColor1\n    };\n    _this.questionnaire = _this.props.navigation.getParam('questionnaire');\n    return _this;\n  }\n\n  _createClass(Quiz, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              this.setState({\n                question_answer: this.questionnaire.questionAnswer\n              });\n              _context6.next = 3;\n              return _regeneratorRuntime.awrap(this.getQuestions());\n\n            case 3:\n              _context6.next = 5;\n              return _regeneratorRuntime.awrap(this.getAnswers());\n\n            case 5:\n              _context6.next = 7;\n              return _regeneratorRuntime.awrap(this.initial());\n\n            case 7:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var navigation = this.props.navigation;\n      var _this$questionnaire$i = this.questionnaire.idDiscipline,\n          title = _this$questionnaire$i.title,\n          code = _this$questionnaire$i.code;\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }\n      }, React.createElement(Header, {\n        title: code + ' - ' + title,\n        menuIcon: \"arrow-back\",\n        navigation: navigation,\n        isBack: true,\n        screenName: \"SelectionScreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 17\n        }\n      }), this.renderBody(), this.renderFooter());\n    }\n  }]);\n\n  return Quiz;\n}(Component);\n\nexport { Quiz as default };\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    backgroundColor: AppColors.backgroundColor6,\n    flex: 1,\n    flexDirection: 'column'\n  },\n  forwardButton: {\n    backgroundColor: AppColors.buttomColor4,\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    borderRadius: 5,\n    elevation: 5,\n    width: '30%'\n  },\n  backButton: {\n    backgroundColor: AppColors.buttomColor4,\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    borderRadius: 5,\n    elevation: 5,\n    width: '30%'\n  },\n  cleanButton: {\n    backgroundColor: AppColors.buttomColor5,\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    borderRadius: 5,\n    elevation: 5,\n    width: '30%'\n  },\n  saveButton: {\n    backgroundColor: AppColors.buttomColor6,\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    borderRadius: 5,\n    elevation: 5,\n    width: '30%'\n  },\n  sendButton: {\n    backgroundColor: AppColors.buttomColor7,\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    borderRadius: 5,\n    elevation: 5,\n    width: '30%'\n  },\n  textButton: {\n    color: AppColors.textColor1,\n    padding: 10,\n    fontSize: 15,\n    textShadowColor: AppColors.textShadowColor2,\n    textShadowOffset: {\n      width: -1,\n      height: 1\n    },\n    textShadowRadius: 5\n  },\n  textButton2: {\n    color: AppColors.textColor1,\n    padding: 5,\n    paddingRight: 10,\n    fontSize: 15,\n    fontWeight: 'bold',\n    textShadowColor: AppColors.textShadowColor2,\n    textShadowOffset: {\n      width: -1,\n      height: 1\n    },\n    textShadowRadius: 5\n  },\n  countQuestion: {\n    fontSize: 20,\n    textAlign: 'center',\n    fontWeight: 'bold',\n    padding: 10\n  },\n  question: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    textAlign: 'justify',\n    padding: 20,\n    paddingBottom: 30\n  },\n  leftIcon: {\n    color: AppColors.iconColor1,\n    fontSize: 20,\n    paddingLeft: 10,\n    elevation: 5\n  },\n  rightIcon: {\n    color: AppColors.iconColor1,\n    fontSize: 20,\n    paddingRight: 10,\n    elevation: 5\n  },\n  viewRenderScreen2: {\n    alignItems: 'center'\n  },\n  viewRenderRadio: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  textRenderRadio: {\n    fontSize: 20\n  },\n  viewRenderBody1: {\n    flex: 1,\n    width: '100%'\n  },\n  viewRenderBody2: {\n    justifyContent: 'space-between',\n    flex: 1,\n    backgroundColor: AppColors.backgroundColor4,\n    marginLeft: 10,\n    marginRight: 10,\n    borderRadius: 10\n  },\n  viewRenderBody3: {\n    marginBottom: 10,\n    padding: 10\n  },\n  viewRenderBody4: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: '100%'\n  },\n  viewRenderBody5: {\n    width: '100%'\n  },\n  textRenderBody1: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginTop: 10,\n    textAlign: 'center'\n  },\n  textRenderBody2: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  viewRenderBody6: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    width: '100%'\n  },\n  viewRenderBody7: {\n    width: '90%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    padding: 10\n  },\n  viewRenderBody8: {\n    height: '100%'\n  },\n  viewRenderFooter: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    width: '100%',\n    backgroundColor: AppColors.backgroundColor6,\n    padding: 10\n  }\n});","map":{"version":3,"sources":["C:/GIT/AppProjetoTCC/src/screens/quiz/Quiz.js"],"names":["React","Component","Icon","Icon2","RadioButton","AppColors","Header","Api","Quiz","props","initial","state","question_answer","questions","answers","list","map","object","question","filter","obj","_id","idQuestion","answer","idAnswer","listQuestionAnswer","index","option","setState","commentary","questionnaire","getQuestions","get","response","data","console","log","getAnswers","updateState","value","radioColor","radioColor1","saveState","idQuestionnaire","status","questionAnswer","put","navigation","navigate","updateQuestionnaire","allchecked","undefined","length","Alert","alert","radioColor2","load","renderScreen1","styles","countQuestion","renderScreen2","viewRenderScreen2","title","boundMinimumLimit","boundMaximumLimit","renderQuestions","renderRadio","viewRenderRadio","radioColor3","textRenderRadio","renderBody","viewRenderBody1","viewRenderBody2","viewRenderBody3","viewRenderBody4","viewRenderBody5","textRenderBody1","textRenderBody2","viewRenderBody6","textColor1","viewRenderBody7","cleanButton","leftIcon","textButton2","backButton","viewRenderBody8","renderFooter","viewRenderFooter","textButton","saveButton","text","onPress","forwardButton","rightIcon","sendButton","getParam","idDiscipline","code","container","StyleSheet","create","alignItems","justifyContent","backgroundColor","backgroundColor6","flex","flexDirection","buttomColor4","borderRadius","elevation","width","buttomColor5","buttomColor6","buttomColor7","color","padding","fontSize","textShadowColor","textShadowColor2","textShadowOffset","height","textShadowRadius","paddingRight","fontWeight","textAlign","paddingBottom","iconColor1","paddingLeft","backgroundColor4","marginLeft","marginRight","marginBottom","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity, Alert, TextInput } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport Icon2 from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport { RadioButton } from 'react-native-paper';\r\nimport { AppColors } from '../../colors/AppColors';\r\n\r\nimport Header from '../../components/header/Header';\r\nimport Api from '../../services/Api';\r\n\r\nexport default class Quiz extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            questions: [],\r\n            answers: [],\r\n            question_answer: [],\r\n            index: 0,\r\n            commentary: '',\r\n            radioColor: AppColors.radioColor1\r\n        };\r\n        this.questionnaire = this.props.navigation.getParam('questionnaire');\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({ question_answer: this.questionnaire.questionAnswer });\r\n        await this.getQuestions();\r\n        await this.getAnswers();\r\n        await this.initial();\r\n    }\r\n\r\n    initial = async () => {\r\n        const { question_answer, questions, answers } = this.state;\r\n\r\n        const list = question_answer.map(object => {\r\n            const question = questions.filter(obj => obj._id == object.idQuestion)[0];\r\n            const answer = answers.filter(obj => obj._id == object.idAnswer)[0];\r\n            return ({\r\n                ...object,\r\n                idAnswer: answer,\r\n                idQuestion: question\r\n            })\r\n        });\r\n\r\n        const listQuestionAnswer = list.map((object, index) => {\r\n            return list.filter(obj => obj.idQuestion.option == index + 1)[0];\r\n        });\r\n\r\n        this.setState({ question_answer: listQuestionAnswer, commentary: this.questionnaire.commentary })\r\n    }\r\n\r\n    getQuestions = async () => {\r\n        try {\r\n            const response = await Api.get('/question/findAll');\r\n\r\n            const { questions } = response.data;\r\n\r\n            this.setState({ questions });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    getAnswers = async () => {\r\n        try {\r\n            const response = await Api.get('/answer/findAll');\r\n\r\n            const { answers } = response.data;\r\n\r\n            this.setState({ answers });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    updateState = (value) => {\r\n        const { answers, index } = this.state;\r\n        let { question_answer } = this.state;\r\n        const answer = answers.filter(object => object.option == value)[0];\r\n\r\n        question_answer[index] = {\r\n            ...question_answer[index],\r\n            idAnswer: answer\r\n        };\r\n\r\n        this.setState({ question_answer, radioColor: AppColors.radioColor1 });\r\n    }\r\n\r\n    saveState = async () => {\r\n        try {\r\n            const { question_answer, commentary } = this.state;\r\n            const { idQuestionnaire } = question_answer[0];\r\n            const list = {\r\n                idQuestionnaire,\r\n                commentary,\r\n                status: 'I',\r\n                questionAnswer: question_answer\r\n            }\r\n            const response = await Api.put('/questionnaire/update', list)\r\n            this.props.navigation.navigate('ScreenSelectionDisciplines')\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    updateQuestionnaire = async () => {\r\n        try {\r\n            const { question_answer, commentary } = this.state;\r\n            const { idQuestionnaire } = question_answer[0];\r\n            const allchecked = question_answer.filter(object => object.idAnswer == undefined);\r\n\r\n            if (allchecked.length > 0) {\r\n                Alert.alert('Preencha todas as respostas!');\r\n                this.setState({ index: allchecked[0].idQuestion.option - 1, radioColor: AppColors.radioColor2 });\r\n            } else {\r\n                const list = {\r\n                    idQuestionnaire,\r\n                    commentary,\r\n                    status: 'S',\r\n                    questionAnswer: question_answer\r\n                }\r\n                const response = await Api.put('/questionnaire/update', list)\r\n                Alert.alert('Questionário enviado com sucesso!')\r\n                this.props.navigation.navigate('ScreenSelectionDisciplines', {load: true})\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    renderScreen1 = () => {\r\n        const { index, question_answer } = this.state;\r\n        const { idQuestion } = question_answer[index];\r\n        return <View>\r\n            <View>\r\n                <Text style={styles.countQuestion}>Questão {idQuestion.option} de {question_answer.length}</Text>\r\n            </View>\r\n        </View>\r\n    }\r\n\r\n    renderScreen2 = () => {\r\n        const { index, questions } = this.state;\r\n\r\n        return <View style={styles.viewRenderScreen2}>\r\n            <View>\r\n                <Text style={styles.question}>{questions[index].title}</Text>\r\n            </View>\r\n        </View>\r\n    }\r\n\r\n    boundMinimumLimit = () => {\r\n        let { index } = this.state;\r\n        if (index > 0) {\r\n            index = index - 1;\r\n            this.setState({ index, radioColor: AppColors.radioColor1 });\r\n        }\r\n    }\r\n\r\n    boundMaximumLimit = () => {\r\n        let { questions, index } = this.state;\r\n        if (index <= questions.length - 1) {\r\n            index = index + 1;\r\n            this.setState({ index, radioColor: AppColors.radioColor1 });\r\n        }\r\n    }\r\n\r\n    renderQuestions = () => {\r\n        const { index, question_answer } = this.state;\r\n        if (question_answer.length > 0) {\r\n\r\n            const question = question_answer[index].idQuestion.title;\r\n            return question;\r\n        }\r\n    }\r\n\r\n    renderRadio = () => {\r\n        const { index, question_answer, answers, radioColor } = this.state;\r\n        const option = question_answer[index].idAnswer != undefined ? question_answer[index].idAnswer.option : 0;\r\n        return (\r\n            answers.map(object => {\r\n                return <View key={object._id} style={styles.viewRenderRadio}>\r\n                    <RadioButton\r\n                        value={object.option}\r\n                        status={option === object.option ? 'checked' : 'unchecked'}\r\n                        onPress={() => { this.updateState(object.option) }}\r\n                        uncheckedColor={radioColor}\r\n                        color={AppColors.radioColor3}\r\n                    />\r\n                    <Text style={styles.textRenderRadio}>{object.option} - {object.title}</Text>\r\n                </View>\r\n            })\r\n        )\r\n    }\r\n\r\n    renderBody = () => {\r\n        const { index, question_answer } = this.state;\r\n\r\n        return (question_answer.length > 0\r\n            ?\r\n            index < question_answer.length ?\r\n                <View style={styles.viewRenderBody1}>\r\n                    {this.renderScreen1()}\r\n                    <View style={styles.viewRenderBody2}>\r\n                        <Text style={styles.question}>{this.renderQuestions()}</Text>\r\n                        <View style={styles.viewRenderBody3}>{this.renderRadio()}</View>\r\n                    </View>\r\n                </View>\r\n                :\r\n                <View style={styles.viewRenderBody4}>\r\n                    <View style={styles.viewRenderBody5}>\r\n                        <Text style={styles.textRenderBody1}>\r\n                            Comentários, sugestões ou críticas?\r\n                        </Text>\r\n                        <Text style={styles.textRenderBody2}>\r\n                            Escreva abaixo:\r\n                        </Text>\r\n                    </View>\r\n                    <View style={styles.viewRenderBody6}>\r\n                        <TextInput\r\n                            width='90%'\r\n                            height='95%'\r\n                            borderRadius={10}\r\n                            fontSize={20}\r\n                            maxLength = {500}\r\n                            multiline={true}\r\n                            textAlignVertical='top'\r\n                            padding={10}\r\n                            value={this.state.commentary}\r\n                            placeholder='Digite aqui...'\r\n                            backgroundColor={AppColors.textColor1}\r\n                            onChangeText={(commentary) => {\r\n                                this.setState({ commentary })\r\n                            }}\r\n                        />\r\n                    </View>\r\n                    <View style={styles.viewRenderBody7}>\r\n                        <TouchableOpacity style={styles.cleanButton} onPress={() => {\r\n                            this.setState({ commentary: '' })\r\n                        }}>\r\n                            <Icon2 name='broom' style={styles.leftIcon} />\r\n                            <Text style={styles.textButton2}>Limpar</Text>\r\n                        </TouchableOpacity>\r\n                        <View style={styles.backButton} />\r\n                        <View style={styles.viewRenderBody8}><Text>{500 - this.state.commentary.length} caracteres restantes</Text></View> \r\n                    </View>\r\n                </View>\r\n            :\r\n            <View />\r\n        )\r\n    }\r\n\r\n    renderFooter = () => {\r\n        const { index, question_answer } = this.state;\r\n\r\n        return (question_answer.length > 0\r\n            ?\r\n            <View style={styles.viewRenderFooter}>\r\n                {\r\n                    index !== 0 &&\r\n                    <TouchableOpacity style={styles.backButton} onPress={() => { this.boundMinimumLimit() }}>\r\n                        <Icon name='chevron-left' style={styles.leftIcon} />\r\n                        <Text style={styles.textButton}>Anterior</Text>\r\n                    </TouchableOpacity>\r\n                }\r\n                <TouchableOpacity style={styles.saveButton} onPress={() => {\r\n                    Alert.alert('Atenção', 'Deseja salvar progresso atual?',\r\n                    [\r\n                        { text: 'Sim', onPress: () => this.saveState() },\r\n                        { text: 'Não' },\r\n                    ])\r\n                    }}>\r\n                    <Icon name='save' style={styles.leftIcon} />\r\n                    <Text style={styles.textButton}>Salvar</Text>\r\n                </TouchableOpacity>\r\n                {\r\n                    question_answer.length + 1 !== index + 1 ?\r\n                        <TouchableOpacity style={styles.forwardButton} onPress={() => { this.boundMaximumLimit() }}>\r\n                            <Text style={styles.textButton}>Próximo</Text>\r\n                            <Icon name='chevron-right' style={styles.rightIcon} />\r\n                        </TouchableOpacity>\r\n                        :\r\n                        <TouchableOpacity style={styles.sendButton} onPress={() => {\r\n                            Alert.alert('Atenção', 'Deseja mesmo enviar o Questionário? Uma vez finalizado não será mais possível altera-lo',\r\n                                [\r\n                                    { text: 'Sim', onPress: () => this.updateQuestionnaire() },\r\n                                    { text: 'Não' },\r\n                                ])\r\n                        }}>\r\n                            <Icon name='send' style={styles.leftIcon} />\r\n                            <Text style={styles.textButton}>Enviar</Text>\r\n                        </TouchableOpacity>\r\n                }\r\n            </View>\r\n            :\r\n            <View />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { navigation } = this.props;\r\n        const { title, code } = this.questionnaire.idDiscipline;\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <Header\r\n                    title={code + ' - ' + title}\r\n                    menuIcon='arrow-back'\r\n                    navigation={navigation}\r\n                    isBack={true}\r\n                    screenName='SelectionScreen'\r\n                />\r\n                {this.renderBody()}\r\n                {this.renderFooter()}\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: AppColors.backgroundColor6,\r\n        flex: 1,\r\n        flexDirection: 'column'\r\n    },\r\n    forwardButton: {\r\n        backgroundColor: AppColors.buttomColor4,\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        borderRadius: 5,\r\n        elevation: 5,\r\n        width: '30%'\r\n    },\r\n    backButton: {\r\n        backgroundColor: AppColors.buttomColor4,\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        borderRadius: 5,\r\n        elevation: 5,\r\n        width: '30%'\r\n    },\r\n    cleanButton: {\r\n        backgroundColor: AppColors.buttomColor5,\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        borderRadius: 5,\r\n        elevation: 5,\r\n        width: '30%'\r\n    },\r\n    saveButton: {\r\n        backgroundColor: AppColors.buttomColor6,\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        borderRadius: 5,\r\n        elevation: 5,\r\n        width: '30%'\r\n    },\r\n    sendButton: {\r\n        backgroundColor: AppColors.buttomColor7,\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        borderRadius: 5,\r\n        elevation: 5,\r\n        width: '30%'\r\n    },\r\n    textButton: {\r\n        color: AppColors.textColor1,\r\n        padding: 10,\r\n        fontSize: 15,\r\n        textShadowColor: AppColors.textShadowColor2,\r\n        textShadowOffset: { width: -1, height: 1 },\r\n        textShadowRadius: 5,\r\n    },\r\n    textButton2: {\r\n        color: AppColors.textColor1, \r\n        padding: 5, \r\n        paddingRight: 10,\r\n        fontSize: 15, \r\n        fontWeight: 'bold',\r\n        textShadowColor: AppColors.textShadowColor2,\r\n        textShadowOffset: { width: -1, height: 1 },\r\n        textShadowRadius: 5,\r\n    },\r\n    countQuestion: {\r\n        fontSize: 20,\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        padding: 10\r\n    },\r\n    question: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        textAlign: 'justify',\r\n        padding: 20,\r\n        paddingBottom: 30\r\n    },\r\n    leftIcon: {\r\n        color: AppColors.iconColor1,\r\n        fontSize: 20,\r\n        paddingLeft: 10,\r\n        elevation: 5\r\n    },\r\n    rightIcon: {\r\n        color: AppColors.iconColor1,\r\n        fontSize: 20,\r\n        paddingRight: 10,\r\n        elevation: 5\r\n    },\r\n    viewRenderScreen2: {\r\n        alignItems: 'center',\r\n    },\r\n    viewRenderRadio: {\r\n        flexDirection: 'row', \r\n        alignItems: 'center',\r\n    },\r\n    textRenderRadio: {\r\n        fontSize: 20,\r\n    },\r\n    viewRenderBody1: {\r\n        flex: 1, \r\n        width: '100%',\r\n    },\r\n    viewRenderBody2: {\r\n        justifyContent: 'space-between', \r\n        flex: 1, \r\n        backgroundColor: AppColors.backgroundColor4, \r\n        marginLeft: 10,\r\n        marginRight: 10, \r\n        borderRadius: 10,\r\n    },\r\n    viewRenderBody3: {\r\n        marginBottom: 10, \r\n        padding: 10,\r\n    },\r\n    viewRenderBody4: {\r\n        flex: 1, \r\n        alignItems: 'center', \r\n        justifyContent: 'space-between', \r\n        width: '100%',\r\n    },\r\n    viewRenderBody5: {\r\n        width: '100%',\r\n    },\r\n    textRenderBody1: {\r\n        fontSize: 20, \r\n        fontWeight: 'bold', \r\n        marginTop: 10, \r\n        textAlign: 'center',\r\n    },\r\n    textRenderBody2: {\r\n        fontSize: 20, \r\n        fontWeight: 'bold', \r\n        textAlign: 'center',\r\n    },\r\n    viewRenderBody6: {\r\n        flex: 1, \r\n        justifyContent: 'flex-end', \r\n        alignItems: 'center', \r\n        width: '100%',\r\n    },\r\n    viewRenderBody7: {\r\n        width: '90%', \r\n        flexDirection: 'row', \r\n        alignItems: 'center', \r\n        justifyContent: 'space-around',\r\n        padding: 10,\r\n    },\r\n    viewRenderBody8: {\r\n        height:'100%',\r\n    },\r\n    viewRenderFooter: {\r\n        flexDirection: 'row', \r\n        justifyContent: 'space-around', \r\n        width: '100%', \r\n        backgroundColor: AppColors.backgroundColor6, \r\n        padding: 10,\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}