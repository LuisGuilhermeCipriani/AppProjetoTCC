{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\GIT\\\\AppProjetoTCC\\\\src\\\\screens\\\\quiz\\\\Quiz.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport RadioForm, { RadioButton, RadioButtonInput, RadioButtonLabel } from 'react-native-simple-radio-button';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport Api from \"../../services/Api\";\n\nvar Quiz = function (_Component) {\n  _inherits(Quiz, _Component);\n\n  var _super = _createSuper(Quiz);\n\n  function Quiz(props) {\n    var _this;\n\n    _classCallCheck(this, Quiz);\n\n    _this = _super.call(this, props);\n\n    _this.getQuestions = function _callee() {\n      var response, questions;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Api.get('/question/findAll'));\n\n            case 3:\n              response = _context.sent;\n              questions = response.data.questions;\n\n              _this.setState({\n                questions: questions\n              });\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    _this.getAnswers = function _callee2() {\n      var response, answers;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(Api.get('/answer/findAll'));\n\n            case 3:\n              response = _context2.sent;\n              answers = response.data.answers;\n\n              _this.setState({\n                answers: answers\n              });\n\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    _this.saveState = function _callee3() {\n      var _this$state, question_answer, questions, answers, answer, index, _JSON$parse, _id;\n\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _this$state = _this.state, question_answer = _this$state.question_answer, questions = _this$state.questions, answers = _this$state.answers, answer = _this$state.answer, index = _this$state.index;\n              _context3.t0 = JSON;\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@APP:user'));\n\n            case 4:\n              _context3.t1 = _context3.sent;\n              _JSON$parse = _context3.t0.parse.call(_context3.t0, _context3.t1);\n              _id = _JSON$parse._id;\n              question_answer.push({\n                idQuestion: questions[index]._id,\n                idAnswer: answers[answer]._id,\n                idDiscipline: '607231ac921d1c391cbcaac8',\n                idUser: _id\n              });\n\n              _this.setState({\n                question_answer: question_answer\n              });\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.registerQuiz = function _callee4() {\n      var _JSON$parse2, _id, question_answer, response;\n\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.t0 = JSON;\n              _context4.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@APP:user'));\n\n            case 4:\n              _context4.t1 = _context4.sent;\n              _JSON$parse2 = _context4.t0.parse.call(_context4.t0, _context4.t1);\n              _id = _JSON$parse2._id;\n              question_answer = _this.state.question_answer;\n              _context4.next = 10;\n              return _regeneratorRuntime.awrap(Api.post('/quiz/register', {\n                idUser: _id,\n                idDiscipline: '607231ac921d1c391cbcaac8',\n                question_answer: question_answer\n              }).then(function () {\n                console.log('Salvo com sucesso!');\n              }));\n\n            case 10:\n              response = _context4.sent;\n              _context4.next = 16;\n              break;\n\n            case 13:\n              _context4.prev = 13;\n              _context4.t2 = _context4[\"catch\"](0);\n              console.log(_context4.t2);\n\n            case 16:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 13]], Promise);\n    };\n\n    _this.renderScreens = function () {\n      var _this$state2 = _this.state,\n          index = _this$state2.index,\n          questions = _this$state2.questions;\n      return React.createElement(View, {\n        style: {\n          alignItems: 'center'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 16\n        }\n      }, React.createElement(View, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.countQuestion,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, \"Quest\\xE3o \", index + 1, \" de \", questions.length), React.createElement(Text, {\n        style: styles.question,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, index + 1, \" - \", questions[index].title)));\n    };\n\n    _this.boundMinimumLimit = function () {\n      var index = _this.state.index;\n\n      if (index > 0) {\n        index = index - 1;\n\n        _this.setState({\n          index: index\n        });\n      }\n    };\n\n    _this.boundMaximumLimit = function () {\n      var _this$state3 = _this.state,\n          questions = _this$state3.questions,\n          index = _this$state3.index;\n\n      _this.saveState();\n\n      if (index < questions.length - 1) {\n        _this.saveState();\n\n        index = index + 1;\n\n        _this.setState({\n          index: index\n        });\n      }\n    };\n\n    _this.state = {\n      questions: [],\n      answers: [],\n      quiz: {},\n      question_answer: [],\n      question: '',\n      answer: '',\n      index: 0,\n      isSelected: false\n    };\n    return _this;\n  }\n\n  _createClass(Quiz, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              this.getQuestions();\n              this.getAnswers();\n\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var navigation = this.props.navigation;\n      var _this$state4 = this.state,\n          questions = _this$state4.questions,\n          answers = _this$state4.answers;\n      var options = answers.map(function (answer, index) {\n        return {\n          label: answer.title,\n          value: index + 1\n        };\n      });\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'space-around'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }\n      }, questions.length > 0 && answers.length > 0 && this.renderScreens(), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.backButton,\n        onPress: function onPress() {\n          _this2.boundMinimumLimit();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      }, React.createElement(Icon, {\n        name: \"chevron-left\",\n        size: 25,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }\n      })), React.createElement(RadioForm, {\n        radio_props: options,\n        onPress: function onPress(answer) {\n          _this2.setState({\n            answer: answer\n          });\n        },\n        formHorizontal: false,\n        initial: false,\n        labelStyle: {\n          marginRight: 10,\n          marginBottom: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.forwardButton,\n        onPress: function onPress() {\n          _this2.boundMaximumLimit();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }\n      }, React.createElement(Icon, {\n        name: \"chevron-right\",\n        size: 25,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }\n      }))), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.commentButton,\n        onPress: function onPress() {\n          navigation.navigate('Comments');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.textButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }\n      }, \"Comentar\")), React.createElement(TouchableOpacity, {\n        style: styles.saveButton,\n        onPress: function onPress() {\n          return _this2.registerQuiz();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.textButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }\n      }, \"Salvar\")), React.createElement(TouchableOpacity, {\n        style: styles.sendButton,\n        onPress: function onPress() {\n          Alert.alert('Atenção', 'Deseja mesmo enviar o questionário?', [{\n            text: 'Sim',\n            onPress: function onPress() {\n              return _this2.props.navigation.goBack();\n            }\n          }, {\n            text: 'Não'\n          }]);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.textButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }\n      }, \"Enviar\"))));\n    }\n  }]);\n\n  return Quiz;\n}(Component);\n\nexport { Quiz as default };\nvar styles = StyleSheet.create({\n  forwardButton: {\n    alignItems: 'center',\n    marginRight: 20,\n    marginBottom: 40\n  },\n  backButton: {\n    alignItems: 'center',\n    marginLeft: 20,\n    marginBottom: 40\n  },\n  commentButton: {\n    backgroundColor: '#dbd546',\n    width: 80,\n    height: 30,\n    alignItems: 'center',\n    marginLeft: 20\n  },\n  saveButton: {\n    backgroundColor: '#42c246',\n    width: 80,\n    height: 30,\n    alignItems: 'center',\n    marginLeft: 80\n  },\n  sendButton: {\n    backgroundColor: '#6975c2',\n    width: 80,\n    height: 30,\n    alignItems: 'center',\n    marginRight: 30\n  },\n  textButton: {\n    color: '#ffffff',\n    padding: 5,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    textShadowOffset: {\n      width: -1,\n      height: 1\n    },\n    textShadowRadius: 5\n  },\n  countQuestion: {\n    fontSize: 20,\n    textAlign: 'center',\n    marginBottom: 40\n  },\n  question: {\n    fontSize: 20,\n    textAlign: 'center',\n    marginHorizontal: 15,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["C:/GIT/AppProjetoTCC/src/screens/quiz/Quiz.js"],"names":["React","Component","AsyncStorage","RadioForm","RadioButton","RadioButtonInput","RadioButtonLabel","Icon","Api","Quiz","props","getQuestions","get","response","questions","data","setState","console","log","getAnswers","answers","saveState","state","question_answer","answer","index","JSON","getItem","parse","_id","push","idQuestion","idAnswer","idDiscipline","idUser","registerQuiz","post","then","renderScreens","alignItems","styles","countQuestion","length","question","title","boundMinimumLimit","boundMaximumLimit","quiz","isSelected","navigation","options","map","label","value","flex","justifyContent","flexDirection","width","backButton","marginRight","marginBottom","forwardButton","commentButton","navigate","textButton","saveButton","sendButton","Alert","alert","text","onPress","goBack","StyleSheet","create","marginLeft","backgroundColor","height","color","padding","textShadowColor","textShadowOffset","textShadowRadius","fontSize","textAlign","marginHorizontal","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity, Alert, AsyncStorage } from 'react-native';\r\nimport RadioForm, { RadioButton, RadioButtonInput, RadioButtonLabel } from 'react-native-simple-radio-button';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nimport Api from '../../services/Api';\r\n\r\nexport default class Quiz extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            questions: [],\r\n            answers: [],\r\n            quiz: {},\r\n            question_answer: [],\r\n            question: '',\r\n            answer: '',\r\n            index: 0,\r\n            isSelected: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.getQuestions();\r\n        this.getAnswers();\r\n    }\r\n\r\n    getQuestions = async () => {\r\n        try {\r\n            const response = await Api.get('/question/findAll');\r\n\r\n            const { questions } = response.data;\r\n\r\n            this.setState({ questions });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    getAnswers = async () => {\r\n        try {\r\n            const response = await Api.get('/answer/findAll');\r\n\r\n            const { answers } = response.data;\r\n\r\n            this.setState({ answers });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    saveState = async () => {\r\n        const { question_answer, questions, answers, answer, index } = this.state;\r\n        const { _id } = JSON.parse(await AsyncStorage.getItem('@APP:user'));\r\n        question_answer.push({\r\n            idQuestion: questions[index]._id,\r\n            idAnswer: answers[answer]._id,\r\n            idDiscipline: '607231ac921d1c391cbcaac8',\r\n            idUser: _id\r\n        });\r\n        this.setState({ question_answer });\r\n    }\r\n\r\n    registerQuiz = async () => {\r\n        try {\r\n            const { _id } = JSON.parse(await AsyncStorage.getItem('@APP:user'));\r\n            const { question_answer } = this.state;\r\n\r\n            const response = await Api.post('/quiz/register', {\r\n                idUser: _id,\r\n                idDiscipline: '607231ac921d1c391cbcaac8',\r\n                question_answer\r\n            }).then(() => {\r\n                console.log('Salvo com sucesso!')\r\n              })\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    renderScreens = () => {\r\n        const { index, questions } = this.state;\r\n\r\n        return <View style={{ alignItems: 'center' }}>\r\n            <View>\r\n                <Text style={styles.countQuestion}>Questão {index + 1} de {questions.length}</Text>\r\n                <Text style={styles.question}>{index + 1} - {questions[index].title}</Text>\r\n            </View>\r\n        </View>\r\n    }\r\n\r\n    boundMinimumLimit = () => {\r\n        let { index } = this.state;\r\n        if (index > 0) {\r\n            index = index - 1;\r\n            this.setState({ index: index });\r\n        }\r\n    }\r\n\r\n    boundMaximumLimit = () => {\r\n        let { questions, index } = this.state;\r\n        this.saveState();\r\n        if (index < questions.length - 1) {\r\n            this.saveState();\r\n            index = index + 1;\r\n            this.setState({ index: index });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { navigation } = this.props;\r\n        const { questions, answers } = this.state;\r\n        const options = answers.map((answer, index) => {\r\n            return { label: answer.title, value: index + 1 }\r\n        }\r\n        );\r\n\r\n        return (\r\n            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'space-around' }}>\r\n                {(questions.length > 0 && answers.length > 0) && this.renderScreens()}\r\n                <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', width: '100%' }}>\r\n                    <TouchableOpacity style={styles.backButton} onPress={() => { this.boundMinimumLimit() }}>\r\n                        <Icon name='chevron-left' size={25} />\r\n                    </TouchableOpacity>\r\n                    <RadioForm\r\n                        radio_props={options}\r\n                        onPress={(answer) => { this.setState({ answer }) }}\r\n                        formHorizontal={false}\r\n                        initial={false}\r\n                        labelStyle={{ marginRight: 10, marginBottom: 30 }}\r\n                    />\r\n                    <TouchableOpacity style={styles.forwardButton} onPress={() => { this.boundMaximumLimit() }}>\r\n                        <Icon name='chevron-right' size={25} />\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={{ flexDirection: 'row', justifyContent: 'space-between', width: '100%' }}>\r\n                    <TouchableOpacity style={styles.commentButton} onPress={() => {\r\n                        navigation.navigate('Comments')\r\n                    }}>\r\n                        <Text style={styles.textButton}>Comentar</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.saveButton} onPress={() => this.registerQuiz()}>\r\n                        <Text style={styles.textButton}>Salvar</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.sendButton} onPress={() => {\r\n                        Alert.alert('Atenção', 'Deseja mesmo enviar o questionário?',\r\n                            [\r\n                                { text: 'Sim', onPress: () => this.props.navigation.goBack() },\r\n                                { text: 'Não' },\r\n                            ])\r\n                    }}>\r\n                        <Text style={styles.textButton}>Enviar</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    forwardButton: {\r\n        alignItems: 'center',\r\n        marginRight: 20,\r\n        marginBottom: 40,\r\n    },\r\n    backButton: {\r\n        alignItems: 'center',\r\n        marginLeft: 20,\r\n        marginBottom: 40,\r\n    },\r\n    commentButton: {\r\n        backgroundColor: '#dbd546',\r\n        width: 80,\r\n        height: 30,\r\n        alignItems: 'center',\r\n        marginLeft: 20,\r\n    },\r\n    saveButton: {\r\n        backgroundColor: '#42c246',\r\n        width: 80,\r\n        height: 30,\r\n        alignItems: 'center',\r\n        marginLeft: 80,\r\n    },\r\n    sendButton: {\r\n        backgroundColor: '#6975c2',\r\n        width: 80,\r\n        height: 30,\r\n        alignItems: 'center',\r\n        marginRight: 30,\r\n    },\r\n    textButton: {\r\n        color: '#ffffff',\r\n        padding: 5,\r\n        textShadowColor: 'rgba(0, 0, 0, 0.75)',\r\n        textShadowOffset: { width: -1, height: 1 },\r\n        textShadowRadius: 5,\r\n    },\r\n    countQuestion: {\r\n        fontSize: 20,\r\n        textAlign: 'center',\r\n        marginBottom: 40,\r\n    },\r\n    question: {\r\n        fontSize: 20,\r\n        textAlign: 'center',\r\n        marginHorizontal: 15,\r\n        fontWeight: 'bold',\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}