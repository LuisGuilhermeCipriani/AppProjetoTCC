{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\GIT\\\\AppProjetoTCC\\\\src\\\\screens\\\\quiz\\\\Quiz.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport RadioForm, { RadioButton, RadioButtonInput, RadioButtonLabel } from 'react-native-simple-radio-button';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport Api from \"../../services/Api\";\n\nvar Quiz = function (_Component) {\n  _inherits(Quiz, _Component);\n\n  var _super = _createSuper(Quiz);\n\n  function Quiz(props) {\n    var _this;\n\n    _classCallCheck(this, Quiz);\n\n    _this = _super.call(this, props);\n\n    _this.getQuestions = function _callee() {\n      var response, questions;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Api.get('/question/findAll'));\n\n            case 3:\n              response = _context.sent;\n              questions = response.data.questions;\n\n              _this.setState({\n                questions: questions\n              });\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    _this.getAnswers = function _callee2() {\n      var response, answers;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(Api.get('/answer/findAll'));\n\n            case 3:\n              response = _context2.sent;\n              answers = response.data.answers;\n\n              _this.setState({\n                answers: answers\n              });\n\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    _this.saveState = function _callee3() {\n      var _this$state, question_answer, questions, answers, answer, index;\n\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _this$state = _this.state, question_answer = _this$state.question_answer, questions = _this$state.questions, answers = _this$state.answers, answer = _this$state.answer, index = _this$state.index;\n              question_answer.push({\n                idQuestion: questions[index]._id,\n                idAnswer: answers[answer]._id\n              });\n\n              _this.setState({\n                question_answer: question_answer\n              });\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.registerQuiz = function _callee4() {\n      var question_answer, response;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              question_answer = _this.state.question_answer;\n              _context4.next = 4;\n              return _regeneratorRuntime.awrap(Api.post('/quiz/register', {\n                disciplineUser: _this.id,\n                status: 'S',\n                questionAnswer: question_answer\n              }).then(function () {\n                console.log('Salvo com sucesso!');\n              }));\n\n            case 4:\n              response = _context4.sent;\n              _context4.next = 10;\n              break;\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log(_context4.t0);\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    _this.teste = function () {\n      _this.boundMaximumLimit();\n\n      _this.saveState();\n    };\n\n    _this.renderScreens = function () {\n      var _this$state2 = _this.state,\n          index = _this$state2.index,\n          questions = _this$state2.questions;\n      return React.createElement(View, {\n        style: {\n          alignItems: 'center'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 16\n        }\n      }, React.createElement(View, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.countQuestion,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, \"Quest\\xE3o \", index + 1, \" de \", questions.length), React.createElement(Text, {\n        style: styles.question,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }, index + 1, \" - \", questions[index].title)));\n    };\n\n    _this.renderScreen1 = function () {\n      var _this$state3 = _this.state,\n          index = _this$state3.index,\n          questions = _this$state3.questions;\n      return React.createElement(View, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 16\n        }\n      }, React.createElement(View, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.countQuestion,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }, \"Quest\\xE3o \", index + 1, \" de \", questions.length)));\n    };\n\n    _this.renderScreen2 = function () {\n      var _this$state4 = _this.state,\n          index = _this$state4.index,\n          questions = _this$state4.questions;\n      return React.createElement(View, {\n        style: {\n          alignItems: 'center'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 16\n        }\n      }, React.createElement(View, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.question,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      }, questions[index].title)));\n    };\n\n    _this.boundMinimumLimit = function () {\n      var index = _this.state.index;\n\n      if (index > 0) {\n        index = index - 1;\n\n        _this.setState({\n          index: index\n        });\n      }\n    };\n\n    _this.boundMaximumLimit = function () {\n      var _this$state5 = _this.state,\n          questions = _this$state5.questions,\n          index = _this$state5.index;\n\n      if (index < questions.length - 1) {\n        index = index + 1;\n\n        _this.setState({\n          index: index\n        });\n      }\n    };\n\n    _this.state = {\n      questions: [],\n      answers: [],\n      quiz: {},\n      question_answer: [],\n      question: '',\n      answer: '',\n      index: 0,\n      isSelected: false\n    };\n    _this.id = _this.props.navigation.getParam('idDisciplineUser');\n    return _this;\n  }\n\n  _createClass(Quiz, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              this.getQuestions();\n              this.getAnswers();\n\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var navigation = this.props.navigation;\n      var _this$state6 = this.state,\n          questions = _this$state6.questions,\n          answers = _this$state6.answers;\n      var options = answers.map(function (answer, index) {\n        return {\n          label: answer.title,\n          value: index + 1\n        };\n      });\n      return React.createElement(View, {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'space-around',\n          backgroundColor: '#bfbfbf',\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          padding: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 17\n        }\n      }, questions.length > 0 && answers.length > 0 && this.renderScreen1()), React.createElement(View, {\n        style: styles.containerBody,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'column',\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }\n      }, questions.length > 0 && answers.length > 0 && this.renderScreen2(), React.createElement(RadioForm, {\n        style: {\n          paddingLeft: 30\n        },\n        radio_props: options,\n        onPress: function onPress(answer) {\n          _this2.setState({\n            answer: answer\n          });\n        },\n        formHorizontal: false,\n        initial: false,\n        labelStyle: {\n          marginRight: 10,\n          marginBottom: 30,\n          fontSize: 20\n        },\n        animation: false,\n        buttonColor: '#cc0000',\n        selectedButtonColor: \"#808080\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }\n      }))), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-around',\n          width: '100%',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.backButton,\n        onPress: function onPress() {\n          _this2.boundMinimumLimit();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }\n      }, React.createElement(Icon, {\n        name: \"chevron-left\",\n        style: styles.icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 29\n        }\n      }), React.createElement(Text, {\n        style: styles.textButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 29\n        }\n      }, \"Anterior\")), React.createElement(TouchableOpacity, {\n        style: styles.saveButton,\n        onPress: function onPress() {\n          return _this2.teste();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 25\n        }\n      }, React.createElement(Icon, {\n        name: \"save\",\n        style: styles.icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 29\n        }\n      }), React.createElement(Text, {\n        style: styles.textButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 29\n        }\n      }, \"Salvar\")), React.createElement(TouchableOpacity, {\n        style: styles.sendButton,\n        onPress: function onPress() {\n          Alert.alert('Atenção', 'Deseja mesmo enviar o questionário?', [{\n            text: 'Sim',\n            onPress: function onPress() {\n              return _this2.registerQuiz();\n            }\n          }, {\n            text: 'Não'\n          }]);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }\n      }, React.createElement(Icon, {\n        name: \"send\",\n        style: styles.icon2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 29\n        }\n      }), React.createElement(Text, {\n        style: styles.textButton2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 29\n        }\n      }, \"Enviar\"))));\n    }\n  }]);\n\n  return Quiz;\n}(Component);\n\nexport { Quiz as default };\nvar styles = StyleSheet.create({\n  forwardButton: {\n    alignItems: 'center',\n    marginRight: 20,\n    marginBottom: 40\n  },\n  backButton: {\n    backgroundColor: '#d3302f',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    borderRadius: 5,\n    paddingTop: 5,\n    paddingBottom: 5,\n    paddingLeft: 15,\n    paddingRight: 15,\n    marginLeft: 10,\n    marginBottom: 20\n  },\n  commentButton: {\n    backgroundColor: '#d3302f',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    borderRadius: 5,\n    paddingTop: 5,\n    paddingBottom: 5,\n    paddingLeft: 15,\n    paddingRight: 15,\n    marginLeft: 10\n  },\n  saveButton: {\n    backgroundColor: '#206020',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    borderRadius: 5,\n    paddingTop: 5,\n    paddingBottom: 5,\n    paddingLeft: 15,\n    paddingRight: 15,\n    marginBottom: 20\n  },\n  sendButton: {\n    backgroundColor: '#d2d22d',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    borderRadius: 5,\n    paddingTop: 5,\n    paddingBottom: 5,\n    paddingLeft: 15,\n    paddingRight: 15,\n    marginRight: 10,\n    marginBottom: 20,\n    elevation: 10\n  },\n  textButton: {\n    color: '#ffffff',\n    padding: 0,\n    fontSize: 15,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    textShadowOffset: {\n      width: -1,\n      height: 1\n    },\n    textShadowRadius: 5\n  },\n  textButton2: {\n    color: '#000000',\n    padding: 0,\n    fontSize: 15,\n    fontWeight: 'bold'\n  },\n  countQuestion: {\n    fontSize: 20,\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  question: {\n    fontSize: 20,\n    marginHorizontal: 15,\n    fontWeight: 'bold',\n    textAlign: 'justify',\n    padding: 10,\n    marginBottom: 20\n  },\n  icon: {\n    color: '#ffffff',\n    paddingBottom: 5,\n    paddingTop: 5,\n    paddingLeft: 10,\n    paddingRight: 10,\n    fontSize: 20\n  },\n  icon2: {\n    color: '#000000',\n    paddingBottom: 5,\n    paddingTop: 5,\n    paddingLeft: 10,\n    paddingRight: 10,\n    fontSize: 20\n  },\n  containerBody: {\n    backgroundColor: '#ffffff',\n    height: '80%',\n    width: '90%',\n    marginBottom: 30,\n    borderRadius: 10\n  }\n});","map":{"version":3,"sources":["C:/GIT/AppProjetoTCC/src/screens/quiz/Quiz.js"],"names":["React","Component","AsyncStorage","RadioForm","RadioButton","RadioButtonInput","RadioButtonLabel","Icon","Api","Quiz","props","getQuestions","get","response","questions","data","setState","console","log","getAnswers","answers","saveState","state","question_answer","answer","index","push","idQuestion","_id","idAnswer","registerQuiz","post","disciplineUser","id","status","questionAnswer","then","teste","boundMaximumLimit","renderScreens","alignItems","styles","countQuestion","length","question","title","renderScreen1","renderScreen2","boundMinimumLimit","quiz","isSelected","navigation","getParam","options","map","label","value","justifyContent","backgroundColor","height","padding","containerBody","flexDirection","width","paddingLeft","marginRight","marginBottom","fontSize","backButton","icon","textButton","saveButton","sendButton","Alert","alert","text","onPress","icon2","textButton2","StyleSheet","create","forwardButton","borderRadius","paddingTop","paddingBottom","paddingRight","marginLeft","commentButton","elevation","color","textShadowColor","textShadowOffset","textShadowRadius","fontWeight","textAlign","marginHorizontal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity, Alert, AsyncStorage } from 'react-native';\r\nimport RadioForm, { RadioButton, RadioButtonInput, RadioButtonLabel } from 'react-native-simple-radio-button';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nimport Api from '../../services/Api';\r\n\r\nexport default class Quiz extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            questions: [],\r\n            answers: [],\r\n            quiz: {},\r\n            question_answer: [],\r\n            question: '',\r\n            answer: '',\r\n            index: 0,\r\n            isSelected: false,\r\n        };\r\n        this.id = this.props.navigation.getParam('idDisciplineUser');\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.getQuestions();\r\n        this.getAnswers();\r\n    }\r\n\r\n    getQuestions = async () => {\r\n        try {\r\n            const response = await Api.get('/question/findAll');\r\n\r\n            const { questions } = response.data;\r\n\r\n            this.setState({ questions });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    getAnswers = async () => {\r\n        try {\r\n            const response = await Api.get('/answer/findAll');\r\n\r\n            const { answers } = response.data;\r\n\r\n            this.setState({ answers });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    saveState = async () => {\r\n        const { question_answer, questions, answers, answer, index } = this.state;\r\n        question_answer.push({\r\n            idQuestion: questions[index]._id,\r\n            idAnswer: answers[answer]._id\r\n        });\r\n        this.setState({ question_answer });\r\n    }\r\n\r\n    registerQuiz = async () => {\r\n        try {\r\n            const { question_answer } = this.state;\r\n\r\n            const response = await Api.post('/quiz/register', {\r\n                disciplineUser: this.id,\r\n                status: 'S',\r\n                questionAnswer: question_answer\r\n            }).then(() => {\r\n                console.log('Salvo com sucesso!')\r\n            })\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    teste = () => {\r\n        this.boundMaximumLimit();\r\n        this.saveState();\r\n    }\r\n\r\n    renderScreens = () => {\r\n        const { index, questions } = this.state;\r\n\r\n        return <View style={{ alignItems: 'center' }}>\r\n            <View>\r\n                <Text style={styles.countQuestion}>Questão {index + 1} de {questions.length}</Text>\r\n                <Text style={styles.question}>{index + 1} - {questions[index].title}</Text>\r\n            </View>\r\n        </View>\r\n    }\r\n\r\n    renderScreen1 = () => {\r\n        const { index, questions } = this.state;\r\n\r\n        return <View>\r\n            <View>\r\n                <Text style={styles.countQuestion}>Questão {index + 1} de {questions.length}</Text>\r\n            </View>\r\n        </View>\r\n    }\r\n\r\n    renderScreen2 = () => {\r\n        const { index, questions } = this.state;\r\n\r\n        return <View style={{ alignItems: 'center' }}>\r\n            <View>\r\n                <Text style={styles.question}>{questions[index].title}</Text>\r\n            </View>\r\n        </View>\r\n    }\r\n\r\n\r\n\r\n    boundMinimumLimit = () => {\r\n        let { index } = this.state;\r\n        if (index > 0) {\r\n            index = index - 1;\r\n            this.setState({ index: index });\r\n        }\r\n    }\r\n\r\n    boundMaximumLimit = () => {\r\n        let { questions, index } = this.state;\r\n        if (index < questions.length - 1) {\r\n            index = index + 1;\r\n            this.setState({ index: index });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { navigation } = this.props;\r\n        const { questions, answers } = this.state;\r\n        const options = answers.map((answer, index) => {\r\n            return { label: answer.title, value: index + 1 }\r\n        }\r\n        );\r\n\r\n        /*return (\r\n            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'space-around' }}>\r\n                {(questions.length > 0 && answers.length > 0) && this.renderScreens()}\r\n                <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', width: '100%' }}>\r\n                    <TouchableOpacity style={styles.backButton} onPress={() => { this.boundMinimumLimit() }}>\r\n                        <Icon name='chevron-left' size={25} />\r\n                    </TouchableOpacity>\r\n                    <RadioForm\r\n                        radio_props={options}\r\n                        onPress={(answer) => { this.setState({ answer }) }}\r\n                        formHorizontal={false}\r\n                        initial={false}\r\n                        labelStyle={{ marginRight: 10, marginBottom: 30 }}\r\n                        animation={false}\r\n                        buttonColor={'#cc0000'}\r\n                        selectedButtonColor = '#808080'\r\n                    />\r\n                    <TouchableOpacity style={styles.forwardButton} onPress={() => { this.boundMaximumLimit() }}>\r\n                        <Icon name='chevron-right' size={25} />\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={{ flexDirection: 'row', justifyContent: 'space-between', width: '100%' }}>\r\n                    <TouchableOpacity style={styles.commentButton} onPress={() => {\r\n                        navigation.navigate('Comments')\r\n                    }}>\r\n                        <Icon name='comment' style={styles.icon}/>\r\n                        <Text style={styles.textButton}>Comentar</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.saveButton} onPress={() => this.teste()}>\r\n                        <Icon name='save' style={styles.icon}/>\r\n                        <Text style={styles.textButton}>Salvar</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.sendButton} onPress={() => {\r\n                        Alert.alert('Atenção', 'Deseja mesmo enviar o questionário?',\r\n                            [\r\n                                { text: 'Sim', onPress: () => this.registerQuiz() },\r\n                                { text: 'Não' },\r\n                            ])\r\n                    }}>\r\n                        <Icon name='send' style={styles.icon}/>\r\n                        <Text style={styles.textButton}>Enviar</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        )*/\r\n\r\n        return (\r\n            <View style={{ alignItems: 'center', justifyContent: 'space-around', backgroundColor: '#bfbfbf', height: '100%' }}>\r\n                <View style={{padding:30}}>\r\n                {(questions.length > 0 && answers.length > 0) && this.renderScreen1()}\r\n                </View>\r\n                <View style={styles.containerBody}>\r\n                    <View style={{ flexDirection: 'column',  width: '100%' }}>\r\n                    {(questions.length > 0 && answers.length > 0) && this.renderScreen2()}\r\n                        <RadioForm style={{paddingLeft:30}}\r\n                            radio_props={options}\r\n                            onPress={(answer) => { this.setState({ answer }) }}\r\n                            formHorizontal={false}\r\n                            initial={false}\r\n                            labelStyle={{ marginRight: 10, marginBottom: 30, fontSize: 20 }}\r\n                            animation={false}\r\n                            buttonColor={'#cc0000'}\r\n                            selectedButtonColor='#808080'\r\n                        />\r\n\r\n                    </View>\r\n                    \r\n                </View>\r\n                <View style={{  flexDirection: 'row', justifyContent: 'space-around', width: '100%', alignItems:'center' }}>\r\n                        <TouchableOpacity style={styles.backButton} onPress={() => { this.boundMinimumLimit() }}>\r\n                            <Icon name='chevron-left' style={styles.icon}/>\r\n                            <Text style={styles.textButton}>Anterior</Text>\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity style={styles.saveButton} onPress={() => this.teste()}>\r\n                            <Icon name='save' style={styles.icon} />\r\n                            <Text style={styles.textButton}>Salvar</Text>\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity style={styles.sendButton} onPress={() => {\r\n                            Alert.alert('Atenção', 'Deseja mesmo enviar o questionário?',\r\n                                [\r\n                                    { text: 'Sim', onPress: () => this.registerQuiz() },\r\n                                    { text: 'Não' },\r\n                                ])\r\n                        }}>\r\n                            <Icon name='send' style={styles.icon2} />\r\n                            <Text style={styles.textButton2}>Enviar</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    forwardButton: {\r\n        alignItems: 'center',\r\n        marginRight: 20,\r\n        marginBottom: 40,\r\n    },\r\n    backButton: {\r\n        backgroundColor: '#d3302f',\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        borderRadius: 5,\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n        paddingLeft: 15,\r\n        paddingRight: 15,\r\n        marginLeft: 10,\r\n        marginBottom: 20\r\n    },\r\n    commentButton: {\r\n        backgroundColor: '#d3302f',\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        borderRadius: 5,\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n        paddingLeft: 15,\r\n        paddingRight: 15,\r\n        marginLeft: 10\r\n    },\r\n    saveButton: {\r\n        backgroundColor: '#206020',\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        borderRadius: 5,\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n        paddingLeft: 15,\r\n        paddingRight: 15,\r\n        marginBottom: 20\r\n    },\r\n    sendButton: {\r\n        backgroundColor: '#d2d22d',\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        borderRadius: 5,\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n        paddingLeft: 15,\r\n        paddingRight: 15,\r\n        marginRight: 10,\r\n        marginBottom: 20,\r\n        elevation: 10,\r\n    },\r\n    textButton: {\r\n        color: '#ffffff',\r\n        padding: 0,\r\n        fontSize: 15,\r\n        textShadowColor: 'rgba(0, 0, 0, 0.75)',\r\n        textShadowOffset: { width: -1, height: 1 },\r\n        textShadowRadius: 5,\r\n    },\r\n    textButton2: {\r\n        color: '#000000',\r\n        padding: 0,\r\n        fontSize: 15,\r\n        fontWeight: 'bold'\r\n    },\r\n    countQuestion: {\r\n        fontSize: 20,\r\n        textAlign: 'center',\r\n        fontWeight: 'bold'\r\n    },\r\n    question: {\r\n        fontSize: 20,\r\n        //textAlign: 'center',\r\n        marginHorizontal: 15,\r\n        fontWeight: 'bold',\r\n        textAlign: 'justify',\r\n        padding: 10,\r\n        marginBottom: 20\r\n    },\r\n    icon: {\r\n        color: '#ffffff',\r\n        paddingBottom: 5,\r\n        paddingTop: 5,\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        fontSize: 20\r\n    },\r\n    icon2: {\r\n        color: '#000000',\r\n        paddingBottom: 5,\r\n        paddingTop: 5,\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        fontSize: 20\r\n    },\r\n    containerBody: {\r\n        backgroundColor: '#ffffff',\r\n        height: '80%',\r\n        width: '90%',\r\n        marginBottom: 30,\r\n        borderRadius: 10,\r\n    },\r\n})"]},"metadata":{},"sourceType":"module"}