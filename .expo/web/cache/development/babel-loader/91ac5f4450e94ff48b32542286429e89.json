{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\GIT\\\\AppProjetoTCC\\\\src\\\\screens\\\\select\\\\DisciplineSelection.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { Card, ListItem, Button, Icon } from 'react-native-elements';\nimport Header from \"../../components/header/Header\";\nimport Api from \"../../services/Api\";\n\nvar DisciplineSelection = function (_Component) {\n  _inherits(DisciplineSelection, _Component);\n\n  var _super = _createSuper(DisciplineSelection);\n\n  function DisciplineSelection(props) {\n    var _this;\n\n    _classCallCheck(this, DisciplineSelection);\n\n    _this = _super.call(this, props);\n\n    _this.getDisciplines = function _callee() {\n      var _JSON$parse, _id, disciplineUser, quizzes;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.t0 = JSON;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@APP:user'));\n\n            case 4:\n              _context.t1 = _context.sent;\n              _JSON$parse = _context.t0.parse.call(_context.t0, _context.t1);\n              _id = _JSON$parse._id;\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(Api.post('/DisciplineUser/findByIdUser', {\n                idUser: _id\n              }));\n\n            case 9:\n              disciplineUser = _context.sent.data.disciplineUser;\n              _context.next = 12;\n              return _regeneratorRuntime.awrap(Api.post('/quiz/findAll', {\n                idUser: _id,\n                status: \"S\"\n              }));\n\n            case 12:\n              quizzes = _context.sent.data.quizzes;\n\n              if (quizzes !== null) {\n                _this.setState({\n                  disciplineUser: disciplineUser\n                });\n              }\n\n              _context.next = 19;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.t2 = _context[\"catch\"](0);\n              console.log(_context.t2);\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 16]], Promise);\n    };\n\n    _this.state = {\n      disciplineUser: []\n    };\n    return _this;\n  }\n\n  _createClass(DisciplineSelection, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.getDisciplines();\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var disciplineUser = this.state.disciplineUser;\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, React.createElement(Header, {\n        title: \"Responder Question\\xE1rio\",\n        menuIcon: \"menu\",\n        navigation: this.props.navigation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, React.createElement(ScrollView, {\n        style: styles.scroll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }, disciplineUser !== null && disciplineUser.map(function (disciplineUser) {\n        var idDisciplineUser = disciplineUser._id;\n        var _disciplineUser$idDis = disciplineUser.idDiscipline,\n            title = _disciplineUser$idDis.title,\n            code = _disciplineUser$idDis.code,\n            _id = _disciplineUser$idDis._id;\n        return React.createElement(TouchableOpacity, {\n          key: _id,\n          onPress: function onPress() {\n            _this2.props.navigation.navigate('QuizDiscipline', {\n              idDisciplineUser: idDisciplineUser\n            });\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 37\n          }\n        }, React.createElement(Card, {\n          containerStyle: {\n            borderBottomWidth: 4,\n            borderBottomColor: '#595959'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 41\n          }\n        }, React.createElement(Text, {\n          style: styles.nameDiscipline,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 45\n          }\n        }, title, \" - \", code)));\n      }))));\n    }\n  }]);\n\n  return DisciplineSelection;\n}(Component);\n\nexport { DisciplineSelection as default };\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#bfbfbf',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    flex: 1\n  },\n  disciplineButton: {\n    backgroundColor: '#969393',\n    height: 50,\n    width: '70%',\n    borderRadius: 20,\n    borderWidth: 3,\n    borderColor: '#ffad29',\n    paddingTop: 15,\n    marginTop: 30\n  },\n  textDiscipline: {\n    color: '#000',\n    textAlign: 'center',\n    fontSize: 15,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    textShadowOffset: {\n      width: -1,\n      height: 1\n    },\n    textShadowRadius: 10\n  },\n  scroll: {\n    width: '100%',\n    maxHeight: '80%'\n  },\n  scrollView: {\n    alignItems: 'center'\n  },\n  nameDiscipline: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    marginBottom: 10\n  }\n});","map":{"version":3,"sources":["C:/GIT/AppProjetoTCC/src/screens/select/DisciplineSelection.js"],"names":["React","Component","AsyncStorage","Card","ListItem","Button","Icon","Header","Api","DisciplineSelection","props","getDisciplines","JSON","getItem","parse","_id","post","idUser","disciplineUser","data","status","quizzes","setState","console","log","state","navigation","styles","container","scroll","map","idDisciplineUser","idDiscipline","title","code","navigate","borderBottomWidth","borderBottomColor","nameDiscipline","StyleSheet","create","backgroundColor","alignItems","justifyContent","flex","disciplineButton","height","width","borderRadius","borderWidth","borderColor","paddingTop","marginTop","textDiscipline","color","textAlign","fontSize","textShadowColor","textShadowOffset","textShadowRadius","maxHeight","scrollView","fontWeight","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View, StyleSheet, TouchableOpacity, ScrollView, AsyncStorage } from 'react-native';\r\nimport { Card, ListItem, Button, Icon } from 'react-native-elements';\r\n\r\nimport Header from '../../components/header/Header';\r\nimport Api from '../../services/Api';\r\n\r\nexport default class DisciplineSelection extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            disciplineUser: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.getDisciplines();\r\n    }\r\n\r\n    getDisciplines = async () => {\r\n        try {\r\n            const { _id } = JSON.parse(await AsyncStorage.getItem('@APP:user'));\r\n            const { disciplineUser } = (await Api.post('/DisciplineUser/findByIdUser', { idUser: _id })).data;\r\n            const { quizzes } = (await Api.post('/quiz/findAll', { idUser: _id, status: \"S\" })).data;\r\n\r\n            if (quizzes !== null) {\r\n                this.setState({ disciplineUser });\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { disciplineUser } = this.state;\r\n        return (\r\n            <View>\r\n                <Header\r\n                    title='Responder Questionário'\r\n                    menuIcon='menu'\r\n                    navigation={this.props.navigation}\r\n                />\r\n                <View style={styles.container}>\r\n                    <ScrollView style={styles.scroll} >\r\n                        {disciplineUser !== null &&\r\n                            disciplineUser.map(disciplineUser => {\r\n                                const idDisciplineUser = disciplineUser._id;\r\n                                const { title, code, _id } = disciplineUser.idDiscipline;\r\n                                return (\r\n                                    <TouchableOpacity key={_id} onPress={() => { this.props.navigation.navigate('QuizDiscipline', { idDisciplineUser }) }}>\r\n                                        <Card containerStyle={{\r\n                                            borderBottomWidth: 4, borderBottomColor: '#595959'\r\n                                        }}>\r\n                                            <Text style={styles.nameDiscipline}>{title} - {code}</Text>\r\n                                        </Card>\r\n                                    </TouchableOpacity>\r\n                                );\r\n                            })\r\n                        }\r\n                    </ScrollView>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: '#bfbfbf',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        flex: 1,\r\n    },\r\n    disciplineButton: {\r\n        backgroundColor: '#969393',\r\n        height: 50,\r\n        width: '70%',\r\n        borderRadius: 20,\r\n        borderWidth: 3,\r\n        borderColor: '#ffad29',\r\n        paddingTop: 15,\r\n        marginTop: 30,\r\n    },\r\n    textDiscipline: {\r\n        color: '#000',\r\n        textAlign: 'center',\r\n        fontSize: 15,\r\n        textShadowColor: 'rgba(0, 0, 0, 0.75)',\r\n        textShadowOffset: { width: -1, height: 1 },\r\n        textShadowRadius: 10,\r\n    },\r\n    scroll: {\r\n        width: '100%',\r\n        maxHeight: '80%',\r\n    },\r\n    scrollView: {\r\n        alignItems: 'center',\r\n    },\r\n    nameDiscipline: {\r\n        fontSize: 16,\r\n        fontWeight: \"bold\",\r\n        marginBottom: 10\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}