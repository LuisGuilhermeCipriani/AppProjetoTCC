{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\GIT\\\\AppProjetoTCC\\\\src\\\\screens\\\\performanceReport\\\\PerformanceReport.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Card } from 'react-native-elements';\nimport { AppColors } from \"../../colors/AppColors\";\nimport Header from \"../../components/header/Header\";\nimport Api from \"../../services/Api\";\n\nvar PerformanceReport = function (_Component) {\n  _inherits(PerformanceReport, _Component);\n\n  var _super = _createSuper(PerformanceReport);\n\n  function PerformanceReport(props) {\n    var _this;\n\n    _classCallCheck(this, PerformanceReport);\n\n    _this = _super.call(this, props);\n\n    _this.getChart = function _callee(questionnaires) {\n      var dataChart;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                isLoading: true\n              });\n\n              if (!(questionnaires != null)) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(Api.post('chartController/chart', questionnaires));\n\n            case 4:\n              dataChart = _context.sent.data.dataChart;\n\n              if (dataChart != null) {\n                _this.setState({\n                  dataChart: dataChart\n                });\n              }\n\n            case 6:\n              _this.setState({\n                isLoading: false\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.selectStatus = function (value) {\n      if (value < 1) {\n        return 'PÃ©ssimo';\n      } else if (value >= 1 && value < 2) {\n        return 'Ruim';\n      } else if (value >= 2 && value < 3) {\n        return 'Regular';\n      } else if (value >= 3 && value < 4) {\n        return 'Bom';\n      } else if (value >= 4) {\n        return 'Excelente';\n      }\n    };\n\n    _this.questionnaires = _this.props.navigation.getParam('questionnaires');\n    _this.discipline = _this.props.navigation.getParam('discipline');\n    _this.professor = _this.props.navigation.getParam('professor');\n    _this.objectClass = _this.props.navigation.getParam('objectClass');\n    _this.state = {\n      dataChart: [],\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(PerformanceReport, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(this.getChart(this.questionnaires));\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          dataChart = _this$state.dataChart,\n          isLoading = _this$state.isLoading;\n      var titleScreen = this.discipline.code + ' - ' + this.discipline.title;\n\n      if (isLoading) {\n        return React.createElement(View, {\n          style: styles.Indicator,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: AppColors.backgroundColor1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }\n        }));\n      }\n\n      var data = dataChart.map(function (object) {\n        var valueWeight = object.weightedAverage;\n        return parseFloat(valueWeight);\n      });\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }, React.createElement(Header, {\n        title: titleScreen,\n        menuIcon: \"arrow-back\",\n        navigation: this.props.navigation,\n        isBack: true,\n        screenName: \"ScreenSelectionDisciplineReport\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.containerBody,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      }, React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }\n      }, \"Relat\\xF3rio de Desempenho\"), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }\n      }, this.discipline.title), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }\n      }, this.discipline.code), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }\n      }, \"Per\\xEDodo: \", this.objectClass.period), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }\n      }, \"Docente: \", this.professor.name), React.createElement(View, {\n        style: styles.viewCardStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.fieldTable1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }\n      }, \"Quest\\xE3o\"), React.createElement(Text, {\n        style: styles.fieldTable2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }\n      }, \"Descri\\xE7\\xE3o\"), React.createElement(Text, {\n        style: styles.fieldTable3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }\n      }, \"M\\xE9dia\"), React.createElement(Text, {\n        style: styles.fieldTable4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }\n      }, \"Situa\\xE7\\xE3o\")), React.createElement(ScrollView, {\n        style: styles.scrollViewStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }\n      }, dataChart.map(function (value, index) {\n        var question = value.option;\n        var description = value.title;\n        var average = data[index];\n\n        var status = _this2.selectStatus(average);\n\n        return React.createElement(View, {\n          style: styles.viewStyle,\n          key: index,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 41\n          }\n        }, React.createElement(Text, {\n          style: styles.itemTable1,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 37\n          }\n        }, question), React.createElement(Text, {\n          style: styles.itemTable2,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 37\n          }\n        }, description), React.createElement(Text, {\n          style: styles.itemTable3,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 37\n          }\n        }, average), React.createElement(Text, {\n          style: styles.itemTable4,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 37\n          }\n        }, status));\n      })))));\n    }\n  }]);\n\n  return PerformanceReport;\n}(Component);\n\nexport { PerformanceReport as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  containerBody: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  viewCardStyle: {\n    width: '100%',\n    flexDirection: 'row',\n    marginTop: 10\n  },\n  scrollViewStyle: {\n    width: '100%'\n  },\n  viewStyle: {\n    flexDirection: 'row'\n  },\n  fieldTable1: {\n    width: '20%',\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    borderBottomWidth: 1,\n    borderTopWidth: 1,\n    borderColor: AppColors.tableColor1,\n    backgroundColor: AppColors.tableColor2,\n    textAlign: 'center',\n    fontWeight: 'bold',\n    borderTopLeftRadius: 10\n  },\n  fieldTable2: {\n    width: '40%',\n    borderRightWidth: 1,\n    borderBottomWidth: 1,\n    borderTopWidth: 1,\n    borderColor: AppColors.tableColor1,\n    backgroundColor: AppColors.tableColor2,\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  fieldTable3: {\n    width: '15%',\n    borderRightWidth: 1,\n    borderBottomWidth: 1,\n    borderTopWidth: 1,\n    borderColor: AppColors.tableColor1,\n    backgroundColor: AppColors.tableColor2,\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  fieldTable4: {\n    width: '25%',\n    borderRightWidth: 1,\n    borderBottomWidth: 1,\n    borderTopWidth: 1,\n    borderColor: AppColors.tableColor1,\n    backgroundColor: AppColors.tableColor2,\n    textAlign: 'center',\n    fontWeight: 'bold',\n    borderTopRightRadius: 10\n  },\n  itemTable1: {\n    width: '20%',\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    borderBottomWidth: 1,\n    borderTopWidth: 1,\n    borderColor: AppColors.tableColor1,\n    backgroundColor: AppColors.tableColor3,\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  itemTable2: {\n    width: '40%',\n    borderRightWidth: 1,\n    borderBottomWidth: 1,\n    borderTopWidth: 1,\n    borderColor: AppColors.tableColor1,\n    backgroundColor: AppColors.tableColor3,\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  itemTable3: {\n    width: '15%',\n    borderRightWidth: 1,\n    borderBottomWidth: 1,\n    borderTopWidth: 1,\n    borderColor: AppColors.tableColor1,\n    backgroundColor: AppColors.tableColor3,\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  itemTable4: {\n    width: '25%',\n    borderRightWidth: 1,\n    borderBottomWidth: 1,\n    borderTopWidth: 1,\n    borderColor: AppColors.tableColor1,\n    backgroundColor: AppColors.tableColor3,\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  Indicator: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: AppColors.backgroundColor4\n  }\n});","map":{"version":3,"sources":["C:/GIT/AppProjetoTCC/src/screens/performanceReport/PerformanceReport.js"],"names":["React","Component","Card","AppColors","Header","Api","PerformanceReport","props","getChart","questionnaires","setState","isLoading","post","dataChart","data","selectStatus","value","navigation","getParam","discipline","professor","objectClass","state","titleScreen","code","title","styles","Indicator","backgroundColor1","map","object","valueWeight","weightedAverage","parseFloat","container","containerBody","period","name","viewCardStyle","fieldTable1","fieldTable2","fieldTable3","fieldTable4","scrollViewStyle","index","question","option","description","average","status","viewStyle","itemTable1","itemTable2","itemTable3","itemTable4","StyleSheet","create","flex","justifyContent","alignItems","width","flexDirection","marginTop","borderLeftWidth","borderRightWidth","borderBottomWidth","borderTopWidth","borderColor","tableColor1","backgroundColor","tableColor2","textAlign","fontWeight","borderTopLeftRadius","borderTopRightRadius","tableColor3","backgroundColor4"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View, StyleSheet, ScrollView, ActivityIndicator } from 'react-native';\r\nimport { Card } from 'react-native-elements';\r\nimport { AppColors } from '../../colors/AppColors';\r\n\r\nimport Header from '../../components/header/Header';\r\nimport Api from '../../services/Api';\r\n\r\nexport default class PerformanceReport extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.questionnaires = this.props.navigation.getParam('questionnaires');\r\n        this.discipline = this.props.navigation.getParam('discipline');\r\n        this.professor = this.props.navigation.getParam('professor');\r\n        this.objectClass = this.props.navigation.getParam('objectClass');\r\n        this.state = {\r\n            dataChart: [],\r\n            isLoading: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.getChart(this.questionnaires)\r\n    }\r\n\r\n    getChart = async (questionnaires) => {\r\n        this.setState({isLoading: true})\r\n        if (questionnaires != null) {\r\n            const { dataChart } = (await Api.post('chartController/chart', questionnaires)).data\r\n\r\n            if (dataChart != null) {\r\n                this.setState({ dataChart })\r\n            }\r\n        }\r\n        this.setState({isLoading: false})\r\n    }\r\n\r\n    selectStatus = (value) => {\r\n        if (value < 1) {\r\n            return 'PÃ©ssimo'\r\n        } else if (value >= 1 && value < 2) {\r\n            return 'Ruim'\r\n        } else if (value >= 2 && value < 3) {\r\n            return 'Regular'\r\n        } else if (value >= 3 && value < 4) {\r\n            return 'Bom'\r\n        } else if (value >= 4) {\r\n            return 'Excelente'\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { dataChart, isLoading } = this.state;\r\n        const titleScreen = this.discipline.code + ' - ' + this.discipline.title;\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <View style={styles.Indicator}>\r\n                    <ActivityIndicator size=\"large\" color={AppColors.backgroundColor1} />\r\n                </View>\r\n            )\r\n        }\r\n\r\n        const data = dataChart.map(object => {\r\n            const valueWeight = object.weightedAverage;\r\n            return parseFloat(valueWeight)\r\n        })\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <Header\r\n                    title={titleScreen}\r\n                    menuIcon='arrow-back'\r\n                    navigation={this.props.navigation}\r\n                    isBack={true}\r\n                    screenName='ScreenSelectionDisciplineReport'\r\n                />\r\n                <View style={styles.containerBody}>\r\n\r\n                    <Card>\r\n                        <Card.Title>RelatÃ³rio de Desempenho</Card.Title>\r\n                        <Text>{this.discipline.title}</Text>\r\n                        <Text>{this.discipline.code}</Text>\r\n                        <Text>PerÃ­odo: {this.objectClass.period}</Text>\r\n                        <Text>Docente: {this.professor.name}</Text>\r\n\r\n                        <View style={styles.viewCardStyle}>\r\n                            <Text style={styles.fieldTable1}>QuestÃ£o</Text>\r\n                            <Text style={styles.fieldTable2}>DescriÃ§Ã£o</Text>\r\n                            <Text style={styles.fieldTable3}>MÃ©dia</Text>\r\n                            <Text style={styles.fieldTable4}>SituaÃ§Ã£o</Text>\r\n                        </View>\r\n\r\n                        <ScrollView style={styles.scrollViewStyle}>\r\n                            {dataChart.map((value, index) => {\r\n                                const question = value.option;\r\n                                const description = value.title;\r\n                                const average = data[index];\r\n                                const status = this.selectStatus(average);\r\n                                return (<View style={styles.viewStyle} key={index}>\r\n                                    <Text style={styles.itemTable1}>{question}</Text>\r\n                                    <Text style={styles.itemTable2}>{description}</Text>\r\n                                    <Text style={styles.itemTable3}>{average}</Text>\r\n                                    <Text style={styles.itemTable4}>{status}</Text>\r\n                                </View>)\r\n                            })}\r\n                        </ScrollView>\r\n                    </Card>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    containerBody: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    viewCardStyle: {\r\n        width: '100%',\r\n        flexDirection: 'row',\r\n        marginTop: 10,\r\n    },\r\n    scrollViewStyle: {\r\n        width: '100%',\r\n    },\r\n    viewStyle: {\r\n        flexDirection: 'row',\r\n    },\r\n    fieldTable1: {\r\n        width: '20%',\r\n        borderLeftWidth: 1,\r\n        borderRightWidth: 1,\r\n        borderBottomWidth: 1,\r\n        borderTopWidth: 1,\r\n        borderColor: AppColors.tableColor1,\r\n        backgroundColor: AppColors.tableColor2,\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        borderTopLeftRadius: 10,\r\n    },\r\n    fieldTable2: {\r\n        width: '40%',\r\n        borderRightWidth: 1,\r\n        borderBottomWidth: 1,\r\n        borderTopWidth: 1,\r\n        borderColor: AppColors.tableColor1,\r\n        backgroundColor: AppColors.tableColor2,\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n    },\r\n    fieldTable3: {\r\n        width: '15%',\r\n        borderRightWidth: 1,\r\n        borderBottomWidth: 1,\r\n        borderTopWidth: 1,\r\n        borderColor: AppColors.tableColor1,\r\n        backgroundColor: AppColors.tableColor2,\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n    },\r\n    fieldTable4: {\r\n        width: '25%',\r\n        borderRightWidth: 1,\r\n        borderBottomWidth: 1,\r\n        borderTopWidth: 1,\r\n        borderColor: AppColors.tableColor1,\r\n        backgroundColor: AppColors.tableColor2,\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        borderTopRightRadius: 10,\r\n    },\r\n    itemTable1: {\r\n        width: '20%',\r\n        borderLeftWidth: 1,\r\n        borderRightWidth: 1,\r\n        borderBottomWidth: 1,\r\n        borderTopWidth: 1,\r\n        borderColor: AppColors.tableColor1,\r\n        backgroundColor: AppColors.tableColor3,\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n    },\r\n    itemTable2: {\r\n        width: '40%',\r\n        borderRightWidth: 1,\r\n        borderBottomWidth: 1,\r\n        borderTopWidth: 1,\r\n        borderColor: AppColors.tableColor1,\r\n        backgroundColor: AppColors.tableColor3,\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n    },\r\n    itemTable3: {\r\n        width: '15%',\r\n        borderRightWidth: 1,\r\n        borderBottomWidth: 1,\r\n        borderTopWidth: 1,\r\n        borderColor: AppColors.tableColor1,\r\n        backgroundColor: AppColors.tableColor3,\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n    },\r\n    itemTable4: {\r\n        width: '25%',\r\n        borderRightWidth: 1,\r\n        borderBottomWidth: 1,\r\n        borderTopWidth: 1,\r\n        borderColor: AppColors.tableColor1,\r\n        backgroundColor: AppColors.tableColor3,\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n    },\r\n    Indicator: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: AppColors.backgroundColor4\r\n    },\r\n})"]},"metadata":{},"sourceType":"module"}