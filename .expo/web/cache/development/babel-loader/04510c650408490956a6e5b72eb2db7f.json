{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\GIT\\\\AppProjetoTCC\\\\src\\\\screens\\\\performanceReport\\\\DisciplineReportSelection.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Card } from 'react-native-elements';\nimport { AppColors } from \"../../colors/AppColors\";\nimport Header from \"../../components/header/Header\";\nimport Api from \"../../services/Api\";\n\nvar DisciplineReportSelection = function (_Component) {\n  _inherits(DisciplineReportSelection, _Component);\n\n  var _super = _createSuper(DisciplineReportSelection);\n\n  function DisciplineReportSelection(props) {\n    var _this;\n\n    _classCallCheck(this, DisciplineReportSelection);\n\n    _this = _super.call(this, props);\n\n    _this.getQuestionnaires = function _callee() {\n      var _JSON$parse, _id, questionnaires;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n\n              _this.setState({\n                isLoading: true\n              });\n\n              _context.t0 = JSON;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@APP:user'));\n\n            case 5:\n              _context.t1 = _context.sent;\n              _JSON$parse = _context.t0.parse.call(_context.t0, _context.t1);\n              _id = _JSON$parse._id;\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(Api.post('/questionnaire/findByIdProfessor', {\n                idProfessor: _id,\n                active: true\n              }));\n\n            case 10:\n              questionnaires = _context.sent.data.questionnaires;\n\n              if (questionnaires !== null) {\n                _this.setState({\n                  questionnaires: questionnaires\n                });\n              }\n\n              _this.setState({\n                isLoading: false\n              });\n\n              _context.next = 18;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t2 = _context[\"catch\"](0);\n              console.log(_context.t2);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 15]], Promise);\n    };\n\n    _this.state = {\n      questionnaires: [],\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(DisciplineReportSelection, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.getQuestionnaires();\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var questionnaires = this.state.questionnaires;\n\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.Indicator,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: AppColors.backgroundColor1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }\n        }));\n      }\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, React.createElement(Header, {\n        title: \"Sele\\xE7\\xE3o de Disciplinas\",\n        menuIcon: \"menu\",\n        navigation: this.props.navigation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }), React.createElement(ScrollView, {\n        style: styles.scroll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, questionnaires !== null && questionnaires.map(function (object) {\n        var obj = object[0];\n        var discipline = obj.idDiscipline;\n        var professor = obj.idProfessor;\n        var objectClass = obj.idClass;\n        return React.createElement(TouchableOpacity, {\n          key: obj._id,\n          onPress: function onPress() {\n            _this2.props.navigation.navigate('screenReport', {\n              questionnaires: object,\n              discipline: discipline,\n              professor: professor,\n              objectClass: objectClass\n            });\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }\n        }, React.createElement(Card, {\n          containerStyle: styles.cardStyle,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 37\n          }\n        }, React.createElement(Text, {\n          style: styles.nameDiscipline,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 41\n          }\n        }, discipline.code, \" - \", discipline.title, \" - \", objectClass.code, \" - \", professor.name)));\n      })));\n    }\n  }]);\n\n  return DisciplineReportSelection;\n}(Component);\n\nexport { DisciplineReportSelection as default };\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: AppColors.backgroundColor10,\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    flex: 1\n  },\n  scroll: {\n    width: '100%',\n    maxHeight: '80%'\n  },\n  nameDiscipline: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    marginBottom: 10\n  },\n  Indicator: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: AppColors.backgroundColor4\n  },\n  cardStyle: {\n    borderBottomWidth: 4,\n    borderBottomColor: AppColors.cardColor1\n  }\n});","map":{"version":3,"sources":["C:/GIT/AppProjetoTCC/src/screens/performanceReport/DisciplineReportSelection.js"],"names":["React","Component","AsyncStorage","Card","AppColors","Header","Api","DisciplineReportSelection","props","getQuestionnaires","setState","isLoading","JSON","getItem","parse","_id","post","idProfessor","active","questionnaires","data","console","log","state","styles","Indicator","backgroundColor1","container","navigation","scroll","map","object","obj","discipline","idDiscipline","professor","objectClass","idClass","navigate","cardStyle","nameDiscipline","code","title","name","StyleSheet","create","backgroundColor","backgroundColor10","alignItems","justifyContent","flex","width","maxHeight","fontSize","fontWeight","marginBottom","backgroundColor4","borderBottomWidth","borderBottomColor","cardColor1"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View, StyleSheet, TouchableOpacity, ScrollView, AsyncStorage, ActivityIndicator } from 'react-native';\r\nimport { Card } from 'react-native-elements';\r\nimport { AppColors } from '../../colors/AppColors';\r\n\r\nimport Header from '../../components/header/Header';\r\nimport Api from '../../services/Api';\r\n\r\nexport default class DisciplineReportSelection extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            questionnaires: [],\r\n            isLoading: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.getQuestionnaires();\r\n    }\r\n\r\n    getQuestionnaires = async () => {\r\n        try {\r\n            this.setState({isLoading: true})\r\n            const { _id } = JSON.parse(await AsyncStorage.getItem('@APP:user'));\r\n            const { questionnaires } = (await Api.post('/questionnaire/findByIdProfessor', { idProfessor: _id, active: true })).data;\r\n\r\n            if (questionnaires !== null) {\r\n                this.setState({ questionnaires });\r\n            }\r\n            this.setState({isLoading: false})\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { questionnaires } = this.state;\r\n\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <View style={styles.Indicator}>\r\n                    <ActivityIndicator size=\"large\" color={AppColors.backgroundColor1} />\r\n                </View>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <Header\r\n                    title='Seleção de Disciplinas'\r\n                    menuIcon='menu'\r\n                    navigation={this.props.navigation}\r\n                />\r\n                <ScrollView style={styles.scroll} >\r\n                    {questionnaires !== null &&\r\n                        questionnaires.map(object => {\r\n                            const obj = object[0]\r\n                            const discipline = obj.idDiscipline;\r\n                            const professor = obj.idProfessor;\r\n                            const objectClass = obj.idClass;\r\n                            return (\r\n                                <TouchableOpacity key={obj._id} onPress={() => { this.props.navigation.navigate('screenReport',\r\n                                { questionnaires: object, discipline, professor, objectClass }) }}>\r\n                                    <Card containerStyle={\r\n                                        styles.cardStyle\r\n                                    }>\r\n                                        <Text style={styles.nameDiscipline}>{discipline.code} - {discipline.title} - {objectClass.code} - {professor.name}</Text>\r\n                                    </Card>\r\n                                </TouchableOpacity>\r\n                            );\r\n                        })\r\n                    }\r\n                </ScrollView>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: AppColors.backgroundColor10,\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        flex: 1,\r\n    },\r\n    scroll: {\r\n        width: '100%',\r\n        maxHeight: '80%',\r\n    },\r\n    nameDiscipline: {\r\n        fontSize: 16,\r\n        fontWeight: \"bold\",\r\n        marginBottom: 10\r\n    },\r\n    Indicator: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: AppColors.backgroundColor4\r\n    },\r\n    cardStyle: {\r\n        borderBottomWidth: 4, \r\n        borderBottomColor: AppColors.cardColor1,\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}