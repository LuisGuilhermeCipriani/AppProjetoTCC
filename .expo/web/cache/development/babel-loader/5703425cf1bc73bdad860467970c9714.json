{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\GIT\\\\AppProjetoTCC\\\\src\\\\screens\\\\quiz\\\\Quiz.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport RadioForm from 'react-native-simple-radio-button';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { RadioButton } from 'react-native-paper';\nimport Header from \"../../components/header/Header\";\nimport Api from \"../../services/Api\";\n\nvar Quiz = function (_Component) {\n  _inherits(Quiz, _Component);\n\n  var _super = _createSuper(Quiz);\n\n  function Quiz(props) {\n    var _this;\n\n    _classCallCheck(this, Quiz);\n\n    _this = _super.call(this, props);\n\n    _this.initial = function _callee() {\n      var _this$state, question_answer, questions, answers, list, listQuestionAnswer;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state = _this.state, question_answer = _this$state.question_answer, questions = _this$state.questions, answers = _this$state.answers;\n              list = question_answer.map(function (object) {\n                var question = questions.filter(function (obj) {\n                  return obj._id == object.idQuestion;\n                })[0];\n                var answer = answers.filter(function (obj) {\n                  return obj._id == object.idAnswer;\n                })[0];\n                return _objectSpread(_objectSpread({}, object), {}, {\n                  idAnswer: answer,\n                  idQuestion: question\n                });\n              });\n              listQuestionAnswer = list.map(function (object, index) {\n                return list.filter(function (obj) {\n                  return obj.idQuestion.option == index + 1;\n                })[0];\n              });\n\n              _this.setState({\n                question_answer: listQuestionAnswer,\n                commentary: _this.questionnaire.commentary\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getQuestions = function _callee2() {\n      var response, questions;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(Api.get('/question/findAll'));\n\n            case 3:\n              response = _context2.sent;\n              questions = response.data.questions;\n\n              _this.setState({\n                questions: questions\n              });\n\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    _this.getAnswers = function _callee3() {\n      var response, answers;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(Api.get('/answer/findAll'));\n\n            case 3:\n              response = _context3.sent;\n              answers = response.data.answers;\n\n              _this.setState({\n                answers: answers\n              });\n\n              _context3.next = 11;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    _this.updateState = function (value) {\n      var _this$state2 = _this.state,\n          commentary = _this$state2.commentary,\n          answers = _this$state2.answers,\n          index = _this$state2.index;\n      var question_answer = _this.state.question_answer;\n      var answer = answers.filter(function (object) {\n        return object.option == value;\n      })[0];\n      question_answer[index] = _objectSpread(_objectSpread({}, question_answer[index]), {}, {\n        idAnswer: answer\n      });\n\n      _this.setState({\n        question_answer: question_answer\n      });\n    };\n\n    _this.saveState = function _callee4() {\n      var _this$state3, question_answer, commentary, idQuestionnaire, list, response;\n\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _this$state3 = _this.state, question_answer = _this$state3.question_answer, commentary = _this$state3.commentary;\n              idQuestionnaire = question_answer[0].idQuestionnaire;\n              list = {\n                idQuestionnaire: idQuestionnaire,\n                commentary: commentary,\n                status: 'I',\n                questionAnswer: question_answer\n              };\n              _context4.next = 6;\n              return _regeneratorRuntime.awrap(Api.put('/questionnaire/update', list));\n\n            case 6:\n              response = _context4.sent;\n              Alert.alert('Progresso salvo com sucesso!');\n              _context4.next = 13;\n              break;\n\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log(_context4.t0);\n\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 10]], Promise);\n    };\n\n    _this.updateQuestionnaire = function _callee5() {\n      var _this$state4, question_answer, commentary, idQuestionnaire, list, response;\n\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _this$state4 = _this.state, question_answer = _this$state4.question_answer, commentary = _this$state4.commentary;\n              idQuestionnaire = question_answer[0].idQuestionnaire;\n              list = {\n                idQuestionnaire: idQuestionnaire,\n                commentary: commentary,\n                status: 'S',\n                questionAnswer: question_answer\n              };\n              _context5.next = 6;\n              return _regeneratorRuntime.awrap(Api.put('/questionnaire/update', list));\n\n            case 6:\n              response = _context5.sent;\n              Alert.alert('QuestionÃ¡rio enviado com sucesso!');\n              _context5.next = 13;\n              break;\n\n            case 10:\n              _context5.prev = 10;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.log(_context5.t0);\n\n            case 13:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 10]], Promise);\n    };\n\n    _this.renderScreen1 = function () {\n      var _this$state5 = _this.state,\n          index = _this$state5.index,\n          question_answer = _this$state5.question_answer;\n      var idQuestion = question_answer[index].idQuestion;\n      return React.createElement(View, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 16\n        }\n      }, React.createElement(View, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.countQuestion,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      }, \"Quest\\xE3o \", idQuestion.option, \" de \", question_answer.length)));\n    };\n\n    _this.renderScreen2 = function () {\n      var _this$state6 = _this.state,\n          index = _this$state6.index,\n          questions = _this$state6.questions;\n      return React.createElement(View, {\n        style: {\n          alignItems: 'center'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 16\n        }\n      }, React.createElement(View, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.question,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      }, questions[index].title)));\n    };\n\n    _this.boundMinimumLimit = function () {\n      var index = _this.state.index;\n\n      if (index > 0) {\n        index = index - 1;\n\n        _this.setState({\n          index: index\n        });\n      }\n    };\n\n    _this.boundMaximumLimit = function () {\n      var _this$state7 = _this.state,\n          questions = _this$state7.questions,\n          index = _this$state7.index;\n\n      if (index <= questions.length - 1) {\n        index = index + 1;\n\n        _this.setState({\n          index: index\n        });\n      }\n    };\n\n    _this.renderQuestions = function () {\n      var _this$state8 = _this.state,\n          index = _this$state8.index,\n          question_answer = _this$state8.question_answer;\n\n      if (question_answer.length > 0) {\n        var question = question_answer[index].idQuestion.title;\n        return question;\n      }\n    };\n\n    _this.renderRadio = function () {\n      var _this$state9 = _this.state,\n          index = _this$state9.index,\n          question_answer = _this$state9.question_answer,\n          answers = _this$state9.answers;\n      var option = question_answer[index].idAnswer.option;\n      return React.createElement(View, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }\n      }, answers.map(function (object) {\n        return React.createElement(View, {\n          key: object._id,\n          style: {\n            flexDirection: 'row',\n            alignItems: 'center'\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 28\n          }\n        }, React.createElement(RadioButton, {\n          value: object.option,\n          status: option === object.option ? 'checked' : 'unchecked',\n          onPress: function onPress() {\n            _this.updateState(object.option);\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }\n        }), React.createElement(Text, {\n          style: {\n            fontSize: 20\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }\n        }, object.option, \" - \", object.title));\n      }));\n    };\n\n    _this.state = {\n      questions: [],\n      answers: [],\n      question_answer: [],\n      index: 0,\n      commentary: ''\n    };\n    _this.questionnaire = _this.props.navigation.getParam('questionnaire');\n    return _this;\n  }\n\n  _createClass(Quiz, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              this.setState({\n                question_answer: this.questionnaire.questionAnswer\n              });\n              _context6.next = 3;\n              return _regeneratorRuntime.awrap(this.getQuestions());\n\n            case 3:\n              _context6.next = 5;\n              return _regeneratorRuntime.awrap(this.getAnswers());\n\n            case 5:\n              this.initial();\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var navigation = this.props.navigation;\n      var _this$state10 = this.state,\n          answers = _this$state10.answers,\n          index = _this$state10.index,\n          question_answer = _this$state10.question_answer;\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }\n      }, React.createElement(Header, {\n        title: \"Question\\xE1rio\",\n        menuIcon: \"menu\",\n        navigation: navigation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }\n      }), question_answer.length > 0 && index < question_answer.length && React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }\n      }, this.renderScreen1(), React.createElement(View, {\n        style: styles.containerBody,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.question,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 29\n        }\n      }, this.renderQuestions()), this.renderRadio())), question_answer.length > 0 && index == question_answer.length && React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          backgroundColor: '#bfbfbf'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }\n      }, \"Se quiser deixe um coment\\xE1rio abaixo:\"), React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'flex-start',\n          alignItems: 'center',\n          backgroundColor: '#bfbfbf'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }\n      }, React.createElement(TextInput, {\n        width: \"90%\",\n        height: \"80%\",\n        marginTop: 20,\n        borderRadius: 10,\n        fontSize: 20,\n        multiline: true,\n        textAlignVertical: \"top\",\n        padding: 10,\n        value: this.state.commentary,\n        placeholder: \"Digite aqui...\",\n        backgroundColor: \"#ffffff\",\n        onChangeText: function onChangeText(commentary) {\n          _this2.setState({\n            commentary: commentary\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 29\n        }\n      }), React.createElement(View, {\n        style: {\n          width: '100%',\n          flexDirection: 'row',\n          justifyContent: 'space-around'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 29\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: 'gray',\n          padding: 15,\n          marginTop: 10\n        },\n        onPress: function onPress() {\n          _this2.setState({\n            commentary: ''\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white',\n          fontSize: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 37\n        }\n      }, \"Limpar\"))))), React.createElement(View, {\n        style: styles.buttonsField,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 17\n        }\n      }, index !== 0 && React.createElement(TouchableOpacity, {\n        style: styles.backButton,\n        onPress: function onPress() {\n          _this2.boundMinimumLimit();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 25\n        }\n      }, React.createElement(Icon, {\n        name: \"chevron-left\",\n        style: styles.icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 29\n        }\n      }), React.createElement(Text, {\n        style: styles.textButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 29\n        }\n      }, \"Anterior\")), React.createElement(TouchableOpacity, {\n        style: styles.saveButton,\n        onPress: function onPress() {\n          return _this2.saveState();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }\n      }, React.createElement(Icon, {\n        name: \"save\",\n        style: styles.icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }\n      }), React.createElement(Text, {\n        style: styles.textButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }\n      }, \"Salvar\")), question_answer.length + 1 !== index + 1 ? React.createElement(TouchableOpacity, {\n        style: styles.forwardButton,\n        onPress: function onPress() {\n          _this2.boundMaximumLimit();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 29\n        }\n      }, React.createElement(Icon, {\n        name: \"chevron-right\",\n        style: styles.icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 33\n        }\n      }), React.createElement(Text, {\n        style: styles.textButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 33\n        }\n      }, \"Pr\\xF3ximo\")) : React.createElement(TouchableOpacity, {\n        style: styles.sendButton,\n        onPress: function onPress() {\n          Alert.alert('AtenÃ§Ã£o', 'Deseja mesmo enviar o questionÃ¡rio?', [{\n            text: 'Sim',\n            onPress: function onPress() {\n              return _this2.updateQuestionnaire();\n            }\n          }, {\n            text: 'NÃ£o'\n          }]);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 29\n        }\n      }, React.createElement(Icon, {\n        name: \"send\",\n        style: styles.icon2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 33\n        }\n      }), React.createElement(Text, {\n        style: styles.textButton2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 33\n        }\n      }, \"Enviar\"))));\n    }\n  }]);\n\n  return Quiz;\n}(Component);\n\nexport { Quiz as default };\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    backgroundColor: '#bfbfbf',\n    height: '100%',\n    flex: 1,\n    flexDirection: 'column'\n  },\n  buttonsField: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    width: '90%',\n    height: '10%',\n    alignItems: 'center',\n    marginTop: 10\n  },\n  forwardButton: {\n    backgroundColor: '#d3302f',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    borderRadius: 5,\n    elevation: 5,\n    width: '30%'\n  },\n  backButton: {\n    backgroundColor: '#d3302f',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    borderRadius: 5,\n    elevation: 5,\n    width: '30%'\n  },\n  commentButton: {\n    backgroundColor: '#d3302f',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    borderRadius: 5,\n    paddingTop: 5,\n    paddingBottom: 5,\n    paddingLeft: 15,\n    paddingRight: 15,\n    marginLeft: 10\n  },\n  saveButton: {\n    backgroundColor: '#206020',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    borderRadius: 5,\n    elevation: 5,\n    width: '30%'\n  },\n  sendButton: {\n    backgroundColor: '#d2d22d',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    borderRadius: 5,\n    elevation: 5,\n    width: '30%'\n  },\n  textButton: {\n    color: '#ffffff',\n    padding: 10,\n    fontSize: 15,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    textShadowOffset: {\n      width: -1,\n      height: 1\n    },\n    textShadowRadius: 5\n  },\n  textButton2: {\n    color: '#000000',\n    padding: 10,\n    fontSize: 15,\n    fontWeight: 'bold'\n  },\n  countQuestion: {\n    fontSize: 20,\n    textAlign: 'center',\n    fontWeight: 'bold',\n    padding: 10\n  },\n  question: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    textAlign: 'justify',\n    padding: 20,\n    paddingBottom: 30\n  },\n  icon: {\n    color: '#ffffff',\n    fontSize: 20,\n    paddingLeft: 10\n  },\n  icon2: {\n    color: '#000000',\n    fontSize: 20,\n    paddingLeft: 10\n  },\n  containerBody: {\n    backgroundColor: '#ffffff',\n    height: '65%',\n    width: '90%',\n    borderRadius: 10\n  },\n  scrollView: {\n    borderLeftWidth: 4,\n    borderRightWidth: 4,\n    borderTopWidth: 4,\n    borderBottomWidth: 4,\n    marginTop: 20,\n    height: 400,\n    borderColor: '#d3302f',\n    backgroundColor: '#ffffff'\n  }\n});","map":{"version":3,"sources":["C:/GIT/AppProjetoTCC/src/screens/quiz/Quiz.js"],"names":["React","Component","RadioForm","Icon","RadioButton","Header","Api","Quiz","props","initial","state","question_answer","questions","answers","list","map","object","question","filter","obj","_id","idQuestion","answer","idAnswer","listQuestionAnswer","index","option","setState","commentary","questionnaire","getQuestions","get","response","data","console","log","getAnswers","updateState","value","saveState","idQuestionnaire","status","questionAnswer","put","Alert","alert","updateQuestionnaire","renderScreen1","styles","countQuestion","length","renderScreen2","alignItems","title","boundMinimumLimit","boundMaximumLimit","renderQuestions","renderRadio","flexDirection","fontSize","navigation","getParam","container","containerBody","flex","backgroundColor","justifyContent","width","padding","marginTop","color","buttonsField","backButton","icon","textButton","saveButton","forwardButton","sendButton","text","onPress","icon2","textButton2","StyleSheet","create","height","borderRadius","elevation","commentButton","paddingTop","paddingBottom","paddingLeft","paddingRight","marginLeft","textShadowColor","textShadowOffset","textShadowRadius","fontWeight","textAlign","scrollView","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","borderColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity, Alert, TextInput } from 'react-native';\r\nimport RadioForm from 'react-native-simple-radio-button';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { RadioButton } from 'react-native-paper';\r\n\r\nimport Header from '../../components/header/Header';\r\nimport Api from '../../services/Api';\r\n\r\nexport default class Quiz extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            questions: [],\r\n            answers: [],\r\n            question_answer: [],\r\n            index: 0,\r\n            commentary: ''\r\n        };\r\n        this.questionnaire = this.props.navigation.getParam('questionnaire');\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({ question_answer: this.questionnaire.questionAnswer });\r\n        await this.getQuestions();\r\n        await this.getAnswers();\r\n        this.initial();\r\n    }\r\n\r\n    initial = async () => {\r\n        const { question_answer, questions, answers } = this.state;\r\n\r\n        const list = question_answer.map(object => {\r\n            const question = questions.filter(obj => obj._id == object.idQuestion)[0];\r\n            const answer = answers.filter(obj => obj._id == object.idAnswer)[0];\r\n            return ({\r\n                ...object,\r\n                idAnswer: answer,\r\n                idQuestion: question\r\n            })\r\n        });\r\n\r\n        const listQuestionAnswer = list.map((object, index) => {\r\n            return list.filter(obj => obj.idQuestion.option == index + 1)[0];\r\n        });\r\n\r\n        this.setState({ question_answer: listQuestionAnswer, commentary: this.questionnaire.commentary })\r\n    }\r\n\r\n    getQuestions = async () => {\r\n        try {\r\n            const response = await Api.get('/question/findAll');\r\n\r\n            const { questions } = response.data;\r\n\r\n            this.setState({ questions });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    getAnswers = async () => {\r\n        try {\r\n            const response = await Api.get('/answer/findAll');\r\n\r\n            const { answers } = response.data;\r\n\r\n            this.setState({ answers });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    updateState = (value) => {\r\n        const { commentary, answers, index } = this.state;\r\n        let { question_answer } = this.state;\r\n        const answer = answers.filter(object => object.option == value)[0];\r\n\r\n        question_answer[index] = {\r\n            ...question_answer[index],\r\n            idAnswer: answer\r\n        };\r\n\r\n        this.setState({ question_answer });\r\n    }\r\n\r\n    saveState = async () => {\r\n        try {\r\n            const { question_answer, commentary } = this.state;\r\n            const { idQuestionnaire } = question_answer[0];\r\n            const list = {\r\n                idQuestionnaire,\r\n                commentary,\r\n                status: 'I',\r\n                questionAnswer: question_answer\r\n            }\r\n            const response = await Api.put('/questionnaire/update', list)\r\n            Alert.alert('Progresso salvo com sucesso!')\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    updateQuestionnaire = async () => {\r\n        try {\r\n            const { question_answer, commentary } = this.state;\r\n            const { idQuestionnaire } = question_answer[0];\r\n            const list = {\r\n                idQuestionnaire,\r\n                commentary,\r\n                status: 'S',\r\n                questionAnswer: question_answer\r\n            }\r\n            const response = await Api.put('/questionnaire/update', list)\r\n            Alert.alert('QuestionÃ¡rio enviado com sucesso!')\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    renderScreen1 = () => {\r\n        const { index, question_answer } = this.state;\r\n        const { idQuestion } = question_answer[index];\r\n        return <View>\r\n            <View>\r\n                <Text style={styles.countQuestion}>QuestÃ£o {idQuestion.option} de {question_answer.length}</Text>\r\n            </View>\r\n        </View>\r\n    }\r\n\r\n    renderScreen2 = () => {\r\n        const { index, questions } = this.state;\r\n\r\n        return <View style={{ alignItems: 'center' }}>\r\n            <View>\r\n                <Text style={styles.question}>{questions[index].title}</Text>\r\n            </View>\r\n        </View>\r\n    }\r\n\r\n    boundMinimumLimit = () => {\r\n        let { index } = this.state;\r\n        if (index > 0) {\r\n            index = index - 1;\r\n            this.setState({ index });\r\n        }\r\n    }\r\n\r\n    boundMaximumLimit = () => {\r\n        let { questions, index } = this.state;\r\n        if (index <= questions.length - 1) {\r\n            index = index + 1;\r\n            this.setState({ index });\r\n        }\r\n    }\r\n\r\n    renderQuestions = () => {\r\n        const { index, question_answer } = this.state;\r\n        if (question_answer.length > 0) {\r\n\r\n            const question = question_answer[index].idQuestion.title;\r\n            return question;\r\n        }\r\n    }\r\n\r\n    renderRadio = () => {\r\n        const { index, question_answer, answers } = this.state;\r\n        const { option } = question_answer[index].idAnswer;\r\n        return (\r\n            <View>\r\n                {answers.map(object => {\r\n                    return <View key={object._id} style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                        <RadioButton\r\n                            value={object.option}\r\n                            status={option === object.option ? 'checked' : 'unchecked'}\r\n                            onPress={() => { this.updateState(object.option) }}\r\n                        />\r\n                        <Text style={{ fontSize: 20 }}>{object.option} - {object.title}</Text>\r\n                    </View>\r\n                })}\r\n            </View>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { navigation } = this.props;\r\n        const { answers, index, question_answer } = this.state;\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <Header\r\n                    title='QuestionÃ¡rio'\r\n                    menuIcon='menu'\r\n                    navigation={navigation}\r\n                />\r\n                {(question_answer.length > 0 && index < question_answer.length) &&\r\n                    <View>\r\n                        {this.renderScreen1()}\r\n                        <View style={styles.containerBody}>\r\n                            <Text style={styles.question}>{this.renderQuestions()}</Text>\r\n                            {this.renderRadio()}\r\n                        </View>\r\n                    </View>\r\n                }\r\n                {(question_answer.length > 0 && index == question_answer.length) &&\r\n                    <View style={{ flex: 1 }}>\r\n                        <Text style={{ backgroundColor: '#bfbfbf' }}>Se quiser deixe um comentÃ¡rio abaixo:</Text>\r\n                        <View style={{ flex: 1, justifyContent: 'flex-start', alignItems: 'center', backgroundColor: '#bfbfbf' }}>\r\n                            <TextInput\r\n                                width='90%'\r\n                                height='80%'\r\n                                marginTop={20}\r\n                                borderRadius={10}\r\n                                fontSize={20}\r\n                                multiline={true}\r\n                                textAlignVertical='top'\r\n                                padding={10}\r\n                                value={this.state.commentary}\r\n                                placeholder='Digite aqui...'\r\n                                backgroundColor='#ffffff'\r\n                                onChangeText={(commentary) => {\r\n                                    this.setState({ commentary })\r\n                                }}\r\n                            />\r\n                            <View style={{ width: '100%', flexDirection: 'row', justifyContent: 'space-around' }}>\r\n                                <TouchableOpacity style={{ alignItems: 'center', justifyContent: 'center', backgroundColor: 'gray', padding: 15, marginTop: 10 }} onPress={() => {\r\n                                    this.setState({ commentary: '' })\r\n                                }}>\r\n                                    <Text style={{ color: 'white', fontSize: 15 }}>Limpar</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        </View>\r\n                    </View>\r\n                }\r\n                <View style={styles.buttonsField}>\r\n                    {\r\n                        index !== 0 &&\r\n                        <TouchableOpacity style={styles.backButton} onPress={() => { this.boundMinimumLimit() }}>\r\n                            <Icon name='chevron-left' style={styles.icon} />\r\n                            <Text style={styles.textButton}>Anterior</Text>\r\n                        </TouchableOpacity>\r\n                    }\r\n                    <TouchableOpacity style={styles.saveButton} onPress={() => this.saveState()}>\r\n                        <Icon name='save' style={styles.icon} />\r\n                        <Text style={styles.textButton}>Salvar</Text>\r\n                    </TouchableOpacity>\r\n                    {\r\n                        question_answer.length + 1 !== index + 1 ?\r\n                            <TouchableOpacity style={styles.forwardButton} onPress={() => { this.boundMaximumLimit() }}>\r\n                                <Icon name='chevron-right' style={styles.icon} />\r\n                                <Text style={styles.textButton}>PrÃ³ximo</Text>\r\n                            </TouchableOpacity>\r\n                            :\r\n                            <TouchableOpacity style={styles.sendButton} onPress={() => {\r\n                                Alert.alert('AtenÃ§Ã£o', 'Deseja mesmo enviar o questionÃ¡rio?',\r\n                                    [\r\n                                        { text: 'Sim', onPress: () => this.updateQuestionnaire() },\r\n                                        { text: 'NÃ£o' },\r\n                                    ])\r\n                            }}>\r\n                                <Icon name='send' style={styles.icon2} />\r\n                                <Text style={styles.textButton2}>Enviar</Text>\r\n                            </TouchableOpacity>\r\n                    }\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        alignItems: 'center',\r\n        backgroundColor: '#bfbfbf',\r\n        height: '100%',\r\n        flex: 1,\r\n        flexDirection: 'column'\r\n    },\r\n    buttonsField: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        width: '90%',\r\n        height: '10%',\r\n        alignItems: 'center',\r\n        marginTop: 10\r\n    },\r\n    forwardButton: {\r\n        backgroundColor: '#d3302f',\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        borderRadius: 5,\r\n        elevation: 5,\r\n        width: '30%'\r\n    },\r\n    backButton: {\r\n        backgroundColor: '#d3302f',\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        borderRadius: 5,\r\n        elevation: 5,\r\n        width: '30%'\r\n    },\r\n    commentButton: {\r\n        backgroundColor: '#d3302f',\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        borderRadius: 5,\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n        paddingLeft: 15,\r\n        paddingRight: 15,\r\n        marginLeft: 10\r\n    },\r\n    saveButton: {\r\n        backgroundColor: '#206020',\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        borderRadius: 5,\r\n        elevation: 5,\r\n        width: '30%'\r\n    },\r\n    sendButton: {\r\n        backgroundColor: '#d2d22d',\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        borderRadius: 5,\r\n        elevation: 5,\r\n        width: '30%'\r\n    },\r\n    textButton: {\r\n        color: '#ffffff',\r\n        padding: 10,\r\n        fontSize: 15,\r\n        textShadowColor: 'rgba(0, 0, 0, 0.75)',\r\n        textShadowOffset: { width: -1, height: 1 },\r\n        textShadowRadius: 5,\r\n    },\r\n    textButton2: {\r\n        color: '#000000',\r\n        padding: 10,\r\n        fontSize: 15,\r\n        fontWeight: 'bold'\r\n    },\r\n    countQuestion: {\r\n        fontSize: 20,\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        padding: 10\r\n    },\r\n    question: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        textAlign: 'justify',\r\n        padding: 20,\r\n        paddingBottom: 30\r\n    },\r\n    icon: {\r\n        color: '#ffffff',\r\n        fontSize: 20,\r\n        paddingLeft: 10\r\n    },\r\n    icon2: {\r\n        color: '#000000',\r\n        fontSize: 20,\r\n        paddingLeft: 10\r\n    },\r\n    containerBody: {\r\n        backgroundColor: '#ffffff',\r\n        height: '65%',\r\n        width: '90%',\r\n        borderRadius: 10,\r\n    },\r\n    scrollView: {\r\n        borderLeftWidth: 4,\r\n        borderRightWidth: 4,\r\n        borderTopWidth: 4,\r\n        borderBottomWidth: 4,\r\n        marginTop: 20,\r\n        height: 400,\r\n        borderColor: '#d3302f',\r\n        backgroundColor: '#ffffff',\r\n    },\r\n})"]},"metadata":{},"sourceType":"module"}