{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\GIT\\\\AppProjetoTCC\\\\src\\\\Index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport Header from \"./components/header/Header\";\n\nvar Index = function (_Component) {\n  _inherits(Index, _Component);\n\n  var _super = _createSuper(Index);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      user: {}\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var user;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = JSON;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@APP:user'));\n\n            case 3:\n              _context.t1 = _context.sent;\n              user = _context.t0.parse.call(_context.t0, _context.t1);\n              this.setState({\n                user: user\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var navigation = this.props.navigation;\n      var type = this.state.user.type;\n      return React.createElement(View, {\n        style: {\n          width: '100%',\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'flex-start'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }\n      }, React.createElement(Header, {\n        title: \"In\\xEDcio\",\n        menuIcon: \"menu\",\n        navigation: navigation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }, type == 'S' && React.createElement(TouchableOpacity, {\n        style: styles.field1,\n        onPress: function onPress() {\n          navigation.navigate('SelectionScreen');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }\n      }, React.createElement(Icon, {\n        name: \"square-o\",\n        color: \"#ffffff\",\n        size: 40,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 33\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 33\n        }\n      }, \"Responder \", \"\\n\", \"Question\\xE1rio\")), (type == 'S' || type == 'P') && React.createElement(TouchableOpacity, {\n        style: styles.field2,\n        onPress: function onPress() {\n          navigation.navigate('DisciplineScreen');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }\n      }, React.createElement(Icon, {\n        name: \"search\",\n        color: \"#ffffff\",\n        size: 40,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 33\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 33\n        }\n      }, \"Consultar \", \"\\n\", \"Disciplinas\"))), React.createElement(View, {\n        style: {\n          alignItems: 'flex-end',\n          justifyContent: 'center',\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }, type == 'P' && React.createElement(TouchableOpacity, {\n        style: styles.field3,\n        onPress: function onPress() {\n          navigation.navigate('chartScreen');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }\n      }, React.createElement(Icon, {\n        name: \"line-chart\",\n        color: \"#ffffff\",\n        size: 40,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 33\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 33\n        }\n      }, \"Consultar \", \"\\n\", \"Desempenho\")), type == 'S' && React.createElement(TouchableOpacity, {\n        style: styles.field4,\n        onPress: function onPress() {\n          navigation.navigate('AnsweredScreen');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }\n      }, React.createElement(Icon, {\n        name: \"check-square-o\",\n        color: \"#ffffff\",\n        size: 40,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 33\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 33\n        }\n      }, \"Question\\xE1rios \", \"\\n\", \"respondidos\")))));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nexport { Index as default };\nvar styles = StyleSheet.create({\n  field1: {\n    backgroundColor: '#941e1e',\n    width: '55%',\n    height: 150,\n    marginRight: 5,\n    marginBottom: 5,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  field2: {\n    backgroundColor: '#d84141',\n    width: '35%',\n    height: 150,\n    marginLeft: 5,\n    marginBottom: 5,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  field3: {\n    backgroundColor: '#d84141',\n    width: '35%',\n    height: 150,\n    marginRight: 5,\n    marginTop: 5,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  field4: {\n    backgroundColor: '#941e1e',\n    width: '55%',\n    height: 150,\n    marginLeft: 5,\n    marginTop: 5,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    color: 'white',\n    fontSize: 20,\n    marginLeft: 10,\n    marginTop: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    textShadowOffset: {\n      width: -1,\n      height: 1\n    },\n    textShadowRadius: 10\n  }\n});","map":{"version":3,"sources":["C:/GIT/AppProjetoTCC/src/Index.js"],"names":["React","Component","AsyncStorage","Icon","Header","Index","props","state","user","JSON","getItem","parse","setState","navigation","type","width","flex","alignItems","justifyContent","flexDirection","styles","field1","navigate","text","field2","field3","field4","StyleSheet","create","backgroundColor","height","marginRight","marginBottom","marginLeft","marginTop","color","fontSize","textShadowColor","textShadowOffset","textShadowRadius"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View, TouchableOpacity, StyleSheet, AsyncStorage } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nimport Header from './components/header/Header';\r\n\r\nexport default class Index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {}\r\n        }\r\n    }\r\n    async componentDidMount(){\r\n        const user = JSON.parse(await AsyncStorage.getItem('@APP:user'));\r\n        this.setState({user})\r\n    }\r\n\r\n    render() {\r\n        const { navigation } = this.props;\r\n        const { type } = this.state.user;\r\n\r\n        return (\r\n            <View style={{ width: '100%', flex: 1, alignItems: 'center', justifyContent: 'flex-start' }}>\r\n                <Header\r\n                    title='Início'\r\n                    menuIcon='menu'\r\n                    navigation={navigation}\r\n                />\r\n                <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n                    <View style={{ flexDirection: 'row' }}>\r\n                        {type == 'S' &&\r\n                            <TouchableOpacity style={styles.field1} onPress={() => {\r\n                                navigation.navigate('SelectionScreen')\r\n                            }}>\r\n                                <Icon name='square-o' color='#ffffff' size={40} />\r\n                                <Text style={styles.text}>Responder {\"\\n\"}Questionário</Text>\r\n                            </TouchableOpacity>\r\n                        }\r\n                        {(type == 'S' || type == 'P') &&\r\n                            <TouchableOpacity style={styles.field2} onPress={() => {\r\n                                navigation.navigate('DisciplineScreen')\r\n                            }}>\r\n                                <Icon name='search' color='#ffffff' size={40} />\r\n                                <Text style={styles.text}>Consultar {\"\\n\"}Disciplinas</Text>\r\n                            </TouchableOpacity>\r\n                        }\r\n                    </View>\r\n                    <View style={{ alignItems: 'flex-end', justifyContent: 'center', flexDirection: 'row' }}>\r\n                        {type == 'P' &&\r\n                            <TouchableOpacity style={styles.field3} onPress={() => {\r\n                                navigation.navigate('chartScreen')\r\n                            }}>\r\n                                <Icon name='line-chart' color='#ffffff' size={40} />\r\n                                <Text style={styles.text}>Consultar {\"\\n\"}Desempenho</Text>\r\n                            </TouchableOpacity>\r\n                        }\r\n                        {type == 'S' &&\r\n                            <TouchableOpacity style={styles.field4} onPress={() => {\r\n                                navigation.navigate('AnsweredScreen')\r\n                            }}>\r\n                                <Icon name='check-square-o' color='#ffffff' size={40} />\r\n                                <Text style={styles.text}>Questionários {\"\\n\"}respondidos</Text>\r\n                            </TouchableOpacity>\r\n                        }\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    field1: {\r\n        backgroundColor: '#941e1e',\r\n        width: '55%',\r\n        height: 150,\r\n        marginRight: 5,\r\n        marginBottom: 5,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    field2: {\r\n        backgroundColor: '#d84141',\r\n        width: '35%',\r\n        height: 150,\r\n        marginLeft: 5,\r\n        marginBottom: 5,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    field3: {\r\n        backgroundColor: '#d84141',\r\n        width: '35%',\r\n        height: 150,\r\n        marginRight: 5,\r\n        marginTop: 5,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    field4: {\r\n        backgroundColor: '#941e1e',\r\n        width: '55%',\r\n        height: 150,\r\n        marginLeft: 5,\r\n        marginTop: 5,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    text: {\r\n        color: 'white',\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        marginTop: 10,\r\n        textShadowColor: 'rgba(0, 0, 0, 0.75)',\r\n        textShadowOffset: { width: -1, height: 1 },\r\n        textShadowRadius: 10,\r\n    }\r\n})\r\n\r\n"]},"metadata":{},"sourceType":"module"}